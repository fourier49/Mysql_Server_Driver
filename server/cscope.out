cscope 15 $HOME/samba/server_driver/socket/server/server -q 0000003006 0000250662
	@mysql_sum.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<°rög.h
>

5 
	~"my°dlib.h
"

6 
	~"∑ckëPrŸŸy≥.h
"

7 
	~"∑ckëPro˚ssög.h
"

9 
	~"mysql_sum.h
"

11 
	~<time.h
>

13 
	~"/u§/ö˛ude/mysql/mysql.h
"

15 
	~<£m≠h‹e.h
>

16 
£m_t
 
£m2
;

17 
pf
;

19 
	gquîy
[5000]="";

20 
	gmysql_joö
[256];

21 
	gam_id
,
	gblock_id
,
	gpos
;

22 
	gamcou¡
,
	gam£t
,
	gTCP≥riod
;

23 
	gjbmac
[6];

25 
	gblock
[256]={0};

26 
	gJB_mac
[256][5]={0};

27 
	gJB_block
[256][3]={0};

29 
MYSQL
 
	gmysql
;

30 
	gho°
[100]="loˇlho°",
	gu£r
[100]="pvweb",
	gpwd
[100]="pvweb",
	gdb«me
[100]="PVWEB";

32 
SJBInfo_Upd©eFúmóªV
(
JBJoöInfoP⁄ãr
 
jbInf›å
);

34 
	$mysql_c⁄√˘
(){

35 
	`mysql_˛o£
(&
mysql
);

36 if(!
	`mysql_öô
(&
mysql
)){

37 
	`¥ötf
("Initialization fails.\n");

38 
	`exô
(1);

41 if(!
	`mysql_ªÆ_c⁄√˘
(&
mysql
,
ho°
,
u£r
,
pwd
,
db«me
,0,
NULL
,0)){

42 
	`¥ötf
("%s\nmysq»c⁄√˘ faû!!\n",
	`mysql_îr‹
(&
mysql
));

43 
	`exô
(1);

45 
	}
}

47 
	$mysql_AºayM™agî_Joö
(
SunP⁄ãr
 
pkt
,
˛õ¡_ù
[]){

48 
MYSQL_RES
 *
ªs
=
NULL
;

49 
MYSQL_ROW
 
row
=
NULL
;

51 
AMJoöReque°P⁄ãr
 
amReqPå
 = 
NULL
;

52 
amReqPå
 = (
AMJoöReque°P⁄ãr
)
pkt
->
∑ylﬂd
;

54 
t
,
i
,
cou¡
;

55 
	`°rsub
(
quîy
,
	`°æí
(query));

56 
	`°rˇt
(
quîy
,"SELECT * from ArrayManager WHERE `mac` = '");

57 
i
=1;i<6;i++)

58 
	`sql_ch¨
(
amReqPå
->
MAC
[
i
]);

59 
	`°rˇt
(
quîy
,"'");

61 
t
 = 
	`mysql_ªÆ_quîy
(&
mysql
,
quîy
,(Ë
	`°æí
(query));

62 if(
t
)

63 
	`¥ötf
("Eº‹ makög quîy: %s\n",
	`mysql_îr‹
(&
mysql
));

65 
cou¡
=0;

66 
ªs
 = 
	`mysql_°‹e_ªsu…
(&
mysql
);

67 
row
 = 
	`mysql_„tch_row
(
ªs
)){

68 
	`¥ötf
("\n");

70 if(
row
[
AM_ªgi°î_time
]!=
NULL
){

71 
	`sql_AMjoö
(0,
˛õ¡_ù
,
amReqPå
);

72 
	`¥ötf
("Already Registeránd ArrayManager Join!!\n");

75 
	`sql_AMjoö
(1,
˛õ¡_ù
,
amReqPå
);

76 
	`¥ötf
("new Registeránd ArrayManager Join!!\n");

78 
t
 = 
	`mysql_ªÆ_quîy
(&
mysql
,
quîy
,(Ë
	`°æí
(query));

79 if(
t
)

80 
	`¥ötf
("Eº‹ makög quîy: %s\n",
	`mysql_îr‹
(&
mysql
));

82 if(
row
[
AM_ªgi°î_time
]==
NULL
){

83 
	`sql_block
(
row
[
AM_am_id
]);

84 
t
 = 
	`mysql_ªÆ_quîy
(&
mysql
,
quîy
,(Ë
	`°æí
(query));

85 if(
t
)

86 
	`¥ötf
("Eº‹ makög quîy: %s\n",
	`mysql_îr‹
(&
mysql
));

88 
cou¡
++;

90 
	`mysql_‰ì_ªsu…
(
ªs
);

91 
ªs
=
NULL
;

93 if(
cou¡
!=0){

94 
mysql_joö
[0]=0x02;

95 
	`¥ötf
("Join is Successful.\n");

98 
mysql_joö
[0]=0x03;

99 
	`¥ötf
("MAC Doesn't Exist.\n");

101 
	}
}

103 
	$mysql_Jun˘i⁄Box_Joö
(
SunP⁄ãr
 
pkt
){

104 
MYSQL_RES
 *
ªs
=
NULL
;

105 
MYSQL_ROW
 
row
=
NULL
;

107 
JBJoöReque°P⁄ãr
 
jbReqPå
 = 
NULL
;

108 
JBJoöInfoP⁄ãr
 
jbInfoPå
 = 
NULL
;

110 
jbReqPå
 = (
JBJoöReque°P⁄ãr
)
pkt
->
∑ylﬂd
;

111 
jbInfoPå
 = (
JBJoöInfoP⁄ãr
)
jbReqPå
->
∑ylﬂd
;

113 
t
,
i
,
j
;

116 
	`°rsub
(
quîy
,
	`°æí
(query));

117 
	`°rˇt
(
quîy
,"SELECT * FROM ArrayManager WHERE `mac` = '");

118 
i
=1;i<6;i++)

119 
	`sql_ch¨
(
jbReqPå
->
AM_MAC
[
i
]);

120 
	`°rˇt
(
quîy
,"'");

122 
t
 = 
	`mysql_ªÆ_quîy
(&
mysql
,
quîy
,(Ë
	`°æí
(query));

123 if(
t
)

124 
	`¥ötf
("Eº‹ makög quîy: %s\n",
	`mysql_îr‹
(&
mysql
));

125 
ªs
 = 
	`mysql_°‹e_ªsu…
(&
mysql
);

126 
row
 = 
	`mysql_„tch_row
(
ªs
)){

127 
am_id
=
	`©oi
(
row
[
AM_am_id
]);

129 
	`mysql_‰ì_ªsu…
(
ªs
);

130 
ªs
=
NULL
;

132 
	`°rsub
(
quîy
,
	`°æí
(query));

133 
	`°rˇt
(
quîy
,"SELECT * FROM Block WHERE `am_id` = ");

134 
	`sql_öt
(
am_id
);

135 
	`°rˇt
(
quîy
," ORDER BY block_id LIMIT 1");

137 
t
 = 
	`mysql_ªÆ_quîy
(&
mysql
,
quîy
,(Ë
	`°æí
(query));

138 if(
t
)

139 
	`¥ötf
("Eº‹ makög quîy: %s\n",
	`mysql_îr‹
(&
mysql
));

140 
ªs
 = 
	`mysql_°‹e_ªsu…
(&
mysql
);

141 
row
 = 
	`mysql_„tch_row
(
ªs
)){

142 
block_id
=
	`©oi
(
row
[
Block_block_id
]);

144 
	`mysql_‰ì_ªsu…
(
ªs
);

145 
ªs
=
NULL
;

148 
	`°rsub
(
quîy
,
	`°æí
(query));

149 
	`°rˇt
(
quîy
,"SELECT * FROM JunctionBox WHERE `block_id` = ");

150 
	`sql_öt
(
block_id
);

151 
	`°rˇt
(
quîy
," ORDER BYÖos DESC LIMIT 1");

153 
t
 = 
	`mysql_ªÆ_quîy
(&
mysql
,
quîy
,(Ë
	`°æí
(query));

154 if(
t
)

155 
	`¥ötf
("Eº‹ makög quîy: %s\n",
	`mysql_îr‹
(&
mysql
));

156 
ªs
 = 
	`mysql_°‹e_ªsu…
(&
mysql
);

157 
pos
=0;

158 
row
 = 
	`mysql_„tch_row
(
ªs
)){

159 
pos
=
	`©oi
(
row
[
JB_pos
])+1;

161 if(
pos
==0)

162 
pos
=1;

163 
	`mysql_‰ì_ªsu…
(
ªs
);

164 
ªs
=
NULL
;

168 
i
=0;i<
jbReqPå
->
nJun˘i⁄Boxes
;i++){

169 
	`sql_JBjoö
(
jbInfoPå
);

170 
t
 = 
	`mysql_ªÆ_quîy
(&
mysql
,
quîy
,(Ë
	`°æí
(query));

171 
j
=0;j<6;j++)

172 
	`¥ötf
("%02X ",
jbInfoPå
->
JB_MAC
[
j
]);

173 if(
t
){

175 
	`¥ötf
("JunctionBox Mac is Exist.\n");

177 
	`SJBInfo_Upd©eFúmóªV
(
jbInfoPå
);

182 
	`¥ötf
("JunctionBox Join is Successful.\n");

183 
pos
++;

185 
mysql_joö
[
i
]=0x02;

186 
jbInfoPå
 = (
JBJoöInfoP⁄ãr
)(()jbInfoPå + 
SIZE_OF_JB_JOIN_INFO_PACKET
);

189 
	}
}

191 
	$SJBInfo_Upd©eFúmóªV
(
JBJoöInfoP⁄ãr
 
jbInfoPå
)

194 
j
;

195 
i
;

196 
t
;

197 
	`°rsub
(
quîy
,
	`°æí
(query));

198 
	`°rˇt
(
quîy
, "UPDATE `JunctionBox` SET `firmware_vs`= 0x");

199 
i
=0;

200 
jbInfoPå
->
Fúmw¨eVîsi⁄
[
i
]!='\0')

201 
	`sql_ch¨
(
jbInfoPå
->
Fúmw¨eVîsi⁄
[
i
++]);

203 
	`°rˇt
(
quîy
," WHERE `jb_mac` = 0x");

204  
j
=1;j<6;j++)

205 
	`sql_ch¨
(
jbInfoPå
->
JB_MAC
[
j
]);

206 
t
 = 
	`mysql_ªÆ_quîy
(&
mysql
,
quîy
,(Ë
	`°æí
(query));

207 if(
t
)

208 
	`¥ötf
("Eº‹ makög quîy: %s\n",
	`mysql_îr‹
(&
mysql
));

212 
	}
}

215 
	$mysql_PîiodicD©a
(
SunP⁄ãr
 
pkt
,
Êag
){

216 
MYSQL_RES
 *
ªs
=
NULL
;

217 
MYSQL_ROW
 
row
=
NULL
;

219 
n
,
i
,
j
,
t
;

221 
Jun˘i⁄BoxPoöãr
 
jBoxPå
 = 
NULL
;

222 
PîiodicD©aPoöãr
 
pdcPå
 = 
NULL
;

223 
TimeSèmpP⁄ãr
 
timeSèmpPå
 = 
NULL
;

224 
pdcPå
 = (
PîiodicD©aPoöãr
)
pkt
->
∑ylﬂd
;

225 
timeSèmpPå
 = &(
pdcPå
->
°amp
);

226 
jBoxPå
 = (
Jun˘i⁄BoxPoöãr
)
pdcPå
->
∑ylﬂd
;

227 
n
 = 
pdcPå
->
nJun˘i⁄Boxes
;

230 
i
 = 0; i < 
n
; i++) {

231 
	`sql_PD
(
pdcPå
,
i
,0);

233 
t
 = 
	`mysql_ªÆ_quîy
(&
mysql
,
quîy
,(Ë
	`°æí
(query));

234 if(
t
)

235 
	`¥ötf
("Eº‹ makög quîy: %s\n",
	`mysql_îr‹
(&
mysql
));

238 if(
Êag
){

242 
	`sql_PD
(
pdcPå
,
n
,1);

244 
t
 = 
	`mysql_ªÆ_quîy
(&
mysql
,
quîy
,(Ë
	`°æí
(query));

245 if(
t
)

246 
	`¥ötf
("Eº‹ makög quîy: %s\n",
	`mysql_îr‹
(&
mysql
));

249 
	`°rsub
(
quîy
,
	`°æí
(query));

250 
	`°rˇt
(
quîy
,"SELECT `block_id` , SUM(`power`)`power` FROM `JunctionBox` GROUP BY `block_id`");

252 
t
 = 
	`mysql_ªÆ_quîy
(&
mysql
,
quîy
,(Ë
	`°æí
(query));

253 if(
t
)

254 
	`¥ötf
("Eº‹ makög quîy: %s\n",
	`mysql_îr‹
(&
mysql
));

255 
ªs
 = 
	`mysql_°‹e_ªsu…
(&
mysql
);

257 
	`°rsub
(
quîy
,
	`°æí
(query));

258 
	`°rˇt
(
quîy
, "INSERT `BlockData` (`block_id` , `power` , `time`) VALUES ");

259 
row
 = 
	`mysql_„tch_row
(
ªs
)){

260 if(
row
[1]!=0){

261 
	`°rˇt
(
quîy
,"(");

262 
	`°rˇt
(
quîy
,
row
[0]);

263 
	`°rˇt
(
quîy
," , ");

264 
	`°rˇt
(
quîy
,
row
[1]);

265 
	`°rˇt
(
quîy
, " , '");

267 
	`sql_devi˚time
(
timeSèmpPå
);

268 
	`°rˇt
(
quîy
, "'");

269 
	`°rˇt
(
quîy
,"),");

272 
	`mysql_‰ì_ªsu…
(
ªs
);

273 
ªs
=
NULL
;

274 
	`°rsub
(
quîy
,1);

276 
t
 = 
	`mysql_ªÆ_quîy
(&
mysql
,
quîy
,(Ë
	`°æí
(query));

277 if(
t
)

278 
	`¥ötf
("Eº‹ makög quîy: %s\n",
	`mysql_îr‹
(&
mysql
));

279 
	`¥ötf
("JunctionBox Updateánd PanelData Insertánd BlockDate Insert Success!!\n");

283 
	`CHECK_IF_DUMYZERO_EXIST
(
pdcPå
,
n
,1);

285 
	`In£π_Dummy_Zîo2P™√l_Block_Tab
(
pdcPå
,
n
,1);

289 
	`¥ötf
("JunctionBox Update Success!!\n");

290 
	}
}

292 
	$mysql_TCPLök
(
SunP⁄ãr
 
pkt
){

293 
MYSQL_RES
 *
ªs
=
NULL
;

294 
MYSQL_ROW
 
row
=
NULL
;

295 
n
,
i
,
j
,
t
;

296 
RTC
=0x01,
UDP
=0x02,
TCP
=0x04,
CH
=0x08,
RST
=0x10;

298 
time_t
 
timï
;

299 
tm
 *
p
;

301 
TCPPîiodicLökPoöãr
 
t˝lökPå
 = 
NULL
;

302 
t˝lökPå
 = (
TCPPîiodicLökPoöãr
)
pkt
->
∑ylﬂd
;

304 
	`time
(&
timï
);

305 
p
=
	`loˇ…ime
(&
timï
);

308 
	`°rsub
(
quîy
,
	`°æí
(query));

309 
	`°rˇt
(
quîy
,"SELECT * FROM JunctionBox WHERE `jb_mac` = 0x");

310 
i
=1;i<6;i++)

311 
	`sql_ch¨
(
jbmac
[
i
]);

313 
t
 = 
	`mysql_ªÆ_quîy
(&
mysql
,
quîy
,(Ë
	`°æí
(query));

314 if(
t
)

315 
	`¥ötf
("Eº‹ makög quîy: %s\n",
	`mysql_îr‹
(&
mysql
));

316 
ªs
 = 
	`mysql_°‹e_ªsu…
(&
mysql
);

317 
row
 = 
	`mysql_„tch_row
(
ªs
)){

318 
block_id
=
	`©oi
(
row
[
JB_block_id
]);

321 
	`mysql_‰ì_ªsu…
(
ªs
);

322 
ªs
=
NULL
;

324 
	`°rsub
(
quîy
,
	`°æí
(query));

325 
	`°rˇt
(
quîy
,"SELECT * FROM Block WHERE `block_id` = ");

326 
	`sql_öt
(
block_id
);

328 
t
 = 
	`mysql_ªÆ_quîy
(&
mysql
,
quîy
,(Ë
	`°æí
(query));

329 if(
t
)

330 
	`¥ötf
("Eº‹ makög quîy: %s\n",
	`mysql_îr‹
(&
mysql
));

331 
ªs
 = 
	`mysql_°‹e_ªsu…
(&
mysql
);

332 
row
 = 
	`mysql_„tch_row
(
ªs
)){

333 
am_id
=
	`©oi
(
row
[
Block_am_id
]);

336 
	`mysql_‰ì_ªsu…
(
ªs
);

337 
ªs
=
NULL
;

340 
	`°rsub
(
quîy
,
	`°æí
(query));

341 
	`°rˇt
(
quîy
,"SELECT * FROM ArrayManager WHERE `am_id` = ");

342 
	`sql_öt
(
am_id
);

344 
t
 = 
	`mysql_ªÆ_quîy
(&
mysql
,
quîy
,(Ë
	`°æí
(query));

345 if(
t
)

346 
	`¥ötf
("Eº‹ makög quîy: %s\n",
	`mysql_îr‹
(&
mysql
));

347 
ªs
 = 
	`mysql_°‹e_ªsu…
(&
mysql
);

348 
row
 = 
	`mysql_„tch_row
(
ªs
)){

349 
TCP≥riod
=
	`©oi
(
row
[
AM_≥riod
]);

352 
	`mysql_‰ì_ªsu…
(
ªs
);

353 
ªs
=
NULL
;

356 
amcou¡
=
am£t
=0;

357 if(
p
->
tm_mö
 !
t˝lökPå
->
AMRTCTime
[4]){

358 
amcou¡
++;

359 
am£t
=
RTC
;

361 if(
t˝lökPå
->
TCPLökPîiod
 !
TCP≥riod
){

362 
amcou¡
++;

363 
am£t
|=
TCP
;

366 
	`¥ötf
("ARRAY_MANGER_SETTING Success!!\n");

367 
	}
}

369 
	$mysql_com∑ª
(){

370 
MYSQL_RES
 *
ªs
=
NULL
;

371 
MYSQL_ROW
 
row
=
NULL
;

372 
t
,
i
,
j
,
ödex
;

373 
SëSJBZîo
=0;

374 
upd©eAŒBlock
=0;

375 
cou¡
=0;

376 
SJB_Sèã
[50];

379 
HIGH
=0x10,
LOW
=0x08,
HOT
=0x04,
COLD
=0x02,
OPEN
=0x01;

381 
	`°rsub
(
quîy
,
	`°æí
(query));

382 
	`°rˇt
(
quîy
,"SELECT * FROM Block ORDER BY block_id");

383 
t
 = 
	`mysql_ªÆ_quîy
(&
mysql
,
quîy
,(Ë
	`°æí
(query));

384 if(
t
)

385 
	`¥ötf
("Eº‹ makög quîy: %s\n",
	`mysql_îr‹
(&
mysql
));

386 
ªs
 = 
	`mysql_°‹e_ªsu…
(&
mysql
);

387 
row
 = 
	`mysql_„tch_row
(
ªs
)){

388 
block
[
cou¡
++]=
	`©oi
(
row
[
Block_block_id
]);

391 
	`mysql_‰ì_ªsu…
(
ªs
);

392 
ªs
=
NULL
;

394 
i
=0;i<
cou¡
;i++){

395 
	`°rsub
(
quîy
,
	`°æí
(query));

396 
	`°rˇt
(
quîy
,"SELECT * FROM JunctionBox WHERE `block_id` =");

397 
	`sql_öt
(
block
[
i
]);

398 
t
 = 
	`mysql_ªÆ_quîy
(&
mysql
,
quîy
,(Ë
	`°æí
(query));

399 if(
t
)

400 
	`¥ötf
("Eº‹ makög quîy: %s\n",
	`mysql_îr‹
(&
mysql
));

401 
ªs
 = 
	`mysql_°‹e_ªsu…
(&
mysql
);

402 
ödex
=0;

404 
row
 = 
	`mysql_„tch_row
(
ªs
)){

407 if(!
row
[
JB_°©e
])

409 
	`°r˝y
(
SJB_Sèã
,"NULL");

412 
	`°r˝y
(
SJB_Sèã
,
row
[
JB_°©e
]);

414 if(
	`©oi
(
row
[
JB_powî
]Ë!0 || (
	`°rcmp
(
SJB_Sèã
,"offline") !=0)){

419 
j
=0;j<5;j++){

420 
JB_mac
[
ödex
][
j
]=
row
[
JB_jb_mac
][j];

424 if(!
	`TimeCom∑ª
(
row
[
JB_upd©e_time
]) )

426 
JB_block
[
ödex
][2]=0;

427 
	`¥ötf
("Time Clear SJB \n");

429 i‡–
	`©oi
(
row
[
JB_vﬁège
]) ==0 )

432 
	`¥ötf
("Voltage Clear SJB \n");

433 
JB_block
[
ödex
][2]=0;

437 
JB_block
[
ödex
][2]=
OPEN
;

440 
JB_block
[
ödex
][1]=
	`©oi
(
row
[
JB_powî
]);

441 
JB_block
[
ödex
++][0]=
	`©oi
(
row
[
JB_ãmp
]);

450 
	`mysql_‰ì_ªsu…
(
ªs
);

451 
ªs
=
NULL
;

454 
ãmp
[2],
max
[2],
mö
[2];

455 
max
[0]=max[1]=0x80000000;

456 
mö
[0]=min[1]=0x7FFFFFFF;

457 
ãmp
[0]=temp[1]=0;

458 
j
=0;j<
ödex
;j++){

459 
ãmp
[0]+=
JB_block
[
j
][0];

460 if(
JB_block
[
j
][0]>
max
[0]) max[0]=JB_block[j][0];

461 if(
JB_block
[
j
][0]<
mö
[0]) min[0]=JB_block[j][0];

462 
ãmp
[1]+=
JB_block
[
j
][1];

463 if(
JB_block
[
j
][1]>
max
[1]) max[1]=JB_block[j][1];

464 if(
JB_block
[
j
][1]<
mö
[1]) min[1]=JB_block[j][1];

468 if(
ödex
 != 0){

469 if(
ödex
>5){

470 
ãmp
[0]Òemp[0]-
max
[0]-
mö
[0];

471 
ãmp
[1]Òemp[1]-
max
[1]-
mö
[1];

473 
ãmp
[0]/=(
ödex
-2);

474 
ãmp
[1]/=(
ödex
-2);

478 
ãmp
[0]/=
ödex
;

479 
ãmp
[1]/=
ödex
;

486 
j
=0;j<
ödex
;j++){

487 
SëSJBZîo
=0;

489 if(
ãmp
[0] < 0){

490 if((
ãmp
[0]*0.9Ë< 
JB_block
[
j
][0])

491 
JB_block
[
j
][2]|=
HOT
;

492 if((
ãmp
[0]*1.1Ë> 
JB_block
[
j
][0])

493 
JB_block
[
j
][2]|=
COLD
;

496 if((
ãmp
[0]*0.9Ë> 
JB_block
[
j
][0])

497 
JB_block
[
j
][2]|=
COLD
;

498 if((
ãmp
[0]*1.1Ë< 
JB_block
[
j
][0])

499 
JB_block
[
j
][2]|=
HOT
;

501 if((
ãmp
[1]*0.9Ë> 
JB_block
[
j
][1])

502 
JB_block
[
j
][2]|=
LOW
;

503 if((
ãmp
[1]*1.1Ë< 
JB_block
[
j
][1])

504 
JB_block
[
j
][2]|=
HIGH
;

506 if((
JB_block
[
j
][2]&
OPEN
)==1){

507 
	`°rsub
(
quîy
,
	`°æí
(query));

508 
	`°rˇt
(
quîy
,"UPDATE `JunctionBox` SET `state2` = ");

509 if(
JB_block
[
j
][2]==1)

510 
	`°rˇt
(
quîy
,"1");

512 
	`°rˇt
(
quîy
,"2");

514 
	`°rˇt
(
quîy
," WHERE `jb_mac` = 0x");

515 
t
=0;t<5;t++)

516 
	`sql_ch¨
(
JB_mac
[
j
][
t
]);

518 
t
 = 
	`mysql_ªÆ_quîy
(&
mysql
,
quîy
,(Ë
	`°æí
(query));

519 if(
t
)

520 
	`¥ötf
("Eº‹ makög quîy: %s\n",
	`mysql_îr‹
(&
mysql
));

523 
	`°rsub
(
quîy
,
	`°æí
(query));

524 
	`°rˇt
(
quîy
,"UPDATE `JunctionBox` SET `state` ='");

525 if((
JB_block
[
j
][2]&
OPEN
)==0){

527 
SëSJBZîo
=1;

529 
	`°rˇt
(
quîy
,"offline'");

533 if(
JB_block
[
j
][2]==1){

534 
	`°rsub
(
quîy
,1);

535 
	`°rˇt
(
quîy
,"NULL");

540 if((
JB_block
[
j
][2]&
HIGH
)==HIGH)

541 
	`°rˇt
(
quîy
,"overpower,");

542 if((
JB_block
[
j
][2]&
LOW
)==LOW)

543 
	`°rˇt
(
quîy
,"underpower,");

544 if((
JB_block
[
j
][2]&
HOT
)==HOT)

545 
	`°rˇt
(
quîy
,"overtemperature,");

546 if((
JB_block
[
j
][2]&
COLD
)==COLD)

547 
	`°rˇt
(
quîy
,"undertemperature,");

548 
	`°rsub
(
quîy
,1);

549 
	`°rˇt
(
quîy
,"'");

552 
	`°rˇt
(
quîy
," WHERE `jb_mac` = 0x");

553 
t
=0;t<5;t++)

554 
	`sql_ch¨
(
JB_mac
[
j
][
t
]);

556 
t
 = 
	`mysql_ªÆ_quîy
(&
mysql
,
quîy
,(Ë
	`°æí
(query));

557 if(
t
)

558 
	`¥ötf
("Eº‹ makög quîy: %s\n",
	`mysql_îr‹
(&
mysql
));

564 if(
SëSJBZîo
)

566 
	`°rsub
(
quîy
,
	`°æí
(query));

567 
	`Së_SJB_ALLZîo
(
JB_mac
[
j
]);

569 
t
 = 
	`mysql_ªÆ_quîy
(&
mysql
,
quîy
,(Ë
	`°æí
(query));

570 if(
t
)

571 
	`¥ötf
("Eº‹ makög quîy: %s\n",
	`mysql_îr‹
(&
mysql
));

573 
	`INSERT_SJB_PANNEL_Zîo
(
JB_mac
[
j
]);

575 
t
 = 
	`mysql_ªÆ_quîy
(&
mysql
,
quîy
,(Ë
	`°æí
(query));

576 if(
t
)

577 
	`¥ötf
("Eº‹ makög quîy: %s\n",
	`mysql_îr‹
(&
mysql
));

579 
SëSJBZîo
=0;

580 
upd©eAŒBlock
=1;

589 if(
upd©eAŒBlock
)

591 
upd©eAŒBlock
=0;

593 
	`INSERT_ALL_BLOCKDATA
();

594 
	`°rsub
(
quîy
,1);

596 
t
 = 
	`mysql_ªÆ_quîy
(&
mysql
,
quîy
,(Ë
	`°æí
(query));

597 if(
t
)

598 
	`¥ötf
("Eº‹ makög quîy: %s\n",
	`mysql_îr‹
(&
mysql
));

603 
	`¥ötf
("state compare OK\n");

604 
	}
}

606 
	$sql_AMjoö
(
Êag
,
˛õ¡_ù
[],
AMJoöReque°P⁄ãr
 
amReqPå
){

607 
i
;

609 
	`°rsub
(
quîy
,
	`°æí
(query));

610 
	`°rˇt
(
quîy
, "UPDATE `ArrayManager` SET `ip` = '");

611 
	`°rˇt
(
quîy
,
˛õ¡_ù
);

612 
	`°rˇt
(
quîy
,"' ,`port` = ");

613 
	`sql_sh‹t
(
amReqPå
->
p‹tNumbî
);

614 if(
Êag
){

615 
	`°rˇt
(
quîy
," ,`register_time` = '");

616 
	`sql_time
();

617 
	`°rˇt
(
quîy
,"'");

619 
	`°rˇt
(
quîy
," ,`update_time` = '");

620 
	`sql_time
();

621 
	`°rˇt
(
quîy
,"'");

622 
	`°rˇt
(
quîy
," WHERE `mac` = '");

623 
i
=1;i<6;i++)

624 
	`sql_ch¨
(
amReqPå
->
MAC
[
i
]);

625 
	`°rˇt
(
quîy
,"' LIMIT 1");

626 
	}
}

628 
	$sql_JBjoö
(
JBJoöInfoP⁄ãr
 
jbInfoPå
){

629 
i
;

631 
	`°rsub
(
quîy
,
	`°æí
(query));

632 
	`°rˇt
(
quîy
, "INSERT `JunctionBox` (`jb_mac` , `s/n` , `firmware_vs` ,`hardware_vs` , `device_spec` ,`manufacture_date` , `pos` , `block_id`) VALUES (0x");

633 
i
=1;i<6;i++)

634 
	`sql_ch¨
(
jbInfoPå
->
JB_MAC
[
i
]);

635 
	`°rˇt
(
quîy
," , 0x");

636 
i
=0;

637 
jbInfoPå
->
SîülNumbî
[
i
]!='\0')

638 
	`sql_ch¨
(
jbInfoPå
->
SîülNumbî
[
i
++]);

641 
	`°rˇt
(
quîy
," , 0x");

642 
i
=0;

643 
jbInfoPå
->
Fúmw¨eVîsi⁄
[
i
]!='\0')

644 
	`sql_ch¨
(
jbInfoPå
->
Fúmw¨eVîsi⁄
[
i
++]);

645 
	`°rˇt
(
quîy
," , 0x");

646 
i
=0;

647 
jbInfoPå
->
H¨dw¨eVîsi⁄
[
i
]!='\0')

648 
	`sql_ch¨
(
jbInfoPå
->
H¨dw¨eVîsi⁄
[
i
++]);

649 
	`°rˇt
(
quîy
," , 0x");

650 
i
=0;

651 
jbInfoPå
->
Devi˚S≥cifiˇti⁄
[
i
]!='\0')

652 
	`sql_ch¨
(
jbInfoPå
->
Devi˚S≥cifiˇti⁄
[
i
++]);

653 
	`°rˇt
(
quîy
," , 0x");

655 
i
=0;i<8;i++)

656 
	`sql_ch¨
(
jbInfoPå
->
M™uÁ˘uªD©a
[
i
]);

657 
	`°rˇt
(
quîy
," , ");

658 
	`sql_öt
(
pos
);

659 
	`°rˇt
(
quîy
," , ");

660 
	`sql_öt
(
block_id
);

661 
	`°rˇt
(
quîy
, ")");

663 
	}
}

665 
	$sql_PD
(
PîiodicD©aPoöãr
 
pdcPå
,
n
,
Êag
){

666 
i
,
j
;

667 
Jun˘i⁄BoxPoöãr
 
jBoxPå
 = 
NULL
;

668 
TimeSèmpP⁄ãr
 
timeSèmpPå
 = 
NULL
;

669 
timeSèmpPå
 = &(
pdcPå
->
°amp
);

670 
jBoxPå
 = (
Jun˘i⁄BoxPoöãr
)
pdcPå
->
∑ylﬂd
;

672 if(!
Êag
)

673 
jBoxPå
 = (
Jun˘i⁄BoxPoöãr
)(()jBoxPå + 
n
 * 
SIZE_OF_JUNCTIONBOX_PACKET
);

675 
	`°rsub
(
quîy
,
	`°æí
(query));

676 if(
Êag
==0){

677 
	`°rˇt
(
quîy
, "UPDATE `JunctionBox` SET ");

678 if(
jBoxPå
->
°©e
 == 0){

679 
	`°rˇt
(
quîy
, "`state2` = ");

680 
	`sql_öt
(
jBoxPå
->
°©e
);

681 
	`°rˇt
(
quîy
, " , `voltage` = ");

684 
	`°rˇt
(
quîy
, "`voltage` = ");

685 
	`sql_öt
(
jBoxPå
->
vﬁège
);

686 
	`°rˇt
(
quîy
, " , `current` = ");

687 
	`sql_öt
(
jBoxPå
->
cuºít
);

688 
	`°rˇt
(
quîy
, " , `temp` = ");

689 
	`sql_öt
(
jBoxPå
->
diodeTem≥øtuª
);

690 
	`°rˇt
(
quîy
, " , `power` = ");

691 
	`sql_Êﬂt
(
jBoxPå
->
powî
*1);

693 
	`°rˇt
(
quîy
," ,`update_time` = '");

695 
	`sql_devi˚time
(
timeSèmpPå
);

696 
	`°rˇt
(
quîy
,"'");

697 
	`°rˇt
(
quîy
," WHERE `jb_mac` = 0x");

698 
i
=1;i<6;i++)

699 
	`sql_ch¨
(
jBoxPå
->
MAC
[
i
]);

703 
	`°rˇt
(
quîy
, "INSERT `PanelData` (`jb_mac` , `power`, `temp` , `time`) VALUES");

704 
j
=0;j<6;j++)

705 
jbmac
[
j
]=
jBoxPå
->
MAC
[j];

706 
j
=0;j<
n
;j++){

708 
	`°rˇt
(
quîy
,"(0x");

709 
i
=1;i<6;i++)

710 
	`sql_ch¨
(
jBoxPå
->
MAC
[
i
]);

711 
	`°rˇt
(
quîy
, " , ");

712 
	`sql_öt
(
jBoxPå
->
powî
);

713 
	`°rˇt
(
quîy
, " , ");

714 
	`sql_öt
(
jBoxPå
->
diodeTem≥øtuª
);

715 
	`°rˇt
(
quîy
, " , '");

717 
	`sql_devi˚time
(
timeSèmpPå
);

718 
	`°rˇt
(
quîy
, "'");

719 
	`°rˇt
(
quîy
, "),");

721 
jBoxPå
 = (
Jun˘i⁄BoxPoöãr
)(()jBoxPå + 
SIZE_OF_JUNCTIONBOX_PACKET
);

723 
	`°rsub
(
quîy
,1);

739 
	}
}

741 
	$sql_block
(
am_id
[]){

742 
	`°rsub
(
quîy
,
	`°æí
(query));

743 
	`°rˇt
(
quîy
, "INSERT INTO `Block` (`am_id`) VALUES(");

744 
	`°rˇt
(
quîy
, 
am_id
);

745 
	`°rˇt
(
quîy
, ")");

746 
	}
}

748 
	$sql_ch¨
(
ãmp
){

749 
i
,
j
,
numbî
[16][2]={"0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F"};

750 
	`°rˇt
(
quîy
, 
numbî
[(
ãmp
&0xF0)>>4]);

751 
	`°rˇt
(
quîy
, 
numbî
[
ãmp
&0x0F]);

752 
	}
}

754 
	$sql_sh‹t
(
ãmp
){

755 
num
[]="";

756 
	`•rötf
(
num
,"%d",
ãmp
);

757 
	`°rˇt
(
quîy
,
num
);

758 
	}
}

760 
	$sql_öt
(
ãmp
){

761 
num
[]="";

762 
	`•rötf
(
num
,"%d",
ãmp
);

763 
	`°rˇt
(
quîy
,
num
);

764 
	}
}

766 
	$sql_Êﬂt
(
ãmp
){

767 
num
[]="";

768 
	`•rötf
(
num
,"%4.2f",
ãmp
);

770 
	`°rˇt
(
quîy
,
num
);

771 
	}
}

773 
	$sql_time
(){

774 
s
[30]="";

775 
time_t
 
timï
;

776 
tm
 *
p
;

778 
	`°rsub
(
s
,
	`°æí
(s));

779 
	`time
(&
timï
);

780 
p
=
	`loˇ…ime
(&
timï
);

781 
	`•rötf
(
s
,"%d-%d-%d %d:%d:%d",(1900+
p
->
tm_yór
), (1+p->
tm_m⁄
),p->
tm_mday
,p->
tm_hour
,Ö->
tm_mö
,Ö->
tm_£c
);

782 
	`°rˇt
(
quîy
,
s
);

783 
	}
}

784 
	$Sql_SîvîTime
()

786 
s
[30]="";

787 
time_t
 
timï
;

788 
tm
 *
p
;

790 
	`°rsub
(
s
,
	`°æí
(s));

791 
	`time
(&
timï
);

792 
p
=
	`loˇ…ime
(&
timï
);

793 
	`•rötf
(
s
,"%d-%d-%d %d:%d:%d",(1900+
p
->
tm_yór
), (1+p->
tm_m⁄
),p->
tm_mday
,p->
tm_hour
,p->
tm_mö
,Ö->
tm_£c
);

794 
	`°rˇt
(
quîy
,
s
);

796 
	}
}

799 
	$sql_devi˚time
(
TimeSèmpP⁄ãr
 
timeSèmpPå
){

800 
s
[30]="";

801 
time_t
 
timï
;

802 
tm
 *
p
;

804 
	`°rsub
(
s
,
	`°æí
(s));

805 
	`time
(&
timï
);

806 
p
=
	`loˇ…ime
(&
timï
);

808 
	`•rötf
(
s
,"%d-%d-%d %d:%d:%d",(1900+
p
->
tm_yór
), (1+p->
tm_m⁄
),
timeSèmpPå
->
d©e
,timeSèmpPå->
hours
,ÅimeSèmpPå->
möuãs
,ÅimeSèmpPå->
£c⁄ds
);

810 
	`°rˇt
(
quîy
,
s
);

811 
	}
}

813 
	$RTCtime
(
SunP⁄ãr
 
pkt
){

814 
RTCRe•⁄£P⁄ãr
 
π¸•
;

816 
time_t
 
timï
;

817 
tm
 *
p
;

818 
	`time
(&
timï
);

819 
p
=
	`loˇ…ime
(&
timï
);

821 
π¸•
 = (
RTCRe•⁄£P⁄ãr
)
pkt
->
∑ylﬂd
;

822 
π¸•
->
yórs
 = 
p
->
tm_yór
-100;

823 
π¸•
->
m⁄ths
 =
p
->
tm_m⁄
+1;

824 
π¸•
->
d©e
 = 
p
->
tm_mday
;

825 
π¸•
->
hours
 = 
p
->
tm_hour
;

826 
π¸•
->
möuãs
 = 
p
->
tm_mö
;

827 
π¸•
->
£c⁄d
 = 
p
->
tm_£c
;

830 
	`¥ötf
("RTCtime\n");

831 
	`¥ötf
("RTCtime\n");

832 
	`¥ötf
("RTCtime\n");

833 
	`¥ötf
("RTCtime\n");

834 
	`¥ötf
("Yór:%d M:%d D©e:%d H:%d Mö:%d\n",
π¸•
->
yórs
,π¸•->
m⁄ths
,π¸•->
d©e
 ,π¸•->
hours
,π¸•->
möuãs
);

837 
	}
}

839 
	$°rsub
(*
s1
, 
sub
) {

840 
i
,
ãmp
=
	`°æí
(
s1
);

841 
i
 = 
ãmp
;i>=—emp-
sub
); i--)

842 
s1
[
i
] = '\0';

843 
	}
}

845 
	#SJBDisc⁄e˘_Time
 3

	)

846 
	$TimeCom∑ª
(
timef
[])

850 
yór
,
m⁄
,
d©e
,
hour
,
mö
,
£c
;

851 
SîvîTŸÆMö
=0;

852 
SJBTŸÆMö
=0;

853 
SîvîD©e
;

854 
SJBD©e
;

856 
s
[25];

858 
TŸÆD©eTabÀ
[]={0,0,31,59,90,120,151,181,212,243,273,304,334};

859 
time_t
 
timï
;

860 
tm
 *
p
;

863 
yór
=
m⁄
=
d©e
=
hour
=
mö
=
£c
=0;

865 
	`°rsub
(
s
,
	`°æí
(s));

866 
	`time
(&
timï
);

867 
p
=
	`loˇ…ime
(&
timï
);

870 
	`•rötf
(
s
,"%c%c%c%c",
timef
[0],timef[1],timef[2],timef[3]);

871 
yór
=
	`©oi
(
s
);

872 
	`•rötf
(
s
,"%c%c",
timef
[5],timef[6]);

873 
m⁄
=
	`©oi
(
s
);

874 
	`•rötf
(
s
,"%c%c",
timef
[8],timef[9]);

875 
d©e
=
	`©oi
(
s
);

876 
	`•rötf
(
s
,"%c%c",
timef
[11],timef[12]);

877 
hour
=
	`©oi
(
s
);

878 
	`•rötf
(
s
,"%c%c",
timef
[14],timef[15]);

879 
mö
=
	`©oi
(
s
);

882 
SîvîD©e
=
TŸÆD©eTabÀ
[1+
p
->
tm_m⁄
]+(1900+p->
tm_yór
-2010)*365;

883 
SJBD©e
=
TŸÆD©eTabÀ
[
m⁄
]+(
yór
-2010)*365;

886 
SîvîTŸÆMö
=
p
->
tm_mö
+60*’->
tm_hour
)+24*60*(’->
tm_mday
)+
SîvîD©e
);

889 
SJBTŸÆMö
=
mö
+60*
hour
+(24*60)*(
d©e
+
SJBD©e
);

892 if(
SîvîTŸÆMö
-
SJBTŸÆMö
>
SJBDisc⁄e˘_Time
)  0;

897 
	}
}

902 
	$°©e_timecom∑ª
(
timef
[]){

903 
yór
,
m⁄
,
d©a
,
hour
,
mö
,
£c
;

904 
s
[25];

906 
time_t
 
timï
;

907 
tm
 *
p
;

909 
yór
=
m⁄
=
d©a
=
hour
=
mö
=
£c
=0;

911 
	`°rsub
(
s
,
	`°æí
(s));

912 
	`time
(&
timï
);

913 
p
=
	`loˇ…ime
(&
timï
);

918 
	`•rötf
(
s
,"%c%c%c%c",
timef
[0],timef[1],timef[2],timef[3]);

919 
yór
=
	`©oi
(
s
);

920 if((1900+
p
->
tm_yór
)!=
yór
)

922 
	`•rötf
(
s
,"%c%c",
timef
[5],timef[6]);

923 
m⁄
=
	`©oi
(
s
);

924 if((1+
p
->
tm_m⁄
)!=
m⁄
)

926 
	`•rötf
(
s
,"%c%c",
timef
[8],timef[9]);

927 
d©a
=
	`©oi
(
s
);

928 if(
p
->
tm_mday
!=
d©a
)

930 
	`•rötf
(
s
,"%c%c",
timef
[11],timef[12]);

931 
hour
=
	`©oi
(
s
);

932 if(
p
->
tm_hour
!=
hour
)

934 
	`•rötf
(
s
,"%c%c",
timef
[14],timef[15]);

935 
mö
=
	`©oi
(
s
);

937 if(
p
->
tm_mö
<
SJBDisc⁄e˘_Time
 && 
mö
>(60-SJBDisconect_Time))

938 if(
	`abs
((
p
->
tm_mö
)+60-
mö
)>
SJBDisc⁄e˘_Time
)

942 if(
	`abs
((
p
->
tm_mö
)-
mö
)>
SJBDisc⁄e˘_Time
)

949 
	`•rötf
(
s
,"%c%c",
timef
[17],timef[18]);

950 
£c
=
	`©oi
(
s
);

963 
	}
}

965 
	#AXLE_DUMMY


	)

967 #ifde‡
AXLE_DUMMY


969 
	#Dummy_powî
 1

	)

970 
	#Dummy_TEMP
 1

	)

971 
	#PN_jb_mac
 0

	)

972 
	#PN_powî
 1

	)

973 
	#PN_ãmp
 2

	)

974 
	#PN_time
 3

	)

976 
	#DummyTimeOff£t
 1

	)

978 
	#BL_blockid
 0

	)

979 
	#BL_powî
 1

	)

980 
	#BL_time
 2

	)

993 
	$CHECK_IF_DUMYZERO_EXIST
(
PîiodicD©aPoöãr
 
pdcPå
,
n
, 
Êag
)

996 
blockid
;

997 
PN_powî_L
;

998 
i
,
j
,
t
;

999 
MYSQL_RES
 *
ªs
=
NULL
;

1000 
MYSQL_ROW
 
row
=
NULL
;

1001 
Jun˘i⁄BoxPoöãr
 
jBoxPå
 = 
NULL
;

1002 
TimeSèmpP⁄ãr
 
timeSèmpPå
 = 
NULL
;

1003 
timeSèmpPå
 = &(
pdcPå
->
°amp
);

1004 
jBoxPå
 = (
Jun˘i⁄BoxPoöãr
)
pdcPå
->
∑ylﬂd
;

1010  
i
=0;i<
n
;i++)

1016 
	`°rsub
(
quîy
,
	`°æí
(query));

1018 
	`°rˇt
(
quîy
,"SELECT * FROM JunctionBox WHERE `jb_mac` = 0x");

1019 
j
=1;j<6;j++)

1020 
	`sql_ch¨
(
jBoxPå
->
MAC
[
j
]);

1022 
	`¥ötf
("%s\n",
quîy
);

1023 
t
 = 
	`mysql_ªÆ_quîy
(&
mysql
,
quîy
,(Ë
	`°æí
(query));

1024 if(
t
)

1025 
	`¥ötf
("Eº‹ makög quîy: %s\n",
	`mysql_îr‹
(&
mysql
));

1026 
ªs
 = 
	`mysql_°‹e_ªsu…
(&
mysql
);

1027 
row
 = 
	`mysql_„tch_row
(
ªs
)){

1028 
blockid
=
	`©oi
(
row
[
JB_block_id
]);

1029 
	`¥ötf
("%d\n",
blockid
);

1032 
	`mysql_‰ì_ªsu…
(
ªs
);

1033 
ªs
=
NULL
;

1037 
	`°rsub
(
quîy
,
	`°æí
(query));

1039 
	`°rˇt
(
quîy
, "SELECT * FROM `BlockData` WHERE `block_id` = " );

1041 
	`sql_öt
(
blockid
);

1043 
	`°rˇt
(
quîy
," ORDER BY `BlockData`.`time` DESC LIMIT 0 , 10");

1045 
	`¥ötf
("%s\n",
quîy
);

1046 
t
 = 
	`mysql_ªÆ_quîy
(&
mysql
,
quîy
,(Ë
	`°æí
(query));

1047 if(
t
)

1048 
	`¥ötf
("Eº‹ makög quîy: %s\n",
	`mysql_îr‹
(&
mysql
));

1049 
ªs
 = 
	`mysql_°‹e_ªsu…
(&
mysql
);

1050 
row
 = 
	`mysql_„tch_row
(
ªs
)){

1052 
PN_powî_L
=
	`©oi
(
row
[
BL_powî
]);

1054 if(
PN_powî_L
==0) ;

1056 if(
PN_powî_L
==
Dummy_powî
)

1059 
	`¥ötf
("Got Block Dummy \n");

1060 
	`°rsub
(
quîy
,
	`°æí
(query));

1061 
	`°rˇt
(
quîy
, "DELETE FROM `BlockData` WHERE `block_id`= " );

1062 
	`sql_öt
(
blockid
);

1063 
	`°rˇt
(
quîy
, " AND`power` = " );

1064 
	`sql_ch¨
(
Dummy_powî
);

1065 
	`¥ötf
("%s\n",
quîy
);

1066 
t
 = 
	`mysql_ªÆ_quîy
(&
mysql
,
quîy
,(Ë
	`°æí
(query));

1067 if(
t
)

1068 
	`¥ötf
("Eº‹ makög quîy: %s\n",
	`mysql_îr‹
(&
mysql
));

1075 
	`mysql_‰ì_ªsu…
(
ªs
);

1076 
ªs
=
NULL
;

1077 
jBoxPå
 = (
Jun˘i⁄BoxPoöãr
)(()jBoxPå + 1* 
SIZE_OF_JUNCTIONBOX_PACKET
);

1082 
jBoxPå
 = (
Jun˘i⁄BoxPoöãr
)
pdcPå
->
∑ylﬂd
;

1085  
i
=0;i<
n
;i++)

1088 
	`°rsub
(
quîy
,
	`°æí
(query));

1090 
	`°rˇt
(
quîy
, "SELECT * FROM `PanelData` WHERE `jb_mac` = 0x" );

1091 
j
=1;j<6;j++)

1092 
	`sql_ch¨
(
jBoxPå
->
MAC
[
j
]);

1094 
	`°rˇt
(
quîy
," ORDER BY `PanelData`.`time` DESC LIMIT 0 , 10");

1095 
	`¥ötf
("%s\n",
quîy
);

1096 
t
 = 
	`mysql_ªÆ_quîy
(&
mysql
,
quîy
,(Ë
	`°æí
(query));

1097 
ªs
 = 
	`mysql_°‹e_ªsu…
(&
mysql
);

1098 
row
 = 
	`mysql_„tch_row
(
ªs
)){

1099 
PN_powî_L
=
	`©oi
(
row
[
PN_powî
]);

1101 if(
PN_powî_L
==0) ;

1103 if(
PN_powî_L
==
Dummy_powî
)

1107 
	`¥ötf
("Got Pannel Dummy \n");

1108 
	`°rsub
(
quîy
,
	`°æí
(query));

1109 
	`°rˇt
(
quîy
, "DELETE FROM `PanelData` WHERE `jb_mac`= 0x" );

1110 
j
=1;j<6;j++)

1111 
	`sql_ch¨
(
jBoxPå
->
MAC
[
j
]);

1112 
	`°rˇt
(
quîy
, " AND`power` = " );

1113 
	`sql_ch¨
(
Dummy_powî
);

1114 
	`¥ötf
("%s\n",
quîy
);

1115 
t
 = 
	`mysql_ªÆ_quîy
(&
mysql
,
quîy
,(Ë
	`°æí
(query));

1116 if(
t
)

1117 
	`¥ötf
("Eº‹ makög quîy: %s\n",
	`mysql_îr‹
(&
mysql
));

1126 
	`mysql_‰ì_ªsu…
(
ªs
);

1127 
ªs
=
NULL
;

1128 
jBoxPå
 = (
Jun˘i⁄BoxPoöãr
)(()jBoxPå + 1* 
SIZE_OF_JUNCTIONBOX_PACKET
);

1131 
	}
}

1142 
	$In£π_Dummy_Zîo2P™√l_Block_Tab
(
PîiodicD©aPoöãr
 
pdcPå
,
n
, 
Êag
)

1147 
L_blockid
,
PN_powî_L
,
i
,
j
,
t
;

1148 
GŸGummy
=0;

1149 
MYSQL_RES
 *
ªs
=
NULL
;

1150 
MYSQL_ROW
 
row
=
NULL
;

1151 
Jun˘i⁄BoxPoöãr
 
jBoxPå
 = 
NULL
;

1152 
TimeSèmpP⁄ãr
 
timeSèmpPå
 = 
NULL
;

1153 
timeSèmpPå
 = &(
pdcPå
->
°amp
);

1154 
jBoxPå
 = (
Jun˘i⁄BoxPoöãr
)
pdcPå
->
∑ylﬂd
;

1157  
i
=0;i<
n
;i++)

1162 
	`°rsub
(
quîy
,
	`°æí
(query));

1164 
	`°rˇt
(
quîy
,"SELECT * FROM JunctionBox WHERE `jb_mac` = 0x");

1165 
j
=1;j<6;j++)

1166 
	`sql_ch¨
(
jBoxPå
->
MAC
[
j
]);

1168 
	`¥ötf
("%s\n",
quîy
);

1169 
t
 = 
	`mysql_ªÆ_quîy
(&
mysql
,
quîy
,(Ë
	`°æí
(query));

1170 if(
t
)

1171 
	`¥ötf
("Eº‹ makög quîy: %s\n",
	`mysql_îr‹
(&
mysql
));

1172 
ªs
 = 
	`mysql_°‹e_ªsu…
(&
mysql
);

1173 
row
 = 
	`mysql_„tch_row
(
ªs
)){

1174 
L_blockid
=
	`©oi
(
row
[
JB_block_id
]);

1175 
	`¥ötf
("%d\n",
L_blockid
);

1178 
	`mysql_‰ì_ªsu…
(
ªs
);

1179 
ªs
=
NULL
;

1183 
	`°rsub
(
quîy
,
	`°æí
(query));

1185 
	`°rˇt
(
quîy
, "SELECT * FROM `BlockData` WHERE `block_id` = " );

1187 
	`sql_öt
(
L_blockid
);

1189 
	`°rˇt
(
quîy
," ORDER BY `BlockData`.`time` DESC LIMIT 0 , 5");

1191 
	`¥ötf
("%s\n",
quîy
);

1192 
t
 = 
	`mysql_ªÆ_quîy
(&
mysql
,
quîy
,(Ë
	`°æí
(query));

1193 if(
t
)

1194 
	`¥ötf
("Eº‹ makög quîy: %s\n",
	`mysql_îr‹
(&
mysql
));

1195 
ªs
 = 
	`mysql_°‹e_ªsu…
(&
mysql
);

1196 
GŸGummy
=0;

1197 
row
 = 
	`mysql_„tch_row
(
ªs
)){

1199 
PN_powî_L
=
	`©oi
(
row
[
BL_powî
]);

1201 if(
PN_powî_L
==
Dummy_powî
)

1203 
GŸGummy
=1;

1211 
	`mysql_‰ì_ªsu…
(
ªs
);

1212 
ªs
=
NULL
;

1214 if(!
GŸGummy
)

1216 
	`°rsub
(
quîy
,
	`°æí
(query));

1217 
	`°rˇt
(
quîy
, "INSERT `BlockData` (`block_id` , `power` , `time`) VALUES ");

1218 
	`°rˇt
(
quîy
,"(");

1220 
	`sql_öt
(
L_blockid
);

1221 
	`°rˇt
(
quîy
," , ");

1222 
	`sql_öt
(
Dummy_powî
);

1223 
	`°rˇt
(
quîy
, " , '");

1225 
	`sql_devi˚Dummytime
(
timeSèmpPå
);

1226 
	`°rˇt
(
quîy
, "'");

1227 
	`°rˇt
(
quîy
,")");

1229 
	`¥ötf
("%s\n",
quîy
);

1230 
t
 = 
	`mysql_ªÆ_quîy
(&
mysql
,
quîy
,(Ë
	`°æí
(query));

1231 if(
t
)

1232 
	`¥ötf
("Eº‹ makög quîy: %s\n",
	`mysql_îr‹
(&
mysql
));

1235 
ªs
=
NULL
;

1241 
	`°rsub
(
quîy
,
	`°æí
(query));

1242 
	`°rˇt
(
quîy
, "INSERT `PanelData` (`jb_mac` , `power`, `temp` , `time`) VALUES");

1245 
	`°rˇt
(
quîy
,"(0x");

1246 
j
=1;j<6;j++)

1247 
	`sql_ch¨
(
jBoxPå
->
MAC
[
j
]);

1248 
	`°rˇt
(
quîy
, " , ");

1249 
	`sql_öt
(
Dummy_powî
);

1250 
	`°rˇt
(
quîy
, " , ");

1251 
	`sql_öt
(
Dummy_TEMP
);

1252 
	`°rˇt
(
quîy
, " , '");

1254 
	`sql_devi˚Dummytime
(
timeSèmpPå
);

1255 
	`°rˇt
(
quîy
, "'");

1256 
	`°rˇt
(
quîy
, ")");

1258 
	`¥ötf
("%s\n",
quîy
);

1259 
t
 = 
	`mysql_ªÆ_quîy
(&
mysql
,
quîy
,(Ë
	`°æí
(query));

1260 if(
t
)

1261 
	`¥ötf
("Eº‹ makög quîy: %s\n",
	`mysql_îr‹
(&
mysql
));

1263 
ªs
=
NULL
;

1267 
jBoxPå
 = (
Jun˘i⁄BoxPoöãr
)(()jBoxPå + 1* 
SIZE_OF_JUNCTIONBOX_PACKET
);

1274 
	}
}

1275 
	$sql_devi˚Dummytime
(
TimeSèmpP⁄ãr
 
timeSèmpPå
){

1276 
s
[30]="";

1277 
time_t
 
timï
;

1278 
tm
 *
p
;

1280 
	`°rsub
(
s
,
	`°æí
(s));

1281 
	`time
(&
timï
);

1282 
p
=
	`loˇ…ime
(&
timï
);

1284 
	`•rötf
(
s
,"%d-%d-%d %d:%d:%d",(1900+
p
->
tm_yór
), (1+p->
tm_m⁄
),
timeSèmpPå
->
d©e
,timeSèmpPå->
hours
,ÅimeSèmpPå->
möuãs
, (timeSèmpPå->
£c⁄ds
)+
DummyTimeOff£t
);

1286 
	`°rˇt
(
quîy
,
s
);

1287 
	}
}

1289 
	$Së_SJB_ALLZîo
–*
SJBMAC
)

1291 
i
;

1294 
	`°rˇt
(
quîy
, "UPDATE `JunctionBox` SET ");

1295 
	`°rˇt
(
quîy
, "`voltage` = ");

1296 
	`sql_öt
(0);

1297 
	`°rˇt
(
quîy
, " , `current` = ");

1298 
	`sql_öt
(1);

1299 
	`°rˇt
(
quîy
, " , `temp` = ");

1300 
	`sql_öt
(0);

1301 
	`°rˇt
(
quîy
, " , `power` = ");

1302 
	`sql_Êﬂt
(0);

1303 
	`°rˇt
(
quîy
," ,`update_time` = '");

1304 
	`Sql_SîvîTime
();

1305 
	`°rˇt
(
quîy
,"'");

1306 
	`°rˇt
(
quîy
," WHERE `jb_mac` = 0x");

1307 
i
=0;i<5;i++)

1308 
	`sql_ch¨
(
SJBMAC
[
i
]);

1314 
	}
}

1316 
	$INSERT_SJB_PANNEL_Zîo
–*
SJBMAC
)

1318 
i
;

1320 
	`°rsub
(
quîy
,
	`°æí
(query));

1321 
	`°rˇt
(
quîy
, "INSERT `PanelData` (`jb_mac` , `power`, `temp` , `time`) VALUES");

1323 
	`°rˇt
(
quîy
,"(0x");

1324 
i
=0;i<5;i++)

1325 
	`sql_ch¨
(
SJBMAC
[
i
]);

1326 
	`°rˇt
(
quîy
, " , ");

1327 
	`sql_ch¨
(0);

1328 
	`°rˇt
(
quîy
, " , ");

1329 
	`sql_ch¨
(1);

1330 
	`°rˇt
(
quîy
, " , ");

1331 
	`°rˇt
(
quîy
, "'");

1332 
	`Sql_SîvîTime
();

1333 
	`°rˇt
(
quîy
, "'");

1334 
	`°rˇt
(
quîy
, ")");

1337 
	}
}

1339 
	$INSERT_ALL_BLOCKDATA
()

1341 
MYSQL_RES
 *
ªs
=
NULL
;

1342 
MYSQL_ROW
 
row
=
NULL
;

1343 
t
;

1345 
	`°rsub
(
quîy
,
	`°æí
(query));

1346 
	`°rˇt
(
quîy
,"SELECT `block_id` , SUM(`power`)`power` FROM `JunctionBox` GROUP BY `block_id`");

1348 
t
 = 
	`mysql_ªÆ_quîy
(&
mysql
,
quîy
,(Ë
	`°æí
(query));

1349 if(
t
)

1350 
	`¥ötf
("Eº‹ makög quîy: %s\n",
	`mysql_îr‹
(&
mysql
));

1351 
ªs
 = 
	`mysql_°‹e_ªsu…
(&
mysql
);

1353 
	`°rsub
(
quîy
,
	`°æí
(query));

1354 
	`°rˇt
(
quîy
, "INSERT `BlockData` (`block_id` , `power` , `time`) VALUES ");

1355 
row
 = 
	`mysql_„tch_row
(
ªs
)){

1357 
	`°rˇt
(
quîy
,"(");

1358 
	`°rˇt
(
quîy
,
row
[0]);

1359 
	`°rˇt
(
quîy
," , ");

1360 
	`°rˇt
(
quîy
,
row
[1]);

1361 
	`°rˇt
(
quîy
, " , '");

1363 
	`Sql_SîvîTime
();

1364 
	`°rˇt
(
quîy
, "'");

1365 
	`°rˇt
(
quîy
,"),");

1369 
	`mysql_‰ì_ªsu…
(
ªs
);

1373 
	}
}

	@mysql_sum.h

2 
mysql_c⁄√˘
();

3 
mysql_AºayM™agî_Joö
(
SunP⁄ãr
 
pkt
,
˛õ¡_ù
[]);

4 
mysql_Jun˘i⁄Box_Joö
(
SunP⁄ãr
 
pkt
);

5 
mysql_PîiodicD©a
(
SunP⁄ãr
 
pkt
,
Êag
);

6 
mysql_TCPLök
(
SunP⁄ãr
 
pkt
);

7 
mysql_com∑ª
();

8 
sql_AMjoö
(
Êag
,
˛õ¡_ù
[],
AMJoöReque°P⁄ãr
 
amReqPå
);

9 
sql_JBjoö
(
JBJoöInfoP⁄ãr
 
jbInfoPå
);

10 
sql_PD
(
PîiodicD©aPoöãr
 
pdcPå
,
n
,
Êag
);

11 
sql_block
(
am_id
[]);

12 
sql_ch¨
(
ãmp
);

13 
sql_öt
(
ãmp
);

14 
sql_sh‹t
(
ãmp
);

15 
sql_time
();

16 
sql_devi˚time
(
TimeSèmpP⁄ãr
 
timeSèmpPå
);

17 
sql_Êﬂt
(
ãmp
);

19 
°rsub
(*
s1
, 
sub
);

21 
RTCtime
(
SunP⁄ãr
 
pkt
);

23 
°©e_timecom∑ª
(
timef
[]);

25 
	#AM_am_id
 0

	)

26 
	#AM_mac
 1

	)

27 
	#AM_row
 2

	)

28 
	#AM_cﬁ
 3

	)

29 
	#AM_¨ó_id
 4

	)

30 
	#AM_ù
 5

	)

31 
	#AM_p‹t
 6

	)

32 
	#AM_≥riod
 7

	)

33 
	#AM_ö£π_time
 8

	)

34 
	#AM_ªgi°î_time
 9

	)

35 
	#AM_upd©e_time
 10

	)

37 
	#Block_block_id
 0

	)

38 
	#Block_am_id
 1

	)

39 
	#Block_row
 2

	)

40 
	#Block_cﬁ
 3

	)

42 
	#JB_jb_mac
 0

	)

43 
	#JB_¢
 1

	)

44 
	#JB_fúmw¨e_vs
 2

	)

45 
	#JB_h¨dw¨e_vs
 3

	)

46 
	#JB_devi˚_•ec
 4

	)

47 
	#JB_m™uÁ˘uª_d©e
 5

	)

48 
	#JB_pos
 6

	)

49 
	#JB_block_id
 7

	)

50 
	#JB_ö£π_time
 8

	)

51 
	#JB_°©e2
 9

	)

52 
	#JB_°©e
 10

	)

53 
	#JB_vﬁège
 11

	)

54 
	#JB_cuºít
 12

	)

55 
	#JB_ãmp
 13

	)

56 
	#JB_powî
 14

	)

57 
	#JB_upd©e_time
 15

	)

	@mystdlib.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

4 
	~"my°dlib.h
"

7 
	gmem‹yPound
[
BLOCK_SIZE
][
PAGE_SIZE
];

8 
	gvÆidPound
[
BLOCK_SIZE
] = {0};

11 
	gª°Pound
 = 
BLOCK_SIZE
;

13 *
	$ã°my_mÆloc
(
size
)

15 
i
, 
n
, 
nBlocks
;

17 
	`¥ötf
("testmy_malloc \n");

22 i‡(
size
 =0Ë 
NULL
;

24 i‡(
size
 % 
PAGE_SIZE
 == 0) {

25 
nBlocks
 = 
size
 / 
PAGE_SIZE
;

28 
nBlocks
 = (
size
 / 
PAGE_SIZE
) + 1;

30 i‡(
nBlocks
 > 
ª°Pound
Ë 
NULL
;

35 
n
 = 0;

36 
i
 = 0; i < 
BLOCK_SIZE
 && 
n
 < 
nBlocks
; i++) {

37 i‡(
	`IS_VALID
(
vÆidPound
[
i
]))

38 
n
++;

40 
n
 = 0;

43 i‡(
n
 !
nBlocks
)

44  
NULL
;

46 
i
 -
n
;

47 
n
 = 
i
;

52 
ª°Pound
 -
nBlocks
;

55 
i
 = 
n
; 
nBlocks
 > 0; i++,ÇBlocks--) {

56 
vÆidPound
[
i
] = 
	`INVALID_BLOCKS
(
nBlocks
);

58 i‡(
ª°Pound
 < 0) {

59 
	`DEBUG_PRINT
("ERROR: MemoryÜeakage!!!\n");

61 
	`¥ötf
("testmy_mallocÉnd\n");

63  
mem‹yPound
[
n
];

64 
	}
}

66 
	$ã°my_‰ì
(*
±r
)

68 
i
, 
n
, 
nBlocks
;

69 
	`¥ötf
("testmy_free \n");

73 i‡(
±r
 =
NULL
)  ;

78 i‡(()
±r
 < ()
mem‹yPound
[0]) {

79 
	`DEBUG_PRINT
("ERROR: Out ofÑange\n");

85 
n
 = ()
±r
 - ()
mem‹yPound
[0];

86 
n
 =Ç / 
PAGE_SIZE
;

87 
nBlocks
 = 
	`PAGE_LENGTH
(
vÆidPound
[
n
]);

91 i‡(
	`IS_VALID
(
vÆidPound
[
n
])) {

92 
	`DEBUG_PRINT
("ERROR: This block isálready validated\n");

98 i‡(
n
 + 
nBlocks
 > 
BLOCK_SIZE
) {

99 
	`DEBUG_PRINT
("ERROR: MemoryÜeakage!!!-Free > Memory Size\n");

106 
ª°Pound
 +
nBlocks
;

112 
i
 = 
n
; i <Ç + 
nBlocks
; i++) {

113 
vÆidPound
[
i
] = 
VALID_BLOCKS
;

115 
	`¥ötf
("testmy_freeÉnd \n");

118 
	}
}

	@mystdlib.h

1 #i‚de‡
MY_STDLIB_H


2 
	#MY_STDLIB_H


	)

5 
	#MEMORY_SIZE
 (1000* 1024)

	)

6 
	#PAGE_SIZE
 128

7 
	#BLOCK_SIZE
 (
MEMORY_SIZE
 / 
PAGE_SIZE
)

8 

	)

9 
	#INVALID_BIT
 0x0080

	)

10 
	#VALID_BLOCKS
 0x00

	)

11 
	#INVALID_BLOCKS
(
blk
Ë(
INVALID_BIT
 | (blk & 0x007f))

	)

12 
	#PAGE_LENGTH
(
blk
Ë(blk & 0x007f)

	)

13 
	#IS_VALID
(
v
Ëv>=0

	)

14 
	#IS_INVALID
(
v
Ëv<0

	)

17 #ifde‡
M3_DEBUG


23 #ifde‡
M3_TEST


24 
UART¥ötf
(c⁄° *
pcSåög
, ...);

25 
	#DEBUG_PRINT
 
UART¥ötf


	)

27 
	#DEBUG_PRINT
 
¥ötf


	)

35 
	#DEBUG_PRINT
 0Ë(((*)(*, ...))0)

	)

38 #i‚de‡
NULL


39 
	#NULL
 0

	)

42 *
ã°my_mÆloc
(
size
);

43 
ã°my_‰ì
(*
±r
);

	@packetProcessing.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

4 
	~"my°dlib.h
"

5 
	~"∑ckëPrŸŸy≥.h
"

6 
	~"∑ckëPro˚ssög.h
"

7 #ifde‡
M3_TEST


8 
	~"utûs/lwùlib.h
"

9 
	~"lwù/sockës.h
"

12 
	~<time.h
>

14 
mysql_joö
[256];

15 
amcou¡
,
am£t
,
TCP≥riod
;

16 
	gjbsize
=0;

18 
D©eTime
 
	$RTCRe•⁄£2D©eTime
(
RTCRe•⁄£P⁄ãr
 
pkt
)

20 
D©eTime
 
d©e
;

22 
d©e
.
yórs
 = 
pkt
->years + 2000;

23 
d©e
.
m⁄ths
 = 
pkt
->months;

24 
d©e
.d©ê
pkt
->date;

25 
d©e
.
hours
 = 
pkt
->hours;

26 
d©e
.
möuãs
 = 
pkt
->minutes;

28  
d©e
;

29 
	}
}

31 
AMJoöReque°P⁄ãr
 
	$gíî©eAMJoö
()

33 
AMJoöReque°P⁄ãr
 
±r
;

34 
i
;

37 
±r
 = (
AMJoöReque°P⁄ãr
)
	`l_mÆloc
(
SIZE_OF_AM_JOIN_REQUEST_PACKET
);

38 
±r
->
MAC
[0] = 0xA8;

39 
±r
->
MAC
[1] = 0x00;

40 
±r
->
MAC
[2] = 0x00;

41 
±r
->
MAC
[3] = 0x00;

42 
±r
->
MAC
[4] = 0x00;

43 
±r
->
MAC
[5] = 0x02;

44 
±r
->
MAC
[6] = 0xde;

45 
±r
->
MAC
[7] = 0xff;

47 
±r
->
p‹tNumbî
 = 8000;

48 
i
 = 0; i < 200; i++) {

49 
±r
->
comfúmedCode
[
i
] = i;

52  
±r
;

53 
	}
}

55 
AMJoöRe•⁄£Poöãr
 
	$gíî©eAMJoöRe•⁄£
()

57 
AMJoöRe•⁄£Poöãr
 
±r
;

59 
±r
 = (
AMJoöRe•⁄£Poöãr
)
	`l_mÆloc
(
SIZE_OF_AM_JOIN_RESPONSE_PACKET
);

60 if(
mysql_joö
[0]!=0)

61 
±r
->
ack
 = 
mysql_joö
[0];

62  
±r
;

63 
	}
}

65 
PîiodicD©aPoöãr
 
	$gíî©ePîiodicD©a
(
size
)

67 
Jun˘i⁄BoxPoöãr
 
±r
 = 
NULL
;

68 
PîiodicD©aPoöãr
 
pD©a
;

69 
i
, 
j
;

71 
pD©a
 = (
PîiodicD©aPoöãr
)
	`l_mÆloc
(
SIZE_OF_PERIODIC_DATA_PACKET
);

72 
pD©a
->
°amp
.
d©e
 = 15;

73 
pD©a
->
°amp
.
hours
 = 18;

74 
pD©a
->
°amp
.
möuãs
 = 11;

75 
pD©a
->
°amp
.
£c⁄ds
 = 40;

77 
pD©a
->
upd©ePîiod
 = 10;

78 
pD©a
->
nJun˘i⁄Boxes
 = 
size
;

80 
±r
 = (
Jun˘i⁄BoxPoöãr
)
	`l_mÆloc
(
size
 * 
SIZE_OF_JUNCTIONBOX_PACKET
);

81 
pD©a
->
∑ylﬂd
 = (
uöt8
 *)
±r
;

82 
i
 = 0; i < 
size
; i++) {

83 
j
 = 0; j < 8; j++) {

84 
±r
->
MAC
[
j
] = 
i
 * 8 + j;

86 
±r
->
diodeTem≥øtuª
 = (15 + 
i
) * 100 + (18 + i);

87 
±r
->
vﬁège
 = (100 + 
i
) * 100;

88 
±r
->
cuºít
 = (
i
) * 100 + i;

89 
±r
->
powî
 =Öå->
vﬁège
 *Öå->
cuºít
 / 100;

90 
±r
->
°©e
 = 
GOOD
;

91 
±r
 = (
Jun˘i⁄BoxPoöãr
)((Ìå + 
SIZE_OF_JUNCTIONBOX_PACKET
);

95  
pD©a
;

96 
	}
}

98 
SunP⁄ãr
 
	$gíî©eSunPackë
(
uöt8
 
comm™dTy≥
)

100 
SunP⁄ãr
 
pkt
;

101 
PîiodicD©aPoöãr
 
pd©a
;

102 
RTCRe•⁄£P⁄ãr
 
π¸•
;

104 
JBJoöReque°P⁄ãr
 
jbd©a
;

109 
pkt
 = (
SunP⁄ãr
)
	`l_mÆloc
(
SIZE_OF_SUN_PACKET
);

110 
pkt
->
hódîCode
 = 
HEADER_CODE
;

111 
pkt
->
Àngth
 = 
SIZE_OF_SUN_PACKET
;

112 
pkt
->
£quí˚Numbî
 = 0;

113 
pkt
->
comm™dTy≥
 = commandType;

114 
pkt
->
nPaylﬂd
 = 0;

115 
pkt
->
∑ylﬂd
 = 
NULL
;

116 
pkt
->
èûCode
 = 
TAIL_CODE
;

118 
comm™dTy≥
) {

119 
AM_JOIN_REQUEST
:

120 
pkt
->
nPaylﬂd
 = 1;

121 
pkt
->
∑ylﬂd
 = (
uöt8
 *)
	`gíî©eAMJoö
();

122 
pkt
->
Àngth
 = 
AM_JOIN_WHOLE_SIZE
;

124 
AM_JOIN_RESPONSE
:

125 
pkt
->
nPaylﬂd
 = 1;

126 
pkt
->
∑ylﬂd
 = (
uöt8
 *)
	`gíî©eAMJoöRe•⁄£
();

127 
pkt
->
Àngth
 = 
AM_JRSP_WHOLE_SIZE
;

129 
RTC_UPDATE_REQUEST
:

130 
pkt
->
nPaylﬂd
 = 1;

131 
pkt
->
∑ylﬂd
 = (
uöt8
 *)
	`l_mÆloc
(
SIZE_OF_RTC_REQUEST_PACKET
);

132 
pkt
->
Àngth
 = 
RTC_REQ_WHOLE_SIZE
;

133 *(
pkt
->
∑ylﬂd
Ë
CMD_RTC_UPDATE_REQUEST
;

135 
RTC_UPDATE_RESPONSE
:

136 
pkt
->
nPaylﬂd
 = 1;

137 
pkt
->
∑ylﬂd
 = (
uöt8
 *)
	`l_mÆloc
(
SIZE_OF_RTC_RESPONSE_PACKET
);

138 
pkt
->
Àngth
 = 
RTC_RSP_WHOLE_SIZE
;

139 
π¸•
 = (
RTCRe•⁄£P⁄ãr
)
pkt
->
∑ylﬂd
;

140 
π¸•
->
yórs
 = 12;

141 
π¸•
->
m⁄ths
 = 11;

142 
π¸•
->
d©e
 = 12;

143 
π¸•
->
hours
 = 17;

144 
π¸•
->
möuãs
 = 44;

146 
PERIODIC_DATA
:

147 
pkt
->
nPaylﬂd
 = 1;

148 
pkt
->
∑ylﬂd
 = (
uöt8
 *)
	`gíî©ePîiodicD©a
(100);

149 
pd©a
 = (
PîiodicD©aPoöãr
)
pkt
->
∑ylﬂd
;

150 
pkt
->
Àngth
 = 
	`PRD_DTA_WHOLE_SIZE
(
pd©a
->
nJun˘i⁄Boxes
);

152 
JB_JOIN_REQUEST
:

153 
pkt
->
nPaylﬂd
 = 1;

154 
pkt
->
∑ylﬂd
 = (
uöt8
 *)
	`gíî©eJBJoö
(10);

155 
jbd©a
 = (
JBJoöReque°P⁄ãr
)
pkt
->
∑ylﬂd
;

156 
pkt
->
Àngth
 = 
	`JB_JOIN_WHOLE_SIZE
(10);

157 
	`¥ötf
("JB_JOIN_REQUEST\n");

159 
JB_JOIN_RESPNOSE
:

164 
TCP_PERIODIC_LINK
:

165 
pkt
->
nPaylﬂd
 = 1;

166 
pkt
->
∑ylﬂd
 = (
uöt8
 *)
	`gíî©eTCPLök
();

167 
pkt
->
Àngth
 = 
TCP_LINK_WHOLE_SIZE
;

169 
ARRAY_MANGER_SETTING
:

177  
pkt
;

178 
	}
}

180 
uöt8
 *
	$∑ckë2Aºay
(
SunP⁄ãr
 
pkt
)

182 
uöt8
 *
¨øy
, *
±r
;

183 
i
, 
n
;

184 
PîiodicD©aPoöãr
 
pD©aPoöãr
;

185 
JBJoöReque°P⁄ãr
 
jbJoöPoöãr
;

186 
	`¥ötf
("∑ckë2Aºay sèπ ,pkt=%xÖkt->Àngth=%d \n",
pkt
,pkt->
Àngth
);

187 i‡(
pkt
 =
NULL
)

188  
NULL
;

189 
¨øy
 = (
uöt8
 *)
	`l_mÆloc
(
pkt
->
Àngth
 + 4);

190 
	`¥ötf
("¨øy=%x \n",
¨øy
);

192 
±r
 = (
uöt8
 *)
pkt
;

193 
i
 = 0, 
n
 = 0; i < 
SIZE_BEFORE_PAYLOAD
; i++,Ç++) {

194 
¨øy
[
n
] = 
±r
[
i
];

197 
	`¥ötf
("comm™dTy≥=%d \n",
pkt
->
comm™dTy≥
 );

199 i‡(
pkt
->
comm™dTy≥
 =
PERIODIC_DATA
) {

200 
±r
 = (
uöt8
 *)
pkt
->
∑ylﬂd
;

201 
i
 = 0; i < 
SIZE_OF_PERIODIC_DATA_PACKET_LESS
; i++, 
n
++) {

202 
¨øy
[
n
] = 
±r
[
i
];

204 
pD©aPoöãr
 = (
PîiodicD©aPoöãr
)
pkt
->
∑ylﬂd
;

205 
±r
 = (
uöt8
 *)
pD©aPoöãr
->
∑ylﬂd
;

206 
i
 = 0; i < 
	`∑yLﬂdSize
(
pkt
Ë- 
SIZE_OF_PERIODIC_DATA_PACKET_LESS
; i++, 
n
++) {

207 
¨øy
[
n
] = 
±r
[
i
];

210 i‡(
pkt
->
comm™dTy≥
 =
JB_JOIN_REQUEST
) {

212 
±r
 = (
uöt8
 *)
pkt
->
∑ylﬂd
;

213 
i
 = 0; i < 
JB_JOIN_REQUEST_PACKET_LESS
; i++, 
n
++) {

214 
¨øy
[
n
] = 
±r
[
i
];

216 
jbJoöPoöãr
 = (
JBJoöReque°P⁄ãr
)
pkt
->
∑ylﬂd
;

217 
±r
 = (
uöt8
 *)
jbJoöPoöãr
->
∑ylﬂd
;

218 
i
 = 0; i < 
	`∑yLﬂdSize
(
pkt
Ë- 
JB_JOIN_REQUEST_PACKET_LESS
; i++, 
n
++) {

219 
¨øy
[
n
] = 
±r
[
i
];

223 
	`¥ötf
("packet2ArrayÑes \n");

224 
±r
 = (
uöt8
 *)
pkt
->
∑ylﬂd
;

225 
i
 = 0; i < 
	`∑yLﬂdSize
(
pkt
); i++, 
n
++) {

226 
¨øy
[
n
] = 
±r
[
i
];

231 
¨øy
[
n
++] = 
pkt
->
èûCode
;

232 
¨øy
[
n
] = 0;

233 i‡(
pkt
->
Àngth
 + 4 !
n
) {

234 
	`¥ötf
("\n\nERROR sizênŸ m©ch: %d / %d\n\n", 
n
, 
pkt
->
Àngth
 + 4);

236 
	`¥ötf
("packet2Array END \n");

237  
¨øy
;

238 
	}
}

240 
SunP⁄ãr
 
	$¨øy2Packë
(
uöt8
 * 
¨øy
)

242 
uöt8
 *
±r
;

243 
SunP⁄ãr
 
pkt
;

244 
i
, 
n
;

245 
PîiodicD©aPoöãr
 
pD©aPoöãr
;

246 
Jun˘i⁄BoxPoöãr
 
µp
;

248 
JBJoöReque°P⁄ãr
 
jbJoöPoöãr
;

250 i‡(
¨øy
 =
NULL
)

251  
NULL
;

252 i‡(
¨øy
[0] !
HEADER_CODE
)

253  
NULL
;

254 
pkt
 = (
SunP⁄ãr
)
	`l_mÆloc
(
SIZE_OF_SUN_PACKET
);

256 
±r
 = (
uöt8
 *)
pkt
;

257 
i
 = 0, 
n
 = 0; i < 
SIZE_BEFORE_PAYLOAD
; i++,Ç++) {

258 
±r
[
i
] = 
¨øy
[
n
];

262 i‡(
pkt
->
comm™dTy≥
 =
PERIODIC_DATA
) {

264 
pkt
->
∑ylﬂd
 = (
uöt8
 *)
	`l_mÆloc
(
SIZE_OF_PERIODIC_DATA_PACKET_LESS
);

266 
±r
 = (
uöt8
 *)
pkt
->
∑ylﬂd
;

267 
i
 = 0; i < 
SIZE_OF_PERIODIC_DATA_PACKET_LESS
; i++, 
n
++) {

268 
±r
[
i
] = 
¨øy
[
n
];

272 
pD©aPoöãr
 = (
PîiodicD©aPoöãr
)
pkt
->
∑ylﬂd
;

273 
pD©aPoöãr
->
∑ylﬂd
 = (
uöt8
 *)
	`l_mÆloc
(
	`∑yLﬂdSize
(
pkt
Ë- 
SIZE_OF_PERIODIC_DATA_PACKET_LESS
);

274 
±r
 = (
uöt8
 *)
pD©aPoöãr
->
∑ylﬂd
;

275 
i
 = 0; i < 
	`∑yLﬂdSize
(
pkt
Ë- 
SIZE_OF_PERIODIC_DATA_PACKET_LESS
; i++, 
n
++) {

276 
±r
[
i
] = 
¨øy
[
n
];

279 i‡(
pkt
->
comm™dTy≥
 =
JB_JOIN_REQUEST
) {

281 
pkt
->
∑ylﬂd
 = (
uöt8
 *)
	`l_mÆloc
(
JB_JOIN_REQUEST_PACKET_LESS
);

283 
±r
 = (
uöt8
 *)
pkt
->
∑ylﬂd
;

284 
i
 = 0; i < 
JB_JOIN_REQUEST_PACKET_LESS
; i++, 
n
++) {

285 
±r
[
i
] = 
¨øy
[
n
];

289 
jbJoöPoöãr
 = (
JBJoöReque°P⁄ãr
)
pkt
->
∑ylﬂd
;

290 
jbJoöPoöãr
->
∑ylﬂd
 = (
uöt8
 *)
	`l_mÆloc
(
	`∑yLﬂdSize
(
pkt
Ë- 
JB_JOIN_REQUEST_PACKET_LESS
);

291 
±r
 = (
uöt8
 *)
jbJoöPoöãr
->
∑ylﬂd
;

292 
i
 = 0; i < 
	`∑yLﬂdSize
(
pkt
Ë- 
JB_JOIN_REQUEST_PACKET_LESS
; i++, 
n
++) {

293 
±r
[
i
] = 
¨øy
[
n
];

297 
pkt
->
∑ylﬂd
 = (
uöt8
 *)
	`l_mÆloc
(
	`∑yLﬂdSize
(pkt));

298 
±r
 = (
uöt8
 *)
pkt
->
∑ylﬂd
;

299 
i
 = 0; i < 
	`∑yLﬂdSize
(
pkt
); i++, 
n
++) {

300 
±r
[
i
] = 
¨øy
[
n
];

305 
pkt
->
èûCode
 = 
¨øy
[
n
++];

308 i‡((
pkt
->
Àngth
 + 4Ë!
n
 ||Ökt->
èûCode
 !
TAIL_CODE
) {

309 
	`l_‰ì
(
pkt
->
∑ylﬂd
);

310 
	`l_‰ì
(
pkt
);

312 
	`¥ötf
("\n\nERROR sizênŸ m©ch: %d / %d o∏èû codê%X\n\n", 
n
, 
pkt
->
Àngth
 + 4,Ökt->
èûCode
);

313  
NULL
;

316  
pkt
;

317 
	}
}

319 
	$AM_Joö
(
RemŸefd
)

321 
SunP⁄ãr
 
pkt
;

322 
uöt8
 *
¨øy
;

324 
pkt
 = 
	`gíî©eSunPackë
(
AM_JOIN_REQUEST
);

325 
¨øy
 = 
	`∑ckë2Aºay
(
pkt
);

326 
	`£nd
–
RemŸefd
, 
¨øy
, 
pkt
->
Àngth
+5,0);

328 
	`l_‰ì
(
pkt
->
∑ylﬂd
);

329 
	`l_‰ì
(
pkt
);

330 
	`l_‰ì
(
¨øy
);

332 
¨øy
 = (
uöt8
 *)
	`l_mÆloc
(512);

333 
	`ªcv
(
RemŸefd
, 
¨øy
, 512, 0);

334 
pkt
 = 
	`¨øy2Packë
(
¨øy
);

335 
	`showSunPackëInfo
(
pkt
);

336 
	`l_‰ì
(
¨øy
);

337 i‡(
pkt
 !
NULL
) {

338 i‡(
pkt
->
comm™dTy≥
 =
AM_JOIN_RESPONSE
) {

339 i‡(*(
pkt
->
∑ylﬂd
Ë!
JOIN_ACK
) {

340 
	`¥ötf
("NACK\n");

343 
	`¥ötf
("ACK\n");

347 
	`¥ötf
("commandTypeÉrror\n");

349 
	`l_‰ì
(
pkt
->
∑ylﬂd
);

350 
	`l_‰ì
(
pkt
);

353 
	`¥ötf
("Packet Crushed\n");

355 
	}
}

357 
D©eTime
 
	$RTC_Reque°
(
RemŸefd
)

359 
SunP⁄ãr
 
pkt
;

360 
uöt8
 *
¨øy
;

361 
D©eTime
 
d©e
;

363 
pkt
 = 
	`gíî©eSunPackë
(
RTC_UPDATE_REQUEST
);

364 
¨øy
 = 
	`∑ckë2Aºay
(
pkt
);

365 
	`£nd
(
RemŸefd
, 
¨øy
, 
pkt
->
Àngth
+5,0);

367 i‡(
pkt
 !
NULL
) {

368 
	`l_‰ì
(
pkt
->
∑ylﬂd
);

369 
	`l_‰ì
(
pkt
);

370 
	`l_‰ì
(
¨øy
);

373 
¨øy
 = (
uöt8
 *)
	`l_mÆloc
(512);

374 
	`ªcv
(
RemŸefd
, 
¨øy
, 512, 0);

375 
pkt
 = 
	`¨øy2Packë
(
¨øy
);

376 i‡(
pkt
 !
NULL
) {

377 
	`showSunPackëInfo
(
pkt
);

378 i‡(
pkt
->
comm™dTy≥
 =
RTC_UPDATE_RESPONSE
) {

379 
d©e
 = 
	`RTCRe•⁄£2D©eTime
((
RTCRe•⁄£P⁄ãr
)
pkt
->
∑ylﬂd
);

383 
	`¥ötf
("commandTypeÉrror\n");

385 
	`l_‰ì
(
pkt
->
∑ylﬂd
);

386 
	`l_‰ì
(
pkt
);

387 
	`l_‰ì
(
¨øy
);

390 
	`¥ötf
("Packet Crushed\n");

393  
d©e
;

394 
	}
}

396 
	$£ndPîiodicD©a
(
RemŸefd
)

398 
SunP⁄ãr
 
pkt
;

399 
uöt8
 *
¨øy
;

400 
D©eTime
 
d©e
;

401 
PîiodicD©aPoöãr
 
p
;

403 
pkt
 = 
	`gíî©eSunPackë
(
PERIODIC_DATA
);

404 
¨øy
 = 
	`∑ckë2Aºay
(
pkt
);

405 
	`£nd
(
RemŸefd
, 
¨øy
, 
pkt
->
Àngth
+5,0);

407 i‡(
pkt
 !
NULL
) {

408 
p
 = (
PîiodicD©aPoöãr
)
pkt
->
∑ylﬂd
;

409 
	`l_‰ì
(
p
->
∑ylﬂd
);

410 
	`l_‰ì
(
pkt
->
∑ylﬂd
);

411 
	`l_‰ì
(
pkt
);

412 
	`l_‰ì
(
¨øy
);

416 
	}
}

418 
	$showSunPackëInfo
(
SunP⁄ãr
 
pkt
){

419 
AMJoöReque°P⁄ãr
 
amReqPå
 = 
NULL
;

420 
AMJoöRe•⁄£Poöãr
 
amR•På
 = 
NULL
;

421 
RTCReque°P⁄ãr
 
πcReqPå
 = 
NULL
;

422 
RTCRe•⁄£P⁄ãr
 
πcR•På
 = 
NULL
;

423 
TimeSèmpP⁄ãr
 
timeSèmpPå
 = 
NULL
;

424 
Jun˘i⁄BoxPoöãr
 
jBoxPå
 = 
NULL
;

425 
PîiodicD©aPoöãr
 
pdcPå
 = 
NULL
;

427 
JBJoöReque°P⁄ãr
 
jbReqPå
 = 
NULL
;

428 
JBJoöInfoP⁄ãr
 
jbInfoPå
 = 
NULL
;

429 
JBJoöRe•⁄£Poöãr
 
jbR•På
 = 
NULL
;

431 
TCPPîiodicLökPoöãr
 
t˝lökPå
 = 
NULL
;

432 
AMSëtögPoöãr
 
am£tPå
 = 
NULL
;

434 
i
, 
j
, 
n
;

436 
	`¥ötf
("==========Sun Packet==========\n\r");

437 
	`¥ötf
("Hódî Codê: 0x%X\n\r", 
pkt
->
hódîCode
);

438 
	`¥ötf
("Packë Lí. : %d\n\r", 
pkt
->
Àngth
);

439 
	`¥ötf
("Sequí˚ #. : %d\n\r", 
pkt
->
£quí˚Numbî
);

440 
	`¥ötf
("Packë Ty≥ : 0x%X\n\r", 
pkt
->
comm™dTy≥
);

441 
	`¥ötf
("Hódî Codê: %d\n\r", 
pkt
->
nPaylﬂd
);

442 
	`¥ötf
("Paylﬂd Ad∏: 0x%X\n\r", ()(
pkt
->
∑ylﬂd
));

443 
	`¥ötf
("Taû Codê : 0x%X\n\r", 
pkt
->
èûCode
);

444 
	`¥ötf
("----------");

445 
pkt
->
comm™dTy≥
) {

446 
AM_JOIN_REQUEST
:

447 
	`¥ötf
("AMJOIN_REQ----------\n\r");

448 
amReqPå
 = (
AMJoöReque°P⁄ãr
)
pkt
->
∑ylﬂd
;

449 
	`¥ötf
("MAC Addªs† : %02X:%02X:%02X:%02X:%02X:%02X\n\r", 
amReqPå
->
MAC
[0],ámReqPtr->MAC[1],ámReqPtr->MAC[2],ámReqPtr->MAC[3],

450 
amReqPå
->
MAC
[4],ámReqPtr->MAC[5]);

451 
	`¥ötf
("P‹àNumbî : %d\n\r", 
amReqPå
->
p‹tNumbî
);

452 
	`¥ötf
("Confirm Code : \n\r");

453 
i
 = 0; i < 200; i++) {

454 i‡(
i
 % 16 == 0) {

455 
	`¥ötf
("\n%02X: ", 
i
 / 16);

457 
	`¥ötf
("%02X, ", 
amReqPå
->
comfúmedCode
[
i
] & 0x00ff);

459 
	`¥ötf
("\n\r");

461 
AM_JOIN_RESPONSE
:

462 
	`¥ötf
("AMJOIN_RSP----------\n\r");

463 
amR•På
 = (
AMJoöRe•⁄£Poöãr
)
pkt
->
∑ylﬂd
;

464 
	`¥ötf
("Acknowledge : ");

465 
amR•På
->
ack
) {

466 
JOIN_ACK
:

467 
	`¥ötf
("Join is Successful.\n\r");

469 
JOIN_NACK_MAC
:

470 
	`¥ötf
("MAC Doesn't Exist.\n\r");

472 
JOIN_NACK
:

473 
	`¥ötf
("Retry on Next Time Period.\n\r");

476 
	`¥ötf
("ERROR: UnknownÅype\n\r");

480 
RTC_UPDATE_REQUEST
:

481 
πcReqPå
 = (
RTCReque°P⁄ãr
)
pkt
->
∑ylﬂd
;

482 
	`¥ötf
("RTC_UP_REQ----------\n\r");

484 i‡(
πcReqPå
->
ty≥
 =
CMD_RTC_UPDATE_REQUEST
)

485 
	`¥ötf
("RTCupdateÑeq: Request\n\r");

487 
	`¥ötf
("RTCupdateÑeq: UnknownÅype\n\r");

489 
RTC_UPDATE_RESPONSE
:

490 
	`¥ötf
("RTC_UP_RSP----------\n\r");

491 
πcR•På
 = (
RTCRe•⁄£P⁄ãr
)
pkt
->
∑ylﬂd
;

493 
	`¥ötf
("RTCupd©êr•: %d, %d/%d, %02d'%02d''\n\r", ()(
πcR•På
->
yórs
Ë+ 2000,ÑtcR•På->
m⁄ths
,ÑtcR•På->
d©e
,ÑtcR•På->
hours
,ÑtcR•På->
möuãs
);

495 
PERIODIC_DATA
:

496 
	`¥ötf
("PERIODIC_D----------\n\r");

497 
pdcPå
 = (
PîiodicD©aPoöãr
)
pkt
->
∑ylﬂd
;

498 
timeSèmpPå
 = &(
pdcPå
->
°amp
);

499 
jBoxPå
 = (
Jun˘i⁄BoxPoöãr
)
pdcPå
->
∑ylﬂd
;

500 
n
 = 
pdcPå
->
nJun˘i⁄Boxes
;

502 
	`¥ötf
("timê°am∞ : %d, %02d:%02d:%02d\n\r", 
timeSèmpPå
->
d©e
,ÅimeSèmpPå->
hours
,ÅimeSèmpPå->
möuãs
,ÅimeSèmpPå->
£c⁄ds
);

503 
	`¥ötf
("upd©ê≥riod: %d\n\r", 
pdcPå
->
upd©ePîiod
);

504 
	`¥ötf
("# o‡J. boxes: %d\n\r", 
pdcPå
->
nJun˘i⁄Boxes
);

505 
	`¥ötf
("J. boxes data:\n\r");

506 
i
 = 0; i < 
n
; i++) {

507 
	`¥ötf
("\tMAC Addªs† : %02X:%02X:%02X:%02X:%02X:%02X\n\r", 
jBoxPå
->
MAC
[0], jBoxPtr->MAC[1], jBoxPtr->MAC[2], jBoxPtr->MAC[3],

508 
jBoxPå
->
MAC
[4], jBoxPtr->MAC[5]);

509 
	`¥ötf
("\tD.Åem±uª : %d\n\r", 
jBoxPå
->
diodeTem≥øtuª
);

510 
	`¥ötf
("\tVﬁègê : %4.2f\n\r", 
jBoxPå
->
vﬁège
/100.0);

511 
	`¥ötf
("\tCuºíà : %4.2f\n\r", 
jBoxPå
->
cuºít
/100.0);

512 
	`¥ötf
("\tPowî : %4.2f\n\r", 
jBoxPå
->
powî
/100.0);

513 
	`¥ötf
("\tSètu† : %04X\n\n\r", 
jBoxPå
->
°©e
);

514 
jBoxPå
 = (
Jun˘i⁄BoxPoöãr
)(()jBoxPå + 
SIZE_OF_JUNCTIONBOX_PACKET
);

517 
JB_JOIN_REQUEST
:

518 
	`¥ötf
("JBJOIN_REQ----------\n\r");

519 
jbReqPå
 = (
JBJoöReque°P⁄ãr
)
pkt
->
∑ylﬂd
;

520 
	`¥ötf
("AM_MAC Addªs† : %02X:%02X:%02X:%02X:%02X:%02X\n\r", 
jbReqPå
->
AM_MAC
[0], jbReqPtr->AM_MAC[1], jbReqPtr->AM_MAC[2], jbReqPtr->AM_MAC[3],

521 
jbReqPå
->
AM_MAC
[4], jbReqPtr->AM_MAC[5]);

522 
	`¥ötf
("Numbî Jun˘i⁄Box : %d\n\r", 
jbReqPå
->
nJun˘i⁄Boxes
);

523 
n
 = 
jbReqPå
->
nJun˘i⁄Boxes
;

524 
jbsize
=
n
;

525 
jbInfoPå
 = (
JBJoöInfoP⁄ãr
)
jbReqPå
->
∑ylﬂd
;

526 
j
 = 0; j < 
n
; j++){

528 
	`¥ötf
("JB_MAC Addªs† : %02X:%02X:%02X:%02X:%02X:%02X\n\r", 
jbInfoPå
->
JB_MAC
[0], jbInfoPtr->JB_MAC[1], jbInfoPtr->JB_MAC[2], jbInfoPtr->JB_MAC[3],

529 
jbInfoPå
->
JB_MAC
[4], jbInfoPtr->JB_MAC[5]);

531 
	`¥ötf
("SerialNumber : ");

532 
	`¥ötf
("%s",
jbInfoPå
->
SîülNumbî
);

533 
	`¥ötf
("\n\r");

534 
	`¥ötf
("FirmwareVersion : ");

535 
	`¥ötf
("%s",
jbInfoPå
->
Fúmw¨eVîsi⁄
);

536 
	`¥ötf
("\n\r");

537 
	`¥ötf
("HardwareVersion : ");

538 
	`¥ötf
("%s",
jbInfoPå
->
H¨dw¨eVîsi⁄
);

539 
	`¥ötf
("\n\r");

540 
	`¥ötf
("DeviceSpecification : ");

541 
	`¥ötf
("%s",
jbInfoPå
->
Devi˚S≥cifiˇti⁄
);

542 
	`¥ötf
("\n\r");

543 
	`¥ötf
("ManufactureData : ");

544 
	`¥ötf
("%s",
jbInfoPå
->
M™uÁ˘uªD©a
);

545 
	`¥ötf
("\n\n\r");

546 
jbInfoPå
 = (
JBJoöInfoP⁄ãr
)(()jbInfoPå + 
SIZE_OF_JB_JOIN_INFO_PACKET
);

548 
	`¥ötf
("\n\r");

550 
JB_JOIN_RESPNOSE
:

551 
	`¥ötf
("JBJOIN_RSP----------\n\r");

552 
jbR•På
 = (
JBJoöRe•⁄£Poöãr
)
pkt
->
∑ylﬂd
;

553 
i
=0;i<
jbsize
;i++){

554 
	`¥ötf
("JB_MAC Addªs†: %02X:%02X:%02X:%02X:%02X:%02X\n\r", 
jbR•På
->
JB_MAC
[0], jbRspPtr->JB_MAC[1], jbRspPtr->JB_MAC[2], jbRspPtr->JB_MAC[3],

555 
jbR•På
->
JB_MAC
[4], jbRspPtr->JB_MAC[5]);

556 
	`¥ötf
("Acknowledge : ");

557 
jbR•På
->
ack
) {

559 
	`¥ötf
("Join is Successful.\n\r");

562 
	`¥ötf
("MAC Doesn't Exist.\n\r");

565 
	`¥ötf
("Retry on Next Time Period.\n\r");

568 
	`¥ötf
("ERROR: UnknownÅype\n\r");

571 
jbR•På
 = (
JBJoöRe•⁄£Poöãr
)(()jbR•På + 
SIZE_OF_JB_JOIN_RESPONSE_PACKET
);

574 
TCP_PERIODIC_LINK
:

575 
	`¥ötf
("TCP_LINK------------\n\r");

576 
t˝lökPå
 = (
TCPPîiodicLökPoöãr
)
pkt
->
∑ylﬂd
;

577 
	`¥ötf
("AMRTCTimê :20%d/%d/%d %d:%d:%d\n",
t˝lökPå
->
AMRTCTime
[0],tcplinkPtr->AMRTCTime[1],tcplinkPtr->AMRTCTime[2],tcplinkPtr->AMRTCTime[3],tcplinkPtr->AMRTCTime[4],tcplinkPtr->AMRTCTime[5]);

578 
	`¥ötf
("UpPîiod :%d\n",
t˝lökPå
->
UpPîiod
);

579 
	`¥ötf
("TCPLökPîiod :%d\n",
t˝lökPå
->
TCPLökPîiod
);

581 
ARRAY_MANGER_SETTING
:

582 
	`¥ötf
("AM_ARRAY------------\n\r");

583 
am£tPå
 = (
AMSëtögPoöãr
)
pkt
->
∑ylﬂd
;

584 
i
=0;i<
pkt
->
nPaylﬂd
;i++){

585 
	`¥ötf
("SëtögTy≥ :%d\n",
am£tPå
->
SëtögD©e
[0]);

586 
am£tPå
->
SëtögD©e
[0]){

587 
UPDATE_RTC
 :

588 
	`¥ötf
("SëtögD©ê:20%d/%d/%d %d:%d:%d\n",
am£tPå
->
SëtögD©e
[1],amsetPtr->SettingDate[2],amsetPtr->SettingDate[3],amsetPtr->SettingDate[4],amsetPtr->SettingDate[5],amsetPtr->SettingDate[6]);

589 
	`¥ötf
("----------UPDATE_RTC----------\n\r");

590 
am£tPå
 = (
AMSëtögPoöãr
)(()amsetPtr + 7);

592 
UPADTE_PERIOD
 :

593 
	`¥ötf
("SëtögD©ê:%d\n",(
am£tPå
->
SëtögD©e
[1]<<8)|amsetPtr->SettingDate[2]);

594 
	`¥ötf
("---------UPADTE_PERIOD--------\n\r");

595 
am£tPå
 = (
AMSëtögPoöãr
)(()amsetPtr + 3);

597 
TCP_LINK_PERIOD
 :

598 
	`¥ötf
("SëtögD©ê:%d\n",(
am£tPå
->
SëtögD©e
[1]<<8)|amsetPtr->SettingDate[2]);

599 
	`¥ötf
("--------TCP_LINK_PERIOD-------\n\r");

600 
am£tPå
 = (
AMSëtögPoöãr
)(()amsetPtr + 3);

602 
RESET_ARRAY_MANGER
 :

603 
	`¥ötf
("SëtögD©ê:%02X %02X %02X %02X\n",
am£tPå
->
SëtögD©e
[1],amsetPtr->SettingDate[2],amsetPtr->SettingDate[3],amsetPtr->SettingDate[4]);

604 
	`¥ötf
("------RESET_ARRAY_MANGER------\n\r");

605 
am£tPå
 = (
AMSëtögPoöãr
)(()amsetPtr + 5);

607 
RESET_JUNCTION_BOX
 :

608 
	`¥ötf
("SëtögD©ê:%02X %02X %02X %02X %02X %02X\n",
am£tPå
->
SëtögD©e
[1],amsetPtr->SettingDate[2],amsetPtr->SettingDate[3],amsetPtr->SettingDate[4],amsetPtr->SettingDate[5],amsetPtr->SettingDate[6]);

609 
	`¥ötf
("------RESET_JUNCTION_BOX------\n\r");

610 
am£tPå
 = (
AMSëtögPoöãr
)(()amsetPtr + 7);

616 
	`¥ötf
("==========End Packet==========\n\r");

617 
	}
}

619 
	$ªÀa£Packë
(
SunP⁄ãr
 
pkt
){

620 i‡(
pkt
->
comm™dTy≥
 =
PERIODIC_DATA
) {

621 
	`l_‰ì
(((
PîiodicD©aPoöãr
)(
pkt
->
∑ylﬂd
))->payload);

623 i‡(
pkt
->
comm™dTy≥
 =
JB_JOIN_REQUEST
) {

624 
	`l_‰ì
(((
JBJoöReque°P⁄ãr
)(
pkt
->
∑ylﬂd
))->payload);

626 
	`l_‰ì
(
pkt
->
∑ylﬂd
);

627 
	`l_‰ì
(
pkt
);

628 
	}
}

630 
	$JB_Joö
(
RemŸefd
)

632 
SunP⁄ãr
 
pkt
;

633 
uöt8
 *
¨øy
;

635 
pkt
 = 
	`gíî©eSunPackë
(
JB_JOIN_REQUEST
);

636 
¨øy
 = 
	`∑ckë2Aºay
(
pkt
);

637 
	`£nd
–
RemŸefd
, 
¨øy
, 
pkt
->
Àngth
+5,0);

641 
	`l_‰ì
(
pkt
->
∑ylﬂd
);

642 
	`l_‰ì
(
pkt
);

643 
	`l_‰ì
(
¨øy
);

645 
¨øy
 = (
uöt8
 *)
	`l_mÆloc
(512);

646 
	`ªcv
(
RemŸefd
, 
¨øy
, 512, 0);

647 
pkt
 = 
	`¨øy2Packë
(
¨øy
);

648 
	`showSunPackëInfo
(
pkt
);

649 
	`l_‰ì
(
¨øy
);

651 
	}
}

653 
JBJoöReque°P⁄ãr
 
	$gíî©eJBJoö
(
numbî
){

654 
JBJoöInfoP⁄ãr
 
±r
 = 
NULL
;

655 
JBJoöReque°P⁄ãr
 
jbD©a
;

656 
i
;

658 
jbD©a
 = (
JBJoöReque°P⁄ãr
)
	`l_mÆloc
(
SIZE_OF_JB_JOIN_REQUEST_PACKET
);

660 
jbD©a
->
AM_MAC
[0] = 0xA8;

661 
jbD©a
->
AM_MAC
[1] = 0x00;

662 
jbD©a
->
AM_MAC
[2] = 0x00;

663 
jbD©a
->
AM_MAC
[3] = 0x00;

664 
jbD©a
->
AM_MAC
[4] = 0x00;

665 
jbD©a
->
AM_MAC
[5] = 0x02;

666 
jbD©a
->
nJun˘i⁄Boxes
 = 
numbî
;

668 
±r
 = (
JBJoöInfoP⁄ãr
)
	`l_mÆloc
(
numbî
*
SIZE_OF_JB_JOIN_INFO_PACKET
);

669 
jbD©a
->
∑ylﬂd
 = (
uöt8
 *)
±r
;

670 
i
 = 0; i < 6; i++)

671 
±r
->
JB_MAC
[
i
] =i;

673 
i
 = 0; i < 24; i++){

674 
±r
->
SîülNumbî
[
i
]=i;

675 
±r
->
Fúmw¨eVîsi⁄
[
i
]=23-i;

676 
±r
->
H¨dw¨eVîsi⁄
[
i
]=i*2;

677 
±r
->
Devi˚S≥cifiˇti⁄
[
i
]=i*4;

680 
i
 = 0; i < 8; i++)

681 
±r
->
M™uÁ˘uªD©a
[
i
]=i+2;

683  
jbD©a
;

684 
	}
}

686 
SunP⁄ãr
 
	$gíî©eSunPackëJB
(
SunP⁄ãr
 
pkt
){

687 
i
,
j
;

688 
SunP⁄ãr
 
pkt2
;

690 
JBJoöReque°P⁄ãr
 
jbReqPå
 = 
NULL
;

691 
JBJoöInfoP⁄ãr
 
jbInfoPå
 = 
NULL
;

692 
JBJoöRe•⁄£Poöãr
 
jbR•På
 = 
NULL
;

694 
jbReqPå
 = (
JBJoöReque°P⁄ãr
)
pkt
->
∑ylﬂd
;

695 
jbInfoPå
 = (
JBJoöInfoP⁄ãr
)
jbReqPå
->
∑ylﬂd
;

697 
pkt2
 = (
SunP⁄ãr
)
	`l_mÆloc
(
SIZE_OF_SUN_PACKET
);

698 
pkt2
->
hódîCode
 = 
HEADER_CODE
;

699 
pkt2
->
Àngth
 = 
SIZE_OF_SUN_PACKET
;

700 
pkt2
->
£quí˚Numbî
 = 0;

701 
pkt2
->
comm™dTy≥
 = 
JB_JOIN_RESPNOSE
;

702 
pkt2
->
nPaylﬂd
 = 
jbReqPå
->
nJun˘i⁄Boxes
;

703 
pkt2
->
∑ylﬂd
 = 
NULL
;

704 
pkt2
->
èûCode
 = 
TAIL_CODE
;

705 
	`¥ötf
("generateSunPacketJB \n");

706 
	`¥ötf
("gíî©eSunPackëJB Mem=%d \n",
jbReqPå
->
nJun˘i⁄Boxes
 * 
SIZE_OF_JB_JOIN_RESPONSE_PACKET
);

707 
jbR•På
 = (
JBJoöRe•⁄£Poöãr
)
	`l_mÆloc
((
jbReqPå
->
nJun˘i⁄Boxes
 * 
SIZE_OF_JB_JOIN_RESPONSE_PACKET
));

708 
pkt2
->
∑ylﬂd
 = (
uöt8
 *)
jbR•På
;

709 
	`¥ötf
("jbR•På =%x \n",
jbR•På
);

710 
j
=0;j<
jbReqPå
->
nJun˘i⁄Boxes
;j++){

711 
i
=0;i<6;i++)

712 
jbR•På
->
JB_MAC
[
i
]=
jbInfoPå
->JB_MAC[i];

713 if(
mysql_joö
[
j
]!=0)

714 
jbR•På
->
ack
 = 
mysql_joö
[
j
];

715 
jbR•På
 = (
JBJoöRe•⁄£Poöãr
)(()jbR•På + 
SIZE_OF_JB_JOIN_RESPONSE_PACKET
);

716 
jbInfoPå
 = (
JBJoöInfoP⁄ãr
)(()jbInfoPå + 
SIZE_OF_JB_JOIN_INFO_PACKET
);

718 
pkt2
->
Àngth
 = 
	`JB_JRSP_WHOLE_SIZE
(
jbReqPå
->
nJun˘i⁄Boxes
);

720  
pkt2
;

721 
	}
}

723 
	$TCP_Lök
(
RemŸefd
){

724 
SunP⁄ãr
 
pkt
;

725 
uöt8
 *
¨øy
;

727 
pkt
 = 
	`gíî©eSunPackë
(
TCP_PERIODIC_LINK
);

728 
¨øy
 = 
	`∑ckë2Aºay
(
pkt
);

732 
	}
}

734 
TCPPîiodicLökPoöãr
 
	$gíî©eTCPLök
(){

735 
TCPPîiodicLökPoöãr
 
±r
;

736 
i
;

738 
±r
 = (
TCPPîiodicLökPoöãr
)
	`l_mÆloc
(
SIZE_OF_TCP_PERIODIC_LINK_PACKET
);

739 
±r
->
AMRTCTime
[0] = 0x0c;

740 
±r
->
AMRTCTime
[1] = 0x03;

741 
±r
->
AMRTCTime
[2] = 0x07;

742 
±r
->
AMRTCTime
[3] = 0x0e;

743 
±r
->
AMRTCTime
[4] = 0x14;

744 
±r
->
AMRTCTime
[5] = 0x0f;

745 
±r
->
UpPîiod
 = 0x0014;

746 
±r
->
TCPLökPîiod
 = 0x003c;

748  
±r
;

749 
	}
}

751 
SunP⁄ãr
 
	$gíî©eAMSëtög
(){

753 
SunP⁄ãr
 
pkt
;

754 
AMSëtögPoöãr
 
±r
;

755 
i
;

757 
pkt
 = (
SunP⁄ãr
)
	`l_mÆloc
(
SIZE_OF_SUN_PACKET
);

758 
pkt
->
hódîCode
 = 
HEADER_CODE
;

759 
pkt
->
£quí˚Numbî
 = 0;

760 
pkt
->
comm™dTy≥
 = 
ARRAY_MANGER_SETTING
;

761 
pkt
->
nPaylﬂd
 = 
amcou¡
;

762 
pkt
->
∑ylﬂd
 = 
NULL
;

763 
pkt
->
èûCode
 = 
TAIL_CODE
;

765 
RTC
=0x01,
UDP
=0x02,
TCP
=0x04,
CH
=0x08,
RST
=0x10;

766 
ãmp•a˚
=0;

767 if((
am£t
&
RTC
)==RTC)

768 
ãmp•a˚
=7;

769 if((
am£t
&
TCP
)==TCP)

770 
ãmp•a˚
+=3;

771 
pkt
->
Àngth
 = 
	`AM_SETTING_WHOLE_SIZE
(
ãmp•a˚
);

773 
time_t
 
timï
;

774 
tm
 *
p
;

775 
	`time
(&
timï
);

776 
p
=
	`loˇ…ime
(&
timï
);

778 
±r
 = (
AMSëtögPoöãr
)
	`l_mÆloc
(
ãmp•a˚
);

779 
pkt
->
∑ylﬂd
 = (
uöt8
 *)
±r
;

780 if((
am£t
&
RTC
)==RTC){

781 
±r
->
SëtögD©e
[0] = 0x00;

782 
±r
->
SëtögD©e
[1] = 
p
->
tm_yór
-100;

783 
±r
->
SëtögD©e
[2] = 
p
->
tm_m⁄
+1;

784 
±r
->
SëtögD©e
[3] = 
p
->
tm_mday
;

785 
±r
->
SëtögD©e
[4] = 
p
->
tm_hour
;

786 
±r
->
SëtögD©e
[5] = 
p
->
tm_mö
;

787 
±r
->
SëtögD©e
[6] = 
p
->
tm_£c
;

788 
±r
 = (
AMSëtögPoöãr
)(()ptr + 7);

790 if((
am£t
&
TCP
)==TCP){

791 
±r
->
SëtögD©e
[0] = 0x02;

792 
±r
->
SëtögD©e
[1] = (
TCP≥riod
&0x0000FF00)>>8;

793 
±r
->
SëtögD©e
[2] = (
TCP≥riod
&0x000000FF);

794 
±r
 = (
AMSëtögPoöãr
)(()ptr + 3);

797  
pkt
;

798 
	}
}

802 
	$ã°mÆloc
(
size
)

804 *
buÂå
;

806 
buÂå
=
	`ã°my_mÆloc
(
size
);

807 
	`¥ötf
("ã°mÆloc%x\n",
buÂå
);

808  ()
buÂå
;

809 
	}
}

812 
	$ã°‰ì
(*
buÂå
)

814 
	`¥ötf
("ã°‰ì%x\n",
buÂå
);

816 
	`ã°my_‰ì
(
buÂå
);

817 
	`¥ötf
("testfreeÉnd\n");

818 
	}
}

	@packetProcessing.h

1 #i‚de‡
PACKET_PROCESSING_H


2 
	#PACKET_PROCESSING_H


	)

4 
	#l_mÆloc
(
size
Ë
	`ã°mÆloc
(size)

	)

5 
	#l_‰ì
(
±r
Ë
	`ã°‰ì
’å)

	)

6 #ifde‡
M3_TEST


7 
	#ªcv
(
a
,
b
,
c
,
d
Ë
	`lwù_ªcv
◊,b,c,d)

	)

11 
D©eTime
 
RTCRe•⁄£2D©eTime
(
RTCRe•⁄£P⁄ãr
 
pkt
);

12 
AMJoöReque°P⁄ãr
 
gíî©eAMJoö
();

13 
AMJoöRe•⁄£Poöãr
 
gíî©eAMJoöRe•⁄£
();

14 
PîiodicD©aPoöãr
 
gíî©ePîiodicD©a
(
size
);

15 
SunP⁄ãr
 
gíî©eSunPackë
(
uöt8
 
comm™dTy≥
);

16 
uöt8
 *
∑ckë2Aºay
(
SunP⁄ãr
 
pkt
);

17 
SunP⁄ãr
 
¨øy2Packë
(
uöt8
 * 
¨øy
);

18 
AM_Joö
(
RemŸefd
);

19 
D©eTime
 
RTC_Reque°
(
RemŸefd
);

20 
showSunPackëInfo
(
SunP⁄ãr
 
pkt
);

21 
ªÀa£Packë
(
SunP⁄ãr
 
pkt
);

23 
JB_Joö
(
RemŸefd
);

24 
JBJoöReque°P⁄ãr
 
gíî©eJBJoö
(
size
);

27 
TCP_Lök
(
RemŸefd
);

28 
TCPPîiodicLökPoöãr
 
gíî©eTCPLök
();

29 
SunP⁄ãr
 
gíî©eAMSëtög
();

31 
SunP⁄ãr
 
gíî©eSunPackëJB
(SunP⁄ã∏
pkt
);

	@packetPrototype.h

1 #i‚de‡
PACKET_PROTOTYPE_H


2 
	#PACKET_PROTOTYPE_H


	)

4 #i‚de‡
uöt32


5 
	#uöt32
 

	)

7 #i‚de‡
uöt16


8 
	#uöt16
 

	)

10 #i‚de‡
uöt8


11 
	#uöt8
 

	)

14 
	#HEADER_CODE
 0x58

	)

15 
	#TAIL_CODE
 0x62

	)

17 
	ePackëTy≥
 {
	mAM_JOIN_REQUEST
 = 0x03, 
	mAM_JOIN_RESPONSE
 = 0x04, 
	mRTC_UPDATE_REQUEST
 = 0x05, 
	mRTC_UPDATE_RESPONSE
 = 0x06, 
	mPERIODIC_DATA
 = 0x07, 
	mJB_JOIN_REQUEST
 = 0x08, 
	mJB_JOIN_RESPNOSE
 = 0x09,
	mTCP_PERIODIC_LINK
 = 0x0a, 
	mARRAY_MANGER_SETTING
 = 0x0b };

18 
	eJoöC⁄dôi⁄
 {
	mJOIN_ACK
 = 0x02, 
	mJOIN_NACK_MAC
 = 0x03, 
	mJOIN_NACK
 = 0x04};

19 
	eRTCC⁄dôi⁄
 {
	mCMD_RTC_UPDATE_REQUEST
 = 0x0C};

20 
	eTCPAºaySëtögC⁄dôi⁄
 {
	mUPDATE_RTC
 = 0x00, 
	mUPADTE_PERIOD
 = 0x01, 
	mTCP_LINK_PERIOD
 = 0x02, 
	mRESET_ARRAY_MANGER
 = 0x03, 
	mRESET_JUNCTION_BOX
 = 0x04};

22 
	eJun˘i⁄BoxSèã
 {
	mGOOD
 = 0x00, 
	mOFFLINE
 = 0x01 << 0, 
	mOVER_HEAT
 = 0x01 << 1, 
	mOVER_VOLTAGE
 = 0x01 << 2, 
	mOVER_CURRENT
 = 0x01 << 3};

24 #¥agm®
∑ck
(
push
)

25 #¥agm®
∑ck
(1)

27 
	sSunPackë
 {

28 
uöt8
 
	mhódîCode
;

29 
uöt16
 
	mÀngth
;

30 
uöt8
 
	m£quí˚Numbî
;

31 
uöt8
 
	mcomm™dTy≥
;

32 
uöt8
 
	mnPaylﬂd
;

33 
uöt8
 *
	m∑ylﬂd
;

34 
uöt8
 
	mèûCode
;

35 } 
	tSunPackë
;

36 
SunPackë
 *
	tSunP⁄ãr
;

37 
	#SIZE_OF_SUN_PACKET
 ((
SunPackë
))

	)

40 
	sAMJoöReque°Packë
 {

41 
uöt8
 
	mMAC
[6];

42 
uöt8
 
	mª£rved
[4];

43 
uöt16
 
	mp‹tNumbî
;

44 
uöt8
 
	mcomfúmedCode
[200];

45 } 
	tAMJoöReque°Packë
;

46 
AMJoöReque°Packë
 *
	tAMJoöReque°P⁄ãr
;

47 
	#SIZE_OF_AM_JOIN_REQUEST_PACKET
 ((
AMJoöReque°Packë
))

	)

51 
	sAMJoöRe•⁄£Packë
 {

52 
uöt8
 
	mack
;

53 } 
	tAMJoöRe•⁄£Packë
;

54 
AMJoöRe•⁄£Packë
 *
	tAMJoöRe•⁄£Poöãr
;

55 
	#SIZE_OF_AM_JOIN_RESPONSE_PACKET
 ((
AMJoöRe•⁄£Packë
))

	)

59 
	sRTCReque°Packë
 {

60 
uöt8
 
	mty≥
;

61 } 
	tRTCReque°Packë
;

62 
RTCReque°Packë
 *
	tRTCReque°P⁄ãr
;

63 
	#SIZE_OF_RTC_REQUEST_PACKET
 ((
RTCReque°Packë
))

	)

67 
	sRTCRe•⁄£Packë
 {

68 
uöt8
 
	myórs
;

69 
uöt8
 
	mm⁄ths
;

70 
uöt8
 
	md©e
;

71 
uöt8
 
	mhours
;

72 
uöt8
 
	mmöuãs
;

73 
uöt8
 
	m£c⁄d
;

74 } 
	tRTCRe•⁄£Packë
;

75 
RTCRe•⁄£Packë
 *
	tRTCRe•⁄£P⁄ãr
;

76 
	#SIZE_OF_RTC_RESPONSE_PACKET
 ((
RTCRe•⁄£Packë
))

	)

80 
	sTimeSèmp
 {

81 
uöt8
 
	md©e
;

82 
uöt8
 
	mhours
;

83 
uöt8
 
	mmöuãs
;

84 
uöt8
 
	m£c⁄ds
;

85 } 
	tTimeSèmp
;

86 
TimeSèmp
 *
	tTimeSèmpP⁄ãr
;

87 
	#SIZE_OF_TIME_STAMP
 ((
TimeSèmp
))

	)

89 
	sJun˘i⁄BoxPackë
 {

90 
uöt8
 
	mMAC
[6];

91 
uöt8
 
	mdiodeTem≥øtuª
;

92 
uöt16
 
	mvﬁège
;

93 
uöt16
 
	mcuºít
;

94 
uöt32
 
	mpowî
;

95 
uöt32
 
	m°©e
;

96 } 
	tJun˘i⁄BoxPackë
;

97 
Jun˘i⁄BoxPackë
 *
	tJun˘i⁄BoxPoöãr
;

98 
	#SIZE_OF_JUNCTIONBOX_PACKET
 ((
Jun˘i⁄BoxPackë
))

	)

100 
	sPîiodicD©aPackë
 {

101 
TimeSèmp
 
	m°amp
;

102 
uöt16
 
	mupd©ePîiod
;

103 
uöt8
 
	mnJun˘i⁄Boxes
;

104 
uöt8
 *
	m∑ylﬂd
;

105 } 
	tPîiodicD©aPackë
;

106 
PîiodicD©aPackë
 *
	tPîiodicD©aPoöãr
;

107 
	#SIZE_OF_PERIODIC_DATA_PACKET
 ((
PîiodicD©aPackë
))

	)

110 
	sJBJoöReque°Packë
 {

111 
uöt8
 
	mAM_MAC
[6];

112 
uöt8
 
	mnJun˘i⁄Boxes
;

113 
uöt8
 *
	m∑ylﬂd
;

114 } 
	tJBJoöReque°Packë
;

115 
JBJoöReque°Packë
 *
	tJBJoöReque°P⁄ãr
;

116 
	#SIZE_OF_JB_JOIN_REQUEST_PACKET
 ((
JBJoöReque°Packë
))

	)

119 
	sJBJoöInfoPackë
 {

120 
uöt8
 
	mJB_MAC
[6];

121 
uöt8
 
	mSîülNumbî
[24];

122 
uöt8
 
	mFúmw¨eVîsi⁄
[24];

123 
uöt8
 
	mH¨dw¨eVîsi⁄
[24];

124 
uöt8
 
	mDevi˚S≥cifiˇti⁄
[24];

125 
uöt8
 
	mM™uÁ˘uªD©a
[8];

126 } 
	tJBJoöInfoPackë
;

127 
JBJoöInfoPackë
 *
	tJBJoöInfoP⁄ãr
;

128 
	#SIZE_OF_JB_JOIN_INFO_PACKET
 ((
JBJoöInfoPackë
))

	)

131 
	sJBJoöRe•⁄£Packë
 {

132 
uöt8
 
	mack
;

133 
uöt8
 
	mJB_MAC
[6];

134 } 
	tJBJoöRe•⁄£Packë
;

135 
JBJoöRe•⁄£Packë
 *
	tJBJoöRe•⁄£Poöãr
;

136 
	#SIZE_OF_JB_JOIN_RESPONSE_PACKET
 ((
JBJoöRe•⁄£Packë
))

	)

139 
	sTCPPîiodicLökPackë
 {

140 
uöt8
 
	mAMRTCTime
[6];

141 
uöt16
 
	mUpPîiod
;

142 
uöt16
 
	mTCPLökPîiod
;

143 } 
	tTCPPîiodicLökPackë
;

144 
TCPPîiodicLökPackë
 *
	tTCPPîiodicLökPoöãr
;

145 
	#SIZE_OF_TCP_PERIODIC_LINK_PACKET
 ((
TCPPîiodicLökPackë
))

	)

148 
	sAMSëtögPackë
 {

149 
uöt8
 
	mSëtögD©e
[255];

150 } 
	tAMSëtögPackë
;

151 
AMSëtögPackë
 *
	tAMSëtögPoöãr
;

152 
	#SIZE_OF_AM_SETTING_PACKET
 ((
AMSëtögPackë
))

	)

154 #¥agm®
∑ck
(
p›
)

156 
	sD©eTime
 {

157 
uöt32
 
	myórs
;

158 
uöt32
 
	mm⁄ths
;

159 
uöt32
 
	md©e
;

160 
uöt32
 
	mhours
;

161 
uöt32
 
	mmöuãs
;

162 } 
	tD©eTime
;

164 
	#SIZE_OF_SUN_PACKET_LESS
 (
SIZE_OF_SUN_PACKET
 - 8)

	)

165 
	#SIZE_OF_PERIODIC_DATA_PACKET_LESS
 ((
PîiodicD©aPackë
Ë- 4)

	)

166 
	#AM_JOIN_WHOLE_SIZE
 (
SIZE_OF_SUN_PACKET_LESS
 + 
SIZE_OF_AM_JOIN_REQUEST_PACKET
)

	)

167 
	#AM_JRSP_WHOLE_SIZE
 (
SIZE_OF_SUN_PACKET_LESS
 + 
SIZE_OF_AM_JOIN_RESPONSE_PACKET
)

	)

168 
	#RTC_REQ_WHOLE_SIZE
 (
SIZE_OF_SUN_PACKET_LESS
 + 
SIZE_OF_RTC_REQUEST_PACKET
)

	)

169 
	#RTC_RSP_WHOLE_SIZE
 (
SIZE_OF_SUN_PACKET_LESS
 + 
SIZE_OF_RTC_RESPONSE_PACKET
)

	)

170 
	#PRD_DTA_WHOLE_SIZE
(
n
Ë(
SIZE_OF_SUN_PACKET_LESS
 + 
SIZE_OF_PERIODIC_DATA_PACKET_LESS
 +Ç * 
SIZE_OF_JUNCTIONBOX_PACKET
)

	)

171 
	#SIZE_BEFORE_PAYLOAD
 6

	)

173 
	#∑yLﬂdSize
(
pkt
Ë’kt->
Àngth
 - 
SIZE_OF_SUN_PACKET_LESS
)

	)

176 
	#JB_JOIN_WHOLE_SIZE
(
n
Ë(
SIZE_OF_SUN_PACKET_LESS
 + 
SIZE_OF_JB_JOIN_REQUEST_PACKET
 +Ç * 
SIZE_OF_JB_JOIN_INFO_PACKET
)

	)

177 
	#JB_JOIN_REQUEST_PACKET_LESS
 ((
JBJoöReque°Packë
Ë- 4)

	)

178 
	#JB_JRSP_WHOLE_SIZE
(
n
Ë(
SIZE_OF_SUN_PACKET_LESS
 +Ç * 
SIZE_OF_JB_JOIN_RESPONSE_PACKET
)

	)

180 
	#TCP_LINK_WHOLE_SIZE
 (
SIZE_OF_SUN_PACKET_LESS
 + 
SIZE_OF_TCP_PERIODIC_LINK_PACKET
)

	)

181 
	#AM_SETTING_WHOLE_SIZE
(
n
Ë(
SIZE_OF_SUN_PACKET_LESS
 +Ç)

	)

	@server.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<°rög.h
>

7 
	~<î∫o.h
>

8 
	~<sys/ty≥s.h
>

9 
	~<√töë/ö.h
>

10 
	~<sys/sockë.h
>

11 
	~<sys/waô.h
>

12 
	~<¨∑/öë.h
>

14 
	#M3_DEBUG


	)

16 
	~"∑ckëPrŸŸy≥.h
"

17 
	~"my°dlib.h
"

18 
	~"∑ckëPro˚ssög.h
"

19 
	~"mysql_sum.h
"

21 
	~<±hªad.h
>

23 
	~<£m≠h‹e.h
>

25 
	~<sys/time.h
>

26 
	~<time.h
>

28 
£m_t
 
	g£m
;

29 
	gfc
=1,
	g·
=1;

32 
	$time_com∑ª
(
timef
){

33 
time_t
 
timï
;

34 
tm
 *
p
;

36 
	`time
(&
timï
);

37 
p
=
	`loˇ…ime
(&
timï
);

39 if(
p
->
tm_£c
<5 && 
timef
>55)

40 if(
	`abs
((
p
->
tm_£c
)+60-
timef
)>4)

41  
p
->
tm_£c
;

43  
timef
;

44 if(
	`abs
((
p
->
tm_£c
)-
timef
)>4)

45  
p
->
tm_£c
;

47  
timef
;

49 
	}
}

51 
	$udp_thªad
(){

52 
RxBUF
[4096];

53 
RxSockë
;

54 
sockaddr_ö
 
£rvî_addªss
, 
˛õ¡_addªss
;

55 
addæí
 = (
£rvî_addªss
);

56 
c
=0,
˙
,
nRecvBuf
=65536;

58 
time
=0;

59 
timîeg
=0;

61 
timevÆ
 
tv_out
;

62 
tv_out
.
tv_£c
 = 0;

63 
tv_out
.
tv_u£c
 = 100;

65 
SunP⁄ãr
 
pkt_ö
;

67 
RxSockë
 = 
	`sockë
(
AF_INET
, 
SOCK_DGRAM
, 0);

69 
	`bzîo
(&
£rvî_addªss
, (server_address));

70 
£rvî_addªss
.
sö_Ámûy
 = 
AF_INET
;

71 
£rvî_addªss
.
sö_p‹t
 = 
	`ht⁄s
(5000);

73 
£rvî_addªss
.
sö_addr
.
s_addr
 = 
INADDR_ANY
;

75 
	`£tsock›t
(
RxSockë
,
SOL_SOCKET
,
SO_RCVBUF
,(c⁄° *)&
nRecvBuf
,());

76 
	`£tsock›t
(
RxSockë
, 
SOL_SOCKET
, 
SO_RCVTIMEO
, &
tv_out
, (tv_out));

77 
	`böd
(
RxSockë
, (
sockaddr
*)&
£rvî_addªss
, (server_address));

81 
fc
=0;
	`¥ötf
("abc\n");

82 
	`bzîo
(&
RxBUF
, (RxBUF));

83 
˙
=
	`ªcv‰om
(
RxSockë
, 
RxBUF
, (RxBUFË, 0, (
sockaddr
 *Ë&
˛õ¡_addªss
, &
addæí
);

84 if(
˙
 != 0 && cn !=-1){

85 
pkt_ö
 = 
	`¨øy2Packë
(
RxBUF
);

86 i‡(
pkt_ö
 !
NULL
) {

87 
	`showSunPackëInfo
(
pkt_ö
);

88 i‡(
pkt_ö
->
comm™dTy≥
 =
PERIODIC_DATA
) {

89 !
·
);

90 
	`mysql_PîiodicD©a
(
pkt_ö
,0);

92 
	`ªÀa£Packë
(
pkt_ö
);

94 
	`¥ötf
("I'm UDP PERIODIC_DATA\n");

95 
	`¥ötf
("Server is waiting......\n");

98 
timîeg
=
	`time_com∑ª
(
time
);

99 if(
timîeg
 !
time
){

100 
	`¥ötf
("%d %d\n",
timîeg
,
time
);

101 
	`¥ötf
("I'm Com∑ª!! %d\n",
fc
);

102 
time
 = 
timîeg
;

103 !
·
);

104 
	`mysql_com∑ª
();

105 
	`¥ötf
("UServer is waiting......\n");

108 
fc
=1;
	`¥ötf
("abc2\n");

109 
	`£m_waô
(&
£m
);

111 
	`˛o£
(
RxSockë
);

112 
	}
}

114 
	$maö
()

116 
£rvîFd
, 
˛õ¡Fd
;

117 
£rvîLí
, 
˛õ¡Lí
;

118 
sockaddr_ö
 
£rvîAddr
, 
˛õ¡Addr
;

119 
°r
[150000], *
¨øy
;

120 
SunP⁄ãr
 
pkt_out
, 
pkt_ö
;

121 
i
, 
Àn
;

126 
timevÆ
 
tv_out
;

127 
tv_out
.
tv_£c
 = 1;

128 
tv_out
.
tv_u£c
 = 0;

130 
	`mysql_c⁄√˘
();

132 
±hªad_t
 
p1
;

133 
	`£m_öô
(&
£m
,0,0);

134 
	`±hªad_¸óã
(&
p1
,
NULL
,(*)
udp_thªad
,NULL);

136 
£rvîFd
 = 
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

137 i‡(
£rvîFd
 == -1) {

138 
	`¥ötf
("Socket Error");

139 
	`sy°em
("pause");

140 
	`exô
(1);

142 
£rvîAddr
.
sö_Ámûy
 = 
AF_INET
;

143 
£rvîAddr
.
sö_addr
.
s_addr
 = 
INADDR_ANY
;

144 
£rvîAddr
.
sö_p‹t
 = 
	`ht⁄s
(9966);

145 
£rvîLí
 = (
£rvîAddr
);

147 
	`£tsock›t
(
£rvîFd
, 
SOL_SOCKET
, 
SO_RCVTIMEO
, &
tv_out
, (tv_out));

149 i‡(
	`böd
(
£rvîFd
, (
sockaddr
 *)&
£rvîAddr
, 
£rvîLí
) < 0) {

150 
	`¥ötf
("Bind Error");

151 
	`sy°em
("pause");

152 
	`exô
(1);

155 i‡(
	`li°í
(
£rvîFd
, 5) < 0) {

156 
	`¥ötf
("Listen Error");

157 
	`sy°em
("pause");

158 
	`exô
(1);

162 * 
ã°±r
;

163 * 
ã°±r1
;

164 
ã°±r
=
	`l_mÆloc
(100);

165 
	`¥ötf
("ã°±r=%X",
ã°±r
);

166 
	`l_‰ì
(
ã°±r
);

167 
ã°±r1
=
	`l_mÆloc
(50);

168 
	`¥ötf
("ã°±r1=%X",
ã°±r1
);

173 
˛õ¡Lí
 = (
˛õ¡Addr
);

178 
	`¥ötf
("MServer is waiting......\n");

181 if(
fc
){

182 
	`¥ötf
("fc=%d\n",
fc
);

184 
˛õ¡Fd
 = 
	`ac˚±
(
£rvîFd
, (
sockaddr
 *)&
˛õ¡Addr
, &
˛õ¡Lí
);

185 
	`¥ötf
("˛õ¡Fd=%d\n",
˛õ¡Fd
);

186 i‡(
˛õ¡Fd
 != 0 && clientFd != -1){

187 !
fc
);

191 
	`¥ötf
("post\n");

192 
	`£m_po°
(&
£m
);

193 
	`¥ötf
("afterpost\n");

197 
·
=0;

198 
	`¥ötf
("gë from IP %†p‹à%d\n", 
	`öë_¡ﬂ
(
˛õ¡Addr
.
sö_addr
), 
	`¡ohs
(˛õ¡Addr.
sö_p‹t
));

200 
Àn
 = 
	`ªcv
(
˛õ¡Fd
, 
°r
, 4096, 0);

201 i‡(
Àn
 == 0 ||Üen == -1)

203 
pkt_ö
 = 
	`¨øy2Packë
(
°r
);

204 i‡(
pkt_ö
 !
NULL
) {

205 
	`showSunPackëInfo
(
pkt_ö
);

206 i‡(
pkt_ö
->
comm™dTy≥
 =
AM_JOIN_REQUEST
) {

207 
	`mysql_AºayM™agî_Joö
(
pkt_ö
,
	`öë_¡ﬂ
(
˛õ¡Addr
.
sö_addr
));

208 
pkt_out
 = 
	`gíî©eSunPackë
(
AM_JOIN_RESPONSE
);

209 
¨øy
 = 
	`∑ckë2Aºay
(
pkt_out
);

210 
	`£nd
(
˛õ¡Fd
, 
¨øy
, 
pkt_out
->
Àngth
+4, 0);

211 
	`l_‰ì
(
¨øy
);

212 
	`ªÀa£Packë
(
pkt_out
);

214 i‡(
pkt_ö
->
comm™dTy≥
 =
RTC_UPDATE_REQUEST
) {

215 
pkt_out
 = 
	`gíî©eSunPackë
(
RTC_UPDATE_RESPONSE
);

216 
	`RTCtime
(
pkt_out
);

217 
¨øy
 = 
	`∑ckë2Aºay
(
pkt_out
);

218 
	`£nd
(
˛õ¡Fd
, 
¨øy
, 
pkt_out
->
Àngth
+4, 0);

219 
	`l_‰ì
(
¨øy
);

220 
	`ªÀa£Packë
(
pkt_out
);

222 i‡(
pkt_ö
->
comm™dTy≥
 =
PERIODIC_DATA
) {

223 
	`mysql_PîiodicD©a
(
pkt_ö
,1);

225 i‡(
pkt_ö
->
comm™dTy≥
 =
JB_JOIN_REQUEST
) {

226 
	`mysql_Jun˘i⁄Box_Joö
(
pkt_ö
);

228 
pkt_out
 = 
	`gíî©eSunPackëJB
(
pkt_ö
);

230 
¨øy
 = 
	`∑ckë2Aºay
(
pkt_out
);

231 
	`¥ötf
("packet2ArrayÉnd \n");

232 
	`£nd
(
˛õ¡Fd
, 
¨øy
, 
pkt_out
->
Àngth
+4, 0);

233 
	`l_‰ì
(
¨øy
);

234 
	`ªÀa£Packë
(
pkt_out
);

236 i‡(
pkt_ö
->
comm™dTy≥
 =
TCP_PERIODIC_LINK
){

237 
	`mysql_TCPLök
(
pkt_ö
);

239 
pkt_out
=
	`gíî©eAMSëtög
();

241 
¨øy
 = 
	`∑ckë2Aºay
(
pkt_out
);

242 
	`£nd
(
˛õ¡Fd
, 
¨øy
, 
pkt_out
->
Àngth
+4, 0);

243 
	`l_‰ì
(
¨øy
);

244 
	`ªÀa£Packë
(
pkt_out
);

246 
	`ªÀa£Packë
(
pkt_ö
);

249 
·
=1;

250 
	`˛o£
(
˛õ¡Fd
);

254 
	`sy°em
("pause");

256 
	}
}

	@/usr/include/arpa/inet.h

19 #i‚de‡
_ARPA_INET_H


20 
	#_ARPA_INET_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<√töë/ö.h
>

26 #i‚de‡
__sockÀn_t_deföed


27 
__sockÀn_t
 
	tsockÀn_t
;

28 
	#__sockÀn_t_deföed


	)

31 
__BEGIN_DECLS


35 
ö_addr_t
 
	$öë_addr
 (
__c⁄°
 *
__˝
Ë
__THROW
;

38 
ö_addr_t
 
	$öë_ aof
 (
ö_addr
 
__ö
Ë
__THROW
;

42 
ö_addr
 
	$öë_makóddr
 (
ö_addr_t
 
__√t
, in_addr_à
__ho°
)

43 
__THROW
;

46 
ö_addr_t
 
	$öë_√tof
 (
ö_addr
 
__ö
Ë
__THROW
;

50 
ö_addr_t
 
	$öë_√tw‹k
 (
__c⁄°
 *
__˝
Ë
__THROW
;

54 *
	$öë_¡ﬂ
 (
ö_addr
 
__ö
Ë
__THROW
;

59 
	$öë_±⁄
 (
__af
, 
__c⁄°
 *
__ª°ri˘
 
__˝
,

60 *
__ª°ri˘
 
__buf
Ë
__THROW
;

65 
__c⁄°
 *
	$öë_¡›
 (
__af
, 
__c⁄°
 *
__ª°ri˘
 
__˝
,

66 *
__ª°ri˘
 
__buf
, 
sockÀn_t
 
__Àn
)

67 
__THROW
;

71 #ifde‡
__USE_MISC


74 
	$öë_©⁄
 (
__c⁄°
 *
__˝
, 
ö_addr
 *
__öp
Ë
__THROW
;

78 *
	$öë_√è
 (
ö_addr_t
 
__√t
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

83 *
	$öë_√t_¡›
 (
__af
, 
__c⁄°
 *
__˝
, 
__bôs
,

84 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

89 
	$öë_√t_±⁄
 (
__af
, 
__c⁄°
 *
__˝
,

90 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

95 
	$öë_nßp_addr
 (
__c⁄°
 *
__˝
,

96 *
__buf
, 
__Àn
Ë
__THROW
;

100 *
	$öë_nßp_¡ﬂ
 (
__Àn
, 
__c⁄°
 *
__˝
,

101 *
__buf
Ë
__THROW
;

104 
__END_DECLS


	@/usr/include/errno.h

23 #i‚def 
_ERRNO_H


27 #i‚def 
__√ed_Em©h


28 
	#_ERRNO_H
 1

	)

29 
	~<„©uªs.h
>

32 
	g__BEGIN_DECLS


36 
	~<bôs/î∫o.h
>

37 #unde‡
__√ed_Em©h


39 #ifdef 
_ERRNO_H


46 #i‚def 
î∫o


47 
î∫o
;

50 #ifde‡
__USE_GNU


55 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

59 
	g__END_DECLS


67 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


68 #i‚de‡
__îr‹_t_deföed


69 
	tîr‹_t
;

70 
	#__îr‹_t_deföed
 1

	)

72 #unde‡
__√ed_îr‹_t


	@/usr/include/mysql/mysql.h

26 #i‚de‡
_mysql_h


27 
	#_mysql_h


	)

29 #ifde‡
_AIX


30 
	~<°™d¨ds.h
>

33 #ifde‡
__CYGWIN__


34 #unde‡
WIN


35 #unde‡
_WIN


36 #unde‡
_WIN32


37 #unde‡
_WIN64


38 #unde‡
__WIN__


41 #ifdef 
__˝lu•lus


45 #i‚de‡
_globÆ_h


46 #i‚de‡
MYSQL_ABI_CHECK


47 
	~<sys/ty≥s.h
>

49 #ifde‡
__LCC__


50 
	~<wösock2.h
>

52 
	tmy_boﬁ
;

53 #i‡(
deföed
(
_WIN32
Ë|| deföed(
_WIN64
)Ë&& !deföed(
__WIN__
)

54 
	#__WIN__


	)

56 #i‡!
deföed
(
__WIN__
)

57 
	#STDCALL


	)

59 
	#STDCALL
 
__°dˇŒ


	)

62 #i‚de‡
my_sockë_deföed


63 #ifde‡
__WIN__


64 
	#my_sockë
 
SOCKET


	)

66 
	tmy_sockë
;

71 
	~"mysql_vîsi⁄.h
"

72 
	~"mysql_com.h
"

73 
	~"mysql_time.h
"

75 
	~"my_li°.h
"

77 
mysql_p‹t
;

78 *
mysql_unix_p‹t
;

80 
	#CLIENT_NET_READ_TIMEOUT
 365*24*3600

	)

81 
	#CLIENT_NET_WRITE_TIMEOUT
 365*24*3600

	)

83 
	#IS_PRI_KEY
(
n
Ë(“Ë& 
PRI_KEY_FLAG
)

	)

84 
	#IS_NOT_NULL
(
n
Ë(“Ë& 
NOT_NULL_FLAG
)

	)

85 
	#IS_BLOB
(
n
Ë(“Ë& 
BLOB_FLAG
)

	)

90 
	#IS_NUM
(
t
Ë((—Ë<
MYSQL_TYPE_INT24
 && (tË!
MYSQL_TYPE_TIMESTAMP
Ë|| (tË=
MYSQL_TYPE_YEAR
 || (tË=
MYSQL_TYPE_NEWDECIMAL
)

	)

91 
	#IS_LONGDATA
(
t
Ë(—Ë>
MYSQL_TYPE_TINY_BLOB
 && (tË<
MYSQL_TYPE_STRING
)

	)

94 
	s°_mysql_fõld
 {

95 *
	g«me
;

96 *
	g‹g_«me
;

97 *
	gèbÀ
;

98 *
	g‹g_èbÀ
;

99 *
	gdb
;

100 *
	gˇèlog
;

101 *
	gdef
;

102 
	gÀngth
;

103 
	gmax_Àngth
;

104 
	g«me_Àngth
;

105 
	g‹g_«me_Àngth
;

106 
	gèbÀ_Àngth
;

107 
	g‹g_èbÀ_Àngth
;

108 
	gdb_Àngth
;

109 
	gˇèlog_Àngth
;

110 
	gdef_Àngth
;

111 
	gÊags
;

112 
	gdecimÆs
;

113 
	gch¨£är
;

114 
íum_fõld_ty≥s
 
	gty≥
;

115 *
	gexãnsi⁄
;

116 } 
	tMYSQL_FIELD
;

118 **
	tMYSQL_ROW
;

119 
	tMYSQL_FIELD_OFFSET
;

121 #i‚de‡
_globÆ_h


122 #i‡
deföed
(
NO_CLIENT_LONG_LONG
)

123 
	tmy_ul⁄gl⁄g
;

124 #ñi‡
deföed
 (
__WIN__
)

125 
	t__öt64
 
	tmy_ul⁄gl⁄g
;

127 
	tmy_ul⁄gl⁄g
;

131 
	~"ty≥lib.h
"

133 
	#MYSQL_COUNT_ERROR
 (~(
my_ul⁄gl⁄g
Ë0)

	)

136 
	#ER_WARN_DATA_TRUNCATED
 
WARN_DATA_TRUNCATED


	)

138 
	s°_mysql_rows
 {

139 
°_mysql_rows
 *
	g√xt
;

140 
MYSQL_ROW
 
	gd©a
;

141 
	gÀngth
;

142 } 
	tMYSQL_ROWS
;

144 
MYSQL_ROWS
 *
	tMYSQL_ROW_OFFSET
;

146 
	~"my_Æloc.h
"

148 
embedded_quîy_ªsu…
 
	tEMBEDDED_QUERY_RESULT
;

149 
	s°_mysql_d©a
 {

150 
MYSQL_ROWS
 *
	gd©a
;

151 
embedded_quîy_ªsu…
 *
	gembedded_öfo
;

152 
MEM_ROOT
 
	gÆloc
;

153 
my_ul⁄gl⁄g
 
	grows
;

154 
	gfõlds
;

156 *
	gexãnsi⁄
;

157 } 
	tMYSQL_DATA
;

159 
	emysql_›ti⁄


161 
	gMYSQL_OPT_CONNECT_TIMEOUT
, 
	gMYSQL_OPT_COMPRESS
, 
	gMYSQL_OPT_NAMED_PIPE
,

162 
	gMYSQL_INIT_COMMAND
, 
	gMYSQL_READ_DEFAULT_FILE
, 
	gMYSQL_READ_DEFAULT_GROUP
,

163 
	gMYSQL_SET_CHARSET_DIR
, 
	gMYSQL_SET_CHARSET_NAME
, 
	gMYSQL_OPT_LOCAL_INFILE
,

164 
	gMYSQL_OPT_PROTOCOL
, 
	gMYSQL_SHARED_MEMORY_BASE_NAME
, 
	gMYSQL_OPT_READ_TIMEOUT
,

165 
	gMYSQL_OPT_WRITE_TIMEOUT
, 
	gMYSQL_OPT_USE_RESULT
,

166 
	gMYSQL_OPT_USE_REMOTE_CONNECTION
, 
	gMYSQL_OPT_USE_EMBEDDED_CONNECTION
,

167 
	gMYSQL_OPT_GUESS_CONNECTION
, 
	gMYSQL_SET_CLIENT_IP
, 
	gMYSQL_SECURE_AUTH
,

168 
	gMYSQL_REPORT_DATA_TRUNCATION
, 
	gMYSQL_OPT_RECONNECT
,

169 
	gMYSQL_OPT_SSL_VERIFY_SERVER_CERT
, 
	gMYSQL_PLUGIN_DIR
, 
	gMYSQL_DEFAULT_AUTH
,

170 
	gMYSQL_ENABLE_CLEARTEXT_PLUGIN


177 
	g°_mysql_›ti⁄s_exã¡i⁄
;

179 
	s°_mysql_›ti⁄s
 {

180 
	gc⁄√˘_timeout
, 
	gªad_timeout
, 
	gwrôe_timeout
;

181 
	gp‹t
, 
	g¥Ÿocﬁ
;

182 
	g˛õ¡_Êag
;

183 *
	gho°
,*
	gu£r
,*
	g∑ssw‹d
,*
	gunix_sockë
,*
	gdb
;

184 
°_dy«mic_¨øy
 *
	göô_comm™ds
;

185 *
	gmy_˙f_fûe
,*
	gmy_˙f_group
, *
	gch¨£t_dú
, *
	gch¨£t_«me
;

186 *
	gs¶_key
;

187 *
	gs¶_˚π
;

188 *
	gs¶_ˇ
;

189 *
	gs¶_ˇ∑th
;

190 *
	gs¶_cùhî
;

191 *
	gsh¨ed_mem‹y_ba£_«me
;

192 
	gmax_Ælowed_∑ckë
;

193 
my_boﬁ
 
	gu£_s¶
;

194 
my_boﬁ
 
	gcom¥ess
,
	g«med_pùe
;

195 
my_boﬁ
 
	gunu£d1
;

196 
my_boﬁ
 
	gunu£d2
;

197 
my_boﬁ
 
	gunu£d3
;

198 
my_boﬁ
 
	gunu£d4
;

199 
mysql_›ti⁄
 
	gmëhods_to_u£
;

200 *
	g˛õ¡_ù
;

202 
my_boﬁ
 
	g£cuª_auth
;

204 
my_boﬁ
 
	gªp‹t_d©a_åunˇti⁄
;

207 (*
	gloˇl_öfûe_öô
)(**, const *, *);

208 (*
	gloˇl_öfûe_ªad
)(*, *, );

209 (*
	gloˇl_öfûe_íd
)(*);

210 (*
	gloˇl_öfûe_îr‹
)(*, *, );

211 *
	gloˇl_öfûe_u£rd©a
;

212 
°_mysql_›ti⁄s_exã¡i⁄
 *
	gexãnsi⁄
;

215 
	emysql_°©us


217 
	gMYSQL_STATUS_READY
, 
	gMYSQL_STATUS_GET_RESULT
, 
	gMYSQL_STATUS_USE_RESULT
,

218 
	gMYSQL_STATUS_STATEMENT_GET_RESULT


221 
	emysql_¥Ÿocﬁ_ty≥


223 
	gMYSQL_PROTOCOL_DEFAULT
, 
	gMYSQL_PROTOCOL_TCP
, 
	gMYSQL_PROTOCOL_SOCKET
,

224 
	gMYSQL_PROTOCOL_PIPE
, 
	gMYSQL_PROTOCOL_MEMORY


227 
	sch¨a˘î_£t


229 
	gnumbî
;

230 
	g°©e
;

231 c⁄° *
	gc¢ame
;

232 c⁄° *
	g«me
;

233 c⁄° *
	gcommít
;

234 c⁄° *
	gdú
;

235 
	gmbmöÀn
;

236 
	gmbmaxÀn
;

237 } 
	tMY_CHARSET_INFO
;

239 
	g°_mysql_mëhods
;

240 
	g°_mysql_°mt
;

242 
	s°_mysql


244 
NET
 
	g√t
;

245 *
	gc⁄√˘‹_fd
;

246 *
	gho°
,*
	gu£r
,*
	g∑sswd
,*
	gunix_sockë
,*
	g£rvî_vîsi⁄
,*
	gho°_öfo
;

247 *
	göfo
, *
	gdb
;

248 
ch¨£t_öfo_°
 *
	gch¨£t
;

249 
MYSQL_FIELD
 *
	gfõlds
;

250 
MEM_ROOT
 
	gfõld_Æloc
;

251 
my_ul⁄gl⁄g
 
	gaf„˘ed_rows
;

252 
my_ul⁄gl⁄g
 
	gö£π_id
;

253 
my_ul⁄gl⁄g
 
	gexåa_öfo
;

254 
	gthªad_id
;

255 
	g∑ckë_Àngth
;

256 
	gp‹t
;

257 
	g˛õ¡_Êag
,
	g£rvî_ˇ∑bûôõs
;

258 
	g¥Ÿocﬁ_vîsi⁄
;

259 
	gfõld_cou¡
;

260 
	g£rvî_°©us
;

261 
	g£rvî_œnguage
;

262 
	gw¨nög_cou¡
;

263 
°_mysql_›ti⁄s
 
	g›ti⁄s
;

264 
mysql_°©us
 
	g°©us
;

265 
my_boﬁ
 
	g‰ì_me
;

266 
my_boﬁ
 
	gªc⁄√˘
;

269 
	gs¸ambÀ
[
SCRAMBLE_LENGTH
+1];

270 
my_boﬁ
 
	gunu£d1
;

271 *
	gunu£d2
, *
	gunu£d3
, *
	gunu£d4
, *
	gunu£d5
;

273 
LIST
 *
	g°mts
;

274 c⁄° 
°_mysql_mëhods
 *
	gmëhods
;

275 *
	gthd
;

280 
my_boﬁ
 *
	gunbuf„ªd_„tch_ow√r
;

282 *
	göfo_buf„r
;

283 *
	gexãnsi⁄
;

284 } 
	tMYSQL
;

287 
	s°_mysql_ªs
 {

288 
my_ul⁄gl⁄g
 
	grow_cou¡
;

289 
MYSQL_FIELD
 *
	gfõlds
;

290 
MYSQL_DATA
 *
	gd©a
;

291 
MYSQL_ROWS
 *
	gd©a_curs‹
;

292 *
	gÀngths
;

293 
MYSQL
 *
	gh™dÀ
;

294 c⁄° 
°_mysql_mëhods
 *
	gmëhods
;

295 
MYSQL_ROW
 
	grow
;

296 
MYSQL_ROW
 
	gcuºít_row
;

297 
MEM_ROOT
 
	gfõld_Æloc
;

298 
	gfõld_cou¡
, 
	gcuºít_fõld
;

299 
my_boﬁ
 
	geof
;

301 
my_boﬁ
 
	gunbuf„ªd_„tch_ˇn˚Œed
;

302 *
	gexãnsi⁄
;

303 } 
	tMYSQL_RES
;

306 #i‡!
deföed
(
MYSQL_SERVER
Ë&& !deföed(
MYSQL_CLIENT
)

307 
	#MYSQL_CLIENT


	)

311 
	s°_mysql_∑ømëîs


313 *
	gp_max_Ælowed_∑ckë
;

314 *
	gp_√t_buf„r_Àngth
;

315 *
	gexãnsi⁄
;

316 } 
	tMYSQL_PARAMETERS
;

318 #i‡!
deföed
(
MYSQL_SERVER
Ë&& !deföed(
EMBEDDED_LIBRARY
)

319 
	#max_Ælowed_∑ckë
 (*
	`mysql_gë_∑ømëîs
()->
p_max_Ælowed_∑ckë
)

	)

320 
	#√t_buf„r_Àngth
 (*
	`mysql_gë_∑ømëîs
()->
p_√t_buf„r_Àngth
)

	)

328 
STDCALL
 
mysql_£rvî_öô
(
¨gc
, **
¨gv
, **
groups
);

329 
STDCALL
 
mysql_£rvî_íd
();

340 
	#mysql_libøry_öô
 
mysql_£rvî_öô


	)

341 
	#mysql_libøry_íd
 
mysql_£rvî_íd


	)

343 
MYSQL_PARAMETERS
 *
STDCALL
 
mysql_gë_∑ømëîs
();

351 
my_boﬁ
 
STDCALL
 
mysql_thªad_öô
();

352 
STDCALL
 
mysql_thªad_íd
();

359 
my_ul⁄gl⁄g
 
STDCALL
 
mysql_num_rows
(
MYSQL_RES
 *
ªs
);

360 
STDCALL
 
mysql_num_fõlds
(
MYSQL_RES
 *
ªs
);

361 
my_boﬁ
 
STDCALL
 
mysql_eof
(
MYSQL_RES
 *
ªs
);

362 
MYSQL_FIELD
 *
STDCALL
 
mysql_„tch_fõld_dúe˘
(
MYSQL_RES
 *
ªs
,

363 
fõldƒ
);

364 
MYSQL_FIELD
 * 
STDCALL
 
mysql_„tch_fõlds
(
MYSQL_RES
 *
ªs
);

365 
MYSQL_ROW_OFFSET
 
STDCALL
 
mysql_row_ãŒ
(
MYSQL_RES
 *
ªs
);

366 
MYSQL_FIELD_OFFSET
 
STDCALL
 
mysql_fõld_ãŒ
(
MYSQL_RES
 *
ªs
);

368 
STDCALL
 
mysql_fõld_cou¡
(
MYSQL
 *
mysql
);

369 
my_ul⁄gl⁄g
 
STDCALL
 
mysql_af„˘ed_rows
(
MYSQL
 *
mysql
);

370 
my_ul⁄gl⁄g
 
STDCALL
 
mysql_ö£π_id
(
MYSQL
 *
mysql
);

371 
STDCALL
 
mysql_î∫o
(
MYSQL
 *
mysql
);

372 c⁄° * 
STDCALL
 
mysql_îr‹
(
MYSQL
 *
mysql
);

373 c⁄° *
STDCALL
 
mysql_sql°©e
(
MYSQL
 *
mysql
);

374 
STDCALL
 
mysql_w¨nög_cou¡
(
MYSQL
 *
mysql
);

375 c⁄° * 
STDCALL
 
mysql_öfo
(
MYSQL
 *
mysql
);

376 
STDCALL
 
mysql_thªad_id
(
MYSQL
 *
mysql
);

377 c⁄° * 
STDCALL
 
mysql_ch¨a˘î_£t_«me
(
MYSQL
 *
mysql
);

378 
STDCALL
 
mysql_£t_ch¨a˘î_£t
(
MYSQL
 *
mysql
, c⁄° *
c¢ame
);

380 
MYSQL
 * 
STDCALL
 
mysql_öô
(MYSQL *
mysql
);

381 
my_boﬁ
 
STDCALL
 
mysql_s¶_£t
(
MYSQL
 *
mysql
, c⁄° *
key
,

382 c⁄° *
˚π
, c⁄° *
ˇ
,

383 c⁄° *
ˇ∑th
, c⁄° *
cùhî
);

384 c⁄° * 
STDCALL
 
mysql_gë_s¶_cùhî
(
MYSQL
 *
mysql
);

385 
my_boﬁ
 
STDCALL
 
mysql_ch™ge_u£r
(
MYSQL
 *
mysql
, c⁄° *
u£r
,

386 c⁄° *
∑sswd
, c⁄° *
db
);

387 
MYSQL
 * 
STDCALL
 
mysql_ªÆ_c⁄√˘
(MYSQL *
mysql
, c⁄° *
ho°
,

388 c⁄° *
u£r
,

389 c⁄° *
∑sswd
,

390 c⁄° *
db
,

391 
p‹t
,

392 c⁄° *
unix_sockë
,

393 
˛õ¡Êag
);

394 
STDCALL
 
mysql_£À˘_db
(
MYSQL
 *
mysql
, c⁄° *
db
);

395 
STDCALL
 
mysql_quîy
(
MYSQL
 *
mysql
, c⁄° *
q
);

396 
STDCALL
 
mysql_£nd_quîy
(
MYSQL
 *
mysql
, c⁄° *
q
,

397 
Àngth
);

398 
STDCALL
 
mysql_ªÆ_quîy
(
MYSQL
 *
mysql
, c⁄° *
q
,

399 
Àngth
);

400 
MYSQL_RES
 * 
STDCALL
 
mysql_°‹e_ªsu…
(
MYSQL
 *
mysql
);

401 
MYSQL_RES
 * 
STDCALL
 
mysql_u£_ªsu…
(
MYSQL
 *
mysql
);

403 
STDCALL
 
mysql_gë_ch¨a˘î_£t_öfo
(
MYSQL
 *
mysql
,

404 
MY_CHARSET_INFO
 *
ch¨£t
);

408 
	#LOCAL_INFILE_ERROR_LEN
 512

	)

411 
mysql_£t_loˇl_öfûe_h™dÀr
(
MYSQL
 *
mysql
,

412 (*
loˇl_öfûe_öô
)(**, const *,

414 (*
loˇl_öfûe_ªad
)(*, *,

416 (*
loˇl_öfûe_íd
)(*),

417 (*
loˇl_öfûe_îr‹
)(*, *,

422 
mysql_£t_loˇl_öfûe_deÁu…
(
MYSQL
 *
mysql
);

424 
STDCALL
 
mysql_shutdown
(
MYSQL
 *
mysql
,

425 
mysql_íum_shutdown_Àvñ


426 
shutdown_Àvñ
);

427 
STDCALL
 
mysql_dump_debug_öfo
(
MYSQL
 *
mysql
);

428 
STDCALL
 
mysql_ª‰esh
(
MYSQL
 *
mysql
,

429 
ª‰esh_›ti⁄s
);

430 
STDCALL
 
mysql_kûl
(
MYSQL
 *
mysql
,
pid
);

431 
STDCALL
 
mysql_£t_£rvî_›ti⁄
(
MYSQL
 *
mysql
,

432 
íum_mysql_£t_›ti⁄


433 
›ti⁄
);

434 
STDCALL
 
mysql_pög
(
MYSQL
 *
mysql
);

435 c⁄° * 
STDCALL
 
mysql_°©
(
MYSQL
 *
mysql
);

436 c⁄° * 
STDCALL
 
mysql_gë_£rvî_öfo
(
MYSQL
 *
mysql
);

437 c⁄° * 
STDCALL
 
mysql_gë_˛õ¡_öfo
();

438 
STDCALL
 
mysql_gë_˛õ¡_vîsi⁄
();

439 c⁄° * 
STDCALL
 
mysql_gë_ho°_öfo
(
MYSQL
 *
mysql
);

440 
STDCALL
 
mysql_gë_£rvî_vîsi⁄
(
MYSQL
 *
mysql
);

441 
STDCALL
 
mysql_gë_¥Ÿo_öfo
(
MYSQL
 *
mysql
);

442 
MYSQL_RES
 * 
STDCALL
 
mysql_li°_dbs
(
MYSQL
 *
mysql
,c⁄° *
wûd
);

443 
MYSQL_RES
 * 
STDCALL
 
mysql_li°_èbÀs
(
MYSQL
 *
mysql
,c⁄° *
wûd
);

444 
MYSQL_RES
 * 
STDCALL
 
mysql_li°_¥o˚s£s
(
MYSQL
 *
mysql
);

445 
STDCALL
 
mysql_›ti⁄s
(
MYSQL
 *
mysql
,
mysql_›ti⁄
 
›ti⁄
,

446 c⁄° *
¨g
);

447 
STDCALL
 
mysql_‰ì_ªsu…
(
MYSQL_RES
 *
ªsu…
);

448 
STDCALL
 
mysql_d©a_£ek
(
MYSQL_RES
 *
ªsu…
,

449 
my_ul⁄gl⁄g
 
off£t
);

450 
MYSQL_ROW_OFFSET
 
STDCALL
 
mysql_row_£ek
(
MYSQL_RES
 *
ªsu…
,

451 
MYSQL_ROW_OFFSET
 
off£t
);

452 
MYSQL_FIELD_OFFSET
 
STDCALL
 
mysql_fõld_£ek
(
MYSQL_RES
 *
ªsu…
,

453 
MYSQL_FIELD_OFFSET
 
off£t
);

454 
MYSQL_ROW
 
STDCALL
 
mysql_„tch_row
(
MYSQL_RES
 *
ªsu…
);

455 * 
STDCALL
 
mysql_„tch_Àngths
(
MYSQL_RES
 *
ªsu…
);

456 
MYSQL_FIELD
 * 
STDCALL
 
mysql_„tch_fõld
(
MYSQL_RES
 *
ªsu…
);

457 
MYSQL_RES
 * 
STDCALL
 
mysql_li°_fõlds
(
MYSQL
 *
mysql
, c⁄° *
èbÀ
,

458 c⁄° *
wûd
);

459 
STDCALL
 
mysql_esˇ≥_°rög
(*
to
,c⁄° *
‰om
,

460 
‰om_Àngth
);

461 
STDCALL
 
mysql_hex_°rög
(*
to
,c⁄° *
‰om
,

462 
‰om_Àngth
);

463 
STDCALL
 
mysql_ªÆ_esˇ≥_°rög
(
MYSQL
 *
mysql
,

464 *
to
,c⁄° *
‰om
,

465 
Àngth
);

466 
STDCALL
 
mysql_debug
(c⁄° *
debug
);

467 
STDCALL
 
myodbc_ªmove_esˇ≥
(
MYSQL
 *
mysql
,*
«me
);

468 
STDCALL
 
mysql_thªad_ß„
();

469 
my_boﬁ
 
STDCALL
 
mysql_embedded
();

470 
my_boﬁ
 
STDCALL
 
mysql_ªad_quîy_ªsu…
(
MYSQL
 *
mysql
);

479 
	eíum_mysql_°mt_°©e


481 
	gMYSQL_STMT_INIT_DONE
1, 
	gMYSQL_STMT_PREPARE_DONE
, 
	gMYSQL_STMT_EXECUTE_DONE
,

482 
	gMYSQL_STMT_FETCH_DONE


549 
	s°_mysql_böd


551 *
	gÀngth
;

552 
my_boﬁ
 *
	gis_nuŒ
;

553 *
	gbuf„r
;

555 
my_boﬁ
 *
	gîr‹
;

556 *
	grow_±r
;

557 (*
	g°‹e_∑øm_func
)(
NET
 *
	g√t
, 
°_mysql_böd
 *
	g∑øm
);

558 (*
	g„tch_ªsu…
)(
	g°_mysql_böd
 *, 
	gMYSQL_FIELD
 *,

559 **
	grow
);

560 (*
	gskù_ªsu…
)(
	g°_mysql_böd
 *, 
	gMYSQL_FIELD
 *,

561 **
	grow
);

563 
	gbuf„r_Àngth
;

564 
	goff£t
;

565 
	gÀngth_vÆue
;

566 
	g∑øm_numbî
;

567 
	g∑ck_Àngth
;

568 
íum_fõld_ty≥s
 
	gbuf„r_ty≥
;

569 
my_boﬁ
 
	gîr‹_vÆue
;

570 
my_boﬁ
 
	gis_unsig√d
;

571 
my_boﬁ
 
	gl⁄g_d©a_u£d
;

572 
my_boﬁ
 
	gis_nuŒ_vÆue
;

573 *
	gexãnsi⁄
;

574 } 
	tMYSQL_BIND
;

577 
	g°_mysql_°mt_exãnsi⁄
;

580 
	s°_mysql_°mt


582 
MEM_ROOT
 
	gmem_roŸ
;

583 
LIST
 
	gli°
;

584 
MYSQL
 *
	gmysql
;

585 
MYSQL_BIND
 *
	g∑øms
;

586 
MYSQL_BIND
 *
	gböd
;

587 
MYSQL_FIELD
 *
	gfõlds
;

588 
MYSQL_DATA
 
	gªsu…
;

589 
MYSQL_ROWS
 *
	gd©a_curs‹
;

594 (*
	gªad_row_func
)(
°_mysql_°mt
 *
	g°mt
,

595 **
	grow
);

597 
my_ul⁄gl⁄g
 
	gaf„˘ed_rows
;

598 
my_ul⁄gl⁄g
 
	gö£π_id
;

599 
	g°mt_id
;

600 
	gÊags
;

601 
	g¥e„tch_rows
;

606 
	g£rvî_°©us
;

607 
	gœ°_î∫o
;

608 
	g∑øm_cou¡
;

609 
	gfõld_cou¡
;

610 
íum_mysql_°mt_°©e
 
	g°©e
;

611 
	gœ°_îr‹
[
MYSQL_ERRMSG_SIZE
];

612 
	gsql°©e
[
SQLSTATE_LENGTH
+1];

614 
my_boﬁ
 
	g£nd_ty≥s_to_£rvî
;

615 
my_boﬁ
 
	gböd_∑øm_d⁄e
;

616 
	gböd_ªsu…_d⁄e
;

618 
my_boﬁ
 
	gunbuf„ªd_„tch_ˇn˚Œed
;

623 
my_boﬁ
 
	gupd©e_max_Àngth
;

624 
°_mysql_°mt_exãnsi⁄
 *
	gexãnsi⁄
;

625 } 
	tMYSQL_STMT
;

627 
	eíum_°mt_©å_ty≥


636 
	gSTMT_ATTR_UPDATE_MAX_LENGTH
,

641 
	gSTMT_ATTR_CURSOR_TYPE
,

646 
	gSTMT_ATTR_PREFETCH_ROWS


650 
MYSQL_STMT
 * 
STDCALL
 
mysql_°mt_öô
(
MYSQL
 *
mysql
);

651 
STDCALL
 
mysql_°mt_¥ï¨e
(
MYSQL_STMT
 *
°mt
, c⁄° *
quîy
,

652 
Àngth
);

653 
STDCALL
 
mysql_°mt_execuã
(
MYSQL_STMT
 *
°mt
);

654 
STDCALL
 
mysql_°mt_„tch
(
MYSQL_STMT
 *
°mt
);

655 
STDCALL
 
mysql_°mt_„tch_cﬁumn
(
MYSQL_STMT
 *
°mt
, 
MYSQL_BIND
 *
böd_¨g
,

656 
cﬁumn
,

657 
off£t
);

658 
STDCALL
 
mysql_°mt_°‹e_ªsu…
(
MYSQL_STMT
 *
°mt
);

659 
STDCALL
 
mysql_°mt_∑øm_cou¡
(
MYSQL_STMT
 * 
°mt
);

660 
my_boﬁ
 
STDCALL
 
mysql_°mt_©å_£t
(
MYSQL_STMT
 *
°mt
,

661 
íum_°mt_©å_ty≥
 
©å_ty≥
,

662 c⁄° *
©å
);

663 
my_boﬁ
 
STDCALL
 
mysql_°mt_©å_gë
(
MYSQL_STMT
 *
°mt
,

664 
íum_°mt_©å_ty≥
 
©å_ty≥
,

665 *
©å
);

666 
my_boﬁ
 
STDCALL
 
mysql_°mt_böd_∑øm
(
MYSQL_STMT
 * 
°mt
, 
MYSQL_BIND
 * 
bnd
);

667 
my_boﬁ
 
STDCALL
 
mysql_°mt_böd_ªsu…
(
MYSQL_STMT
 * 
°mt
, 
MYSQL_BIND
 * 
bnd
);

668 
my_boﬁ
 
STDCALL
 
mysql_°mt_˛o£
(
MYSQL_STMT
 * 
°mt
);

669 
my_boﬁ
 
STDCALL
 
mysql_°mt_ª£t
(
MYSQL_STMT
 * 
°mt
);

670 
my_boﬁ
 
STDCALL
 
mysql_°mt_‰ì_ªsu…
(
MYSQL_STMT
 *
°mt
);

671 
my_boﬁ
 
STDCALL
 
mysql_°mt_£nd_l⁄g_d©a
(
MYSQL_STMT
 *
°mt
,

672 
∑øm_numbî
,

673 c⁄° *
d©a
,

674 
Àngth
);

675 
MYSQL_RES
 *
STDCALL
 
mysql_°mt_ªsu…_mëad©a
(
MYSQL_STMT
 *
°mt
);

676 
MYSQL_RES
 *
STDCALL
 
mysql_°mt_∑øm_mëad©a
(
MYSQL_STMT
 *
°mt
);

677 
STDCALL
 
mysql_°mt_î∫o
(
MYSQL_STMT
 * 
°mt
);

678 c⁄° *
STDCALL
 
mysql_°mt_îr‹
(
MYSQL_STMT
 * 
°mt
);

679 c⁄° *
STDCALL
 
mysql_°mt_sql°©e
(
MYSQL_STMT
 * 
°mt
);

680 
MYSQL_ROW_OFFSET
 
STDCALL
 
mysql_°mt_row_£ek
(
MYSQL_STMT
 *
°mt
,

681 
MYSQL_ROW_OFFSET
 
off£t
);

682 
MYSQL_ROW_OFFSET
 
STDCALL
 
mysql_°mt_row_ãŒ
(
MYSQL_STMT
 *
°mt
);

683 
STDCALL
 
mysql_°mt_d©a_£ek
(
MYSQL_STMT
 *
°mt
, 
my_ul⁄gl⁄g
 
off£t
);

684 
my_ul⁄gl⁄g
 
STDCALL
 
mysql_°mt_num_rows
(
MYSQL_STMT
 *
°mt
);

685 
my_ul⁄gl⁄g
 
STDCALL
 
mysql_°mt_af„˘ed_rows
(
MYSQL_STMT
 *
°mt
);

686 
my_ul⁄gl⁄g
 
STDCALL
 
mysql_°mt_ö£π_id
(
MYSQL_STMT
 *
°mt
);

687 
STDCALL
 
mysql_°mt_fõld_cou¡
(
MYSQL_STMT
 *
°mt
);

689 
my_boﬁ
 
STDCALL
 
mysql_commô
(
MYSQL
 * 
mysql
);

690 
my_boﬁ
 
STDCALL
 
mysql_rﬁlback
(
MYSQL
 * 
mysql
);

691 
my_boﬁ
 
STDCALL
 
mysql_autocommô
(
MYSQL
 * 
mysql
, my_boﬁ 
auto_mode
);

692 
my_boﬁ
 
STDCALL
 
mysql_m‹e_ªsu…s
(
MYSQL
 *
mysql
);

693 
STDCALL
 
mysql_√xt_ªsu…
(
MYSQL
 *
mysql
);

694 
STDCALL
 
mysql_°mt_√xt_ªsu…
(
MYSQL_STMT
 *
°mt
);

695 
STDCALL
 
mysql_˛o£
(
MYSQL
 *
sock
);

699 
	#MYSQL_NO_DATA
 100

	)

700 
	#MYSQL_DATA_TRUNCATED
 101

	)

702 
	#mysql_ªlﬂd
(
mysql
Ë
	`mysql_ª‰esh
((mysql),
REFRESH_GRANT
)

	)

704 #ifde‡
USE_OLD_FUNCTIONS


705 
MYSQL
 * 
STDCALL
 
mysql_c⁄√˘
(MYSQL *
mysql
, c⁄° *
ho°
,

706 c⁄° *
u£r
, c⁄° *
∑sswd
);

707 
STDCALL
 
mysql_¸óã_db
(
MYSQL
 *
mysql
, c⁄° *
DB
);

708 
STDCALL
 
mysql_dr›_db
(
MYSQL
 *
mysql
, c⁄° *
DB
);

710 
	#HAVE_MYSQL_REAL_CONNECT


	)

712 #ifdef 
__˝lu•lus


	@/usr/include/netinet/in.h

20 #i‚def 
_NETINET_IN_H


21 
	#_NETINET_IN_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<°döt.h
>

25 
	~<sys/sockë.h
>

26 
	~<bôs/ty≥s.h
>

29 
__BEGIN_DECLS


34 
	mIPPROTO_IP
 = 0,

35 
	#IPPROTO_IP
 
IPPROTO_IP


	)

36 
	mIPPROTO_HOPOPTS
 = 0,

37 
	#IPPROTO_HOPOPTS
 
IPPROTO_HOPOPTS


	)

38 
	mIPPROTO_ICMP
 = 1,

39 
	#IPPROTO_ICMP
 
IPPROTO_ICMP


	)

40 
	mIPPROTO_IGMP
 = 2,

41 
	#IPPROTO_IGMP
 
IPPROTO_IGMP


	)

42 
	mIPPROTO_IPIP
 = 4,

43 
	#IPPROTO_IPIP
 
IPPROTO_IPIP


	)

44 
	mIPPROTO_TCP
 = 6,

45 
	#IPPROTO_TCP
 
IPPROTO_TCP


	)

46 
	mIPPROTO_EGP
 = 8,

47 
	#IPPROTO_EGP
 
IPPROTO_EGP


	)

48 
	mIPPROTO_PUP
 = 12,

49 
	#IPPROTO_PUP
 
IPPROTO_PUP


	)

50 
	mIPPROTO_UDP
 = 17,

51 
	#IPPROTO_UDP
 
IPPROTO_UDP


	)

52 
	mIPPROTO_IDP
 = 22,

53 
	#IPPROTO_IDP
 
IPPROTO_IDP


	)

54 
	mIPPROTO_TP
 = 29,

55 
	#IPPROTO_TP
 
IPPROTO_TP


	)

56 
	mIPPROTO_DCCP
 = 33,

57 
	#IPPROTO_DCCP
 
IPPROTO_DCCP


	)

58 
	mIPPROTO_IPV6
 = 41,

59 
	#IPPROTO_IPV6
 
IPPROTO_IPV6


	)

60 
	mIPPROTO_ROUTING
 = 43,

61 
	#IPPROTO_ROUTING
 
IPPROTO_ROUTING


	)

62 
	mIPPROTO_FRAGMENT
 = 44,

63 
	#IPPROTO_FRAGMENT
 
IPPROTO_FRAGMENT


	)

64 
	mIPPROTO_RSVP
 = 46,

65 
	#IPPROTO_RSVP
 
IPPROTO_RSVP


	)

66 
	mIPPROTO_GRE
 = 47,

67 
	#IPPROTO_GRE
 
IPPROTO_GRE


	)

68 
	mIPPROTO_ESP
 = 50,

69 
	#IPPROTO_ESP
 
IPPROTO_ESP


	)

70 
	mIPPROTO_AH
 = 51,

71 
	#IPPROTO_AH
 
IPPROTO_AH


	)

72 
	mIPPROTO_ICMPV6
 = 58,

73 
	#IPPROTO_ICMPV6
 
IPPROTO_ICMPV6


	)

74 
	mIPPROTO_NONE
 = 59,

75 
	#IPPROTO_NONE
 
IPPROTO_NONE


	)

76 
	mIPPROTO_DSTOPTS
 = 60,

77 
	#IPPROTO_DSTOPTS
 
IPPROTO_DSTOPTS


	)

78 
	mIPPROTO_MTP
 = 92,

79 
	#IPPROTO_MTP
 
IPPROTO_MTP


	)

80 
	mIPPROTO_ENCAP
 = 98,

81 
	#IPPROTO_ENCAP
 
IPPROTO_ENCAP


	)

82 
	mIPPROTO_PIM
 = 103,

83 
	#IPPROTO_PIM
 
IPPROTO_PIM


	)

84 
	mIPPROTO_COMP
 = 108,

85 
	#IPPROTO_COMP
 
IPPROTO_COMP


	)

86 
	mIPPROTO_SCTP
 = 132,

87 
	#IPPROTO_SCTP
 
IPPROTO_SCTP


	)

88 
	mIPPROTO_UDPLITE
 = 136,

89 
	#IPPROTO_UDPLITE
 
IPPROTO_UDPLITE


	)

90 
	mIPPROTO_RAW
 = 255,

91 
	#IPPROTO_RAW
 
IPPROTO_RAW


	)

92 
	mIPPROTO_MAX


97 
uöt16_t
 
	tö_p‹t_t
;

102 
	mIPPORT_ECHO
 = 7,

103 
	mIPPORT_DISCARD
 = 9,

104 
	mIPPORT_SYSTAT
 = 11,

105 
	mIPPORT_DAYTIME
 = 13,

106 
	mIPPORT_NETSTAT
 = 15,

107 
	mIPPORT_FTP
 = 21,

108 
	mIPPORT_TELNET
 = 23,

109 
	mIPPORT_SMTP
 = 25,

110 
	mIPPORT_TIMESERVER
 = 37,

111 
	mIPPORT_NAMESERVER
 = 42,

112 
	mIPPORT_WHOIS
 = 43,

113 
	mIPPORT_MTP
 = 57,

115 
	mIPPORT_TFTP
 = 69,

116 
	mIPPORT_RJE
 = 77,

117 
	mIPPORT_FINGER
 = 79,

118 
	mIPPORT_TTYLINK
 = 87,

119 
	mIPPORT_SUPDUP
 = 95,

122 
	mIPPORT_EXECSERVER
 = 512,

123 
	mIPPORT_LOGINSERVER
 = 513,

124 
	mIPPORT_CMDSERVER
 = 514,

125 
	mIPPORT_EFSSERVER
 = 520,

128 
	mIPPORT_BIFFUDP
 = 512,

129 
	mIPPORT_WHOSERVER
 = 513,

130 
	mIPPORT_ROUTESERVER
 = 520,

133 
	mIPPORT_RESERVED
 = 1024,

136 
	mIPPORT_USERRESERVED
 = 5000

141 
uöt32_t
 
	tö_addr_t
;

142 
	sö_addr


144 
ö_addr_t
 
	ms_addr
;

153 
	#IN_CLASSA
(
a
Ë((((
ö_addr_t
)◊)Ë& 0x80000000Ë=0)

	)

154 
	#IN_CLASSA_NET
 0xff000000

	)

155 
	#IN_CLASSA_NSHIFT
 24

	)

156 
	#IN_CLASSA_HOST
 (0xfffffff‡& ~
IN_CLASSA_NET
)

	)

157 
	#IN_CLASSA_MAX
 128

	)

159 
	#IN_CLASSB
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xc0000000Ë=0x80000000)

	)

160 
	#IN_CLASSB_NET
 0xffff0000

	)

161 
	#IN_CLASSB_NSHIFT
 16

	)

162 
	#IN_CLASSB_HOST
 (0xfffffff‡& ~
IN_CLASSB_NET
)

	)

163 
	#IN_CLASSB_MAX
 65536

	)

165 
	#IN_CLASSC
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xc0000000)

	)

166 
	#IN_CLASSC_NET
 0xffffff00

	)

167 
	#IN_CLASSC_NSHIFT
 8

	)

168 
	#IN_CLASSC_HOST
 (0xfffffff‡& ~
IN_CLASSC_NET
)

	)

170 
	#IN_CLASSD
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xe0000000)

	)

171 
	#IN_MULTICAST
(
a
Ë
	`IN_CLASSD
◊)

	)

173 
	#IN_EXPERIMENTAL
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xe0000000)

	)

174 
	#IN_BADCLASS
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xf0000000)

	)

177 
	#INADDR_ANY
 ((
ö_addr_t
Ë0x00000000)

	)

179 
	#INADDR_BROADCAST
 ((
ö_addr_t
Ë0xffffffff)

	)

181 
	#INADDR_NONE
 ((
ö_addr_t
Ë0xffffffff)

	)

184 
	#IN_LOOPBACKNET
 127

	)

186 #i‚de‡
INADDR_LOOPBACK


187 
	#INADDR_LOOPBACK
 ((
ö_addr_t
Ë0x7f000001Ë

	)

191 
	#INADDR_UNSPEC_GROUP
 ((
ö_addr_t
Ë0xe0000000Ë

	)

192 
	#INADDR_ALLHOSTS_GROUP
 ((
ö_addr_t
Ë0xe0000001Ë

	)

193 
	#INADDR_ALLRTRS_GROUP
 ((
ö_addr_t
Ë0xe0000002Ë

	)

194 
	#INADDR_MAX_LOCAL_GROUP
 ((
ö_addr_t
Ë0xe00000ffË

	)

198 
	sö6_addr


202 
uöt8_t
 
	m__u6_addr8
[16];

203 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


204 
uöt16_t
 
	m__u6_addr16
[8];

205 
uöt32_t
 
	m__u6_addr32
[4];

207 } 
	m__ö6_u
;

208 
	#s6_addr
 
__ö6_u
.
__u6_addr8


	)

209 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


210 
	#s6_addr16
 
__ö6_u
.
__u6_addr16


	)

211 
	#s6_addr32
 
__ö6_u
.
__u6_addr32


	)

215 c⁄° 
ö6_addr
 
ö6addr_™y
;

216 c⁄° 
ö6_addr
 
ö6addr_lo›back
;

217 
	#IN6ADDR_ANY_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }

	)

218 
	#IN6ADDR_LOOPBACK_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

	)

220 
	#INET_ADDRSTRLEN
 16

	)

221 
	#INET6_ADDRSTRLEN
 46

	)

225 
	ssockaddr_ö


227 
__SOCKADDR_COMMON
 (
sö_
);

228 
ö_p‹t_t
 
	msö_p‹t
;

229 
ö_addr
 
	msö_addr
;

232 
	msö_zîo
[ (
sockaddr
) -

233 
__SOCKADDR_COMMON_SIZE
 -

234  (
ö_p‹t_t
) -

235  (
ö_addr
)];

239 
	ssockaddr_ö6


241 
__SOCKADDR_COMMON
 (
sö6_
);

242 
ö_p‹t_t
 
	msö6_p‹t
;

243 
uöt32_t
 
	msö6_Êowöfo
;

244 
ö6_addr
 
	msö6_addr
;

245 
uöt32_t
 
	msö6_sc›e_id
;

249 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


251 
	sù_mªq


254 
ö_addr
 
	mimr_mu…üddr
;

257 
ö_addr
 
	mimr_öãrÁ˚
;

260 
	sù_mªq_sour˚


263 
ö_addr
 
	mimr_mu…üddr
;

266 
ö_addr
 
	mimr_öãrÁ˚
;

269 
ö_addr
 
	mimr_sour˚addr
;

275 
	sùv6_mªq


278 
ö6_addr
 
	mùv6mr_mu…üddr
;

281 
	mùv6mr_öãrÁ˚
;

285 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


287 
	sgroup_ªq


290 
uöt32_t
 
	mgr_öãrÁ˚
;

293 
sockaddr_°‹age
 
	mgr_group
;

296 
	sgroup_sour˚_ªq


299 
uöt32_t
 
	mg§_öãrÁ˚
;

302 
sockaddr_°‹age
 
	mg§_group
;

305 
sockaddr_°‹age
 
	mg§_sour˚
;

310 
	sù_msfûãr


313 
ö_addr
 
	mimsf_mu…üddr
;

316 
ö_addr
 
	mimsf_öãrÁ˚
;

319 
uöt32_t
 
	mimsf_fmode
;

322 
uöt32_t
 
	mimsf_num§c
;

324 
ö_addr
 
	mimsf_¶i°
[1];

327 
	#IP_MSFILTER_SIZE
(
num§c
Ë( (
ù_msfûãr
) \

328 -  (
ö_addr
) \

329 + (
num§c
Ë*  (
ö_addr
))

	)

331 
	sgroup_fûãr


334 
uöt32_t
 
	mgf_öãrÁ˚
;

337 
sockaddr_°‹age
 
	mgf_group
;

340 
uöt32_t
 
	mgf_fmode
;

343 
uöt32_t
 
	mgf_num§c
;

345 
sockaddr_°‹age
 
	mgf_¶i°
[1];

348 
	#GROUP_FILTER_SIZE
(
num§c
Ë( (
group_fûãr
) \

349 -  (
sockaddr_°‹age
) \

350 + ((
num§c
) \

351 *  (
sockaddr_°‹age
)))

	)

356 
	~<bôs/ö.h
>

365 
uöt32_t
 
	$¡ohl
 (
uöt32_t
 
__√é⁄g
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

366 
uöt16_t
 
	$¡ohs
 (
uöt16_t
 
__√tsh‹t
)

367 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

368 
uöt32_t
 
	$ht⁄l
 (
uöt32_t
 
__ho°l⁄g
)

369 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

370 
uöt16_t
 
	$ht⁄s
 (
uöt16_t
 
__ho°sh‹t
)

371 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

373 
	~<ídün.h
>

376 
	~<bôs/byãsw≠.h
>

378 #ifde‡
__OPTIMIZE__


382 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


385 
	#¡ohl
(
x
Ë(x)

	)

386 
	#¡ohs
(
x
Ë(x)

	)

387 
	#ht⁄l
(
x
Ë(x)

	)

388 
	#ht⁄s
(
x
Ë(x)

	)

390 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


391 
	#¡ohl
(
x
Ë
	`__bsw≠_32
 (x)

	)

392 
	#¡ohs
(
x
Ë
	`__bsw≠_16
 (x)

	)

393 
	#ht⁄l
(
x
Ë
	`__bsw≠_32
 (x)

	)

394 
	#ht⁄s
(
x
Ë
	`__bsw≠_16
 (x)

	)

399 #ifde‡
__GNUC__


400 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

401 (
__exãnsi⁄__
 \

402 ({ 
__c⁄°
 
ö6_addr
 *
__a
 = (__c⁄° ö6_add∏*Ë(
a
); \

403 
__a
->
s6_addr32
[0] == 0 \

404 && 
__a
->
s6_addr32
[1] == 0 \

405 && 
__a
->
s6_addr32
[2] == 0 \

406 && 
__a
->
s6_addr32
[3] =0; 
	}
}))

	)

408 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

409 (
__exãnsi⁄__
 \

410 ({ 
__c⁄°
 
ö6_addr
 *
__a
 = (__c⁄° ö6_add∏*Ë(
a
); \

411 
__a
->
s6_addr32
[0] == 0 \

412 && 
__a
->
s6_addr32
[1] == 0 \

413 && 
__a
->
s6_addr32
[2] == 0 \

414 && 
__a
->
s6_addr32
[3] =
	`ht⁄l
 (1); }))

	)

416 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

417 (
__exãnsi⁄__
 \

418 ({ 
__c⁄°
 
ö6_addr
 *
__a
 = (__c⁄° ö6_add∏*Ë(
a
); \

419 (
__a
->
s6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„800000); }))

	)

421 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

422 (
__exãnsi⁄__
 \

423 ({ 
__c⁄°
 
ö6_addr
 *
__a
 = (__c⁄° ö6_add∏*Ë(
a
); \

424 (
__a
->
s6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„c00000); }))

	)

426 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

427 (
__exãnsi⁄__
 \

428 ({ 
__c⁄°
 
ö6_addr
 *
__a
 = (__c⁄° ö6_add∏*Ë(
a
); \

429 
__a
->
s6_addr32
[0] == 0 \

430 && 
__a
->
s6_addr32
[1] == 0 \

431 && 
__a
->
s6_addr32
[2] =
	`ht⁄l
 (0xffff); }))

	)

433 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

434 (
__exãnsi⁄__
 \

435 ({ 
__c⁄°
 
ö6_addr
 *
__a
 = (__c⁄° ö6_add∏*Ë(
a
); \

436 
__a
->
s6_addr32
[0] == 0 \

437 && 
__a
->
s6_addr32
[1] == 0 \

438 && 
__a
->
s6_addr32
[2] == 0 \

439 && 
	`¡ohl
 (
__a
->
s6_addr32
[3]Ë> 1; }))

	)

441 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

442 (
__exãnsi⁄__
 \

443 ({ 
__c⁄°
 
ö6_addr
 *
__a
 = (__c⁄° ö6_add∏*Ë(
a
); \

444 
__c⁄°
 
ö6_addr
 *
__b
 = (__c⁄° ö6_add∏*Ë(
b
); \

445 
__a
->
s6_addr32
[0] =
__b
->s6_addr32[0] \

446 && 
__a
->
s6_addr32
[1] =
__b
->s6_addr32[1] \

447 && 
__a
->
s6_addr32
[2] =
__b
->s6_addr32[2] \

448 && 
__a
->
s6_addr32
[3] =
__b
->s6_addr32[3]; }))

	)

450 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

451 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0 \

452 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0 \

453 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0 \

454 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =0)

	)

456 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

457 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0 \

458 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0 \

459 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0 \

460 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =
	`ht⁄l
 (1))

	)

462 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

463 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

464 =
	`ht⁄l
 (0x„800000))

	)

466 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

467 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

468 =
	`ht⁄l
 (0x„c00000))

	)

470 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

471 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0) \

472 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0) \

473 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] =
	`ht⁄l
 (0xffff)))

	)

475 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

476 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0) \

477 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0) \

478 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0) \

479 && (
	`¡ohl
 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3]Ë> 1))

	)

481 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

482 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] =((__c⁄° uöt32_à*Ë(
b
))[0]) \

483 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] =((__c⁄° uöt32_à*Ë(
b
))[1]) \

484 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] =((__c⁄° uöt32_à*Ë(
b
))[2]) \

485 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =((__c⁄° uöt32_à*Ë(
b
))[3]))

	)

488 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë(((
__c⁄°
 
uöt8_t
 *Ë◊))[0] =0xff)

	)

490 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


492 
	$bödªsvp‹t
 (
__sockfd
, 
sockaddr_ö
 *
__sock_ö
Ë
__THROW
;

495 
	$bödªsvp‹t6
 (
__sockfd
, 
sockaddr_ö6
 *
__sock_ö
)

496 
__THROW
;

500 
	#IN6_IS_ADDR_MC_NODELOCAL
(
a
) \

501 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

502 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x1))

	)

504 
	#IN6_IS_ADDR_MC_LINKLOCAL
(
a
) \

505 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

506 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x2))

	)

508 
	#IN6_IS_ADDR_MC_SITELOCAL
(
a
) \

509 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

510 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x5))

	)

512 
	#IN6_IS_ADDR_MC_ORGLOCAL
(
a
) \

513 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

514 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x8))

	)

516 
	#IN6_IS_ADDR_MC_GLOBAL
(
a
) \

517 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

518 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0xe))

	)

521 #ifde‡
__USE_GNU


523 
	sö6_pktöfo


525 
ö6_addr
 
ùi6_addr
;

526 
ùi6_ifödex
;

530 
	sù6_mtuöfo


532 
sockaddr_ö6
 
ù6m_addr
;

533 
uöt32_t
 
ù6m_mtu
;

538 
	$öë6_›ti⁄_•a˚
 (
__nbyãs
)

539 
__THROW
 
__©åibuã_dïªˇãd__
;

540 
	$öë6_›ti⁄_öô
 (*
__bp
, 
cmsghdr
 **
__cmsgp
,

541 
__ty≥
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

542 
	$öë6_›ti⁄_≠≥nd
 (
cmsghdr
 *
__cmsg
,

543 
__c⁄°
 
uöt8_t
 *
__ty≥p
, 
__mu…x
,

544 
__∂usy
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

545 
uöt8_t
 *
	$öë6_›ti⁄_Æloc
 (
cmsghdr
 *
__cmsg
, 
__d©Æí
,

546 
__mu…x
, 
__∂usy
)

547 
__THROW
 
__©åibuã_dïªˇãd__
;

548 
	$öë6_›ti⁄_√xt
 (
__c⁄°
 
cmsghdr
 *
__cmsg
,

549 
uöt8_t
 **
__çåp
)

550 
__THROW
 
__©åibuã_dïªˇãd__
;

551 
	$öë6_›ti⁄_föd
 (
__c⁄°
 
cmsghdr
 *
__cmsg
,

552 
uöt8_t
 **
__çåp
, 
__ty≥
)

553 
__THROW
 
__©åibuã_dïªˇãd__
;

557 
	$öë6_›t_öô
 (*
__extbuf
, 
sockÀn_t
 
__exéí
Ë
__THROW
;

558 
	$öë6_›t_≠≥nd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

559 
uöt8_t
 
__ty≥
, 
sockÀn_t
 
__Àn
, uöt8_à
__Æign
,

560 **
__d©abuÂ
Ë
__THROW
;

561 
	$öë6_›t_föish
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
)

562 
__THROW
;

563 
	$öë6_›t_£t_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

564 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

565 
	$öë6_›t_√xt
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

566 
uöt8_t
 *
__ty≥p
, 
sockÀn_t
 *
__À≈
,

567 **
__d©abuÂ
Ë
__THROW
;

568 
	$öë6_›t_föd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

569 
uöt8_t
 
__ty≥
, 
sockÀn_t
 *
__À≈
,

570 **
__d©abuÂ
Ë
__THROW
;

571 
	$öë6_›t_gë_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

572 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

576 
sockÀn_t
 
	$öë6_πh_•a˚
 (
__ty≥
, 
__£gmíts
Ë
__THROW
;

577 *
	$öë6_πh_öô
 (*
__bp
, 
sockÀn_t
 
__bp_Àn
, 
__ty≥
,

578 
__£gmíts
Ë
__THROW
;

579 
	$öë6_πh_add
 (*
__bp
, 
__c⁄°
 
ö6_addr
 *
__addr
Ë
__THROW
;

580 
	$öë6_πh_ªvî£
 (
__c⁄°
 *
__ö
, *
__out
Ë
__THROW
;

581 
	$öë6_πh_£gmíts
 (
__c⁄°
 *
__bp
Ë
__THROW
;

582 
ö6_addr
 *
	$öë6_πh_gëaddr
 (
__c⁄°
 *
__bp
, 
__ödex
)

583 
__THROW
;

589 
	$gëùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

590 
ö_addr
 
__group
, 
uöt32_t
 *
__fmode
,

591 
uöt32_t
 *
__num§c
, 
ö_addr
 *
__¶i°
)

592 
__THROW
;

595 
	$£tùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

596 
ö_addr
 
__group
, 
uöt32_t
 
__fmode
,

597 
uöt32_t
 
__num§c
,

598 
__c⁄°
 
ö_addr
 *
__¶i°
)

599 
__THROW
;

603 
	$gësour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

604 
__c⁄°
 
sockaddr
 *
__group
,

605 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 *
__fmode
,

606 
uöt32_t
 *
__num§c
,

607 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

610 
	$£tsour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

611 
__c⁄°
 
sockaddr
 *
__group
,

612 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 
__fmode
,

613 
uöt32_t
 
__num§c
,

614 
__c⁄°
 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

617 
__END_DECLS


	@/usr/include/pthread.h

20 #i‚de‡
_PTHREAD_H


21 
	#_PTHREAD_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<ídün.h
>

25 
	~<sched.h
>

26 
	~<time.h
>

28 
	~<bôs/±hªadty≥s.h
>

29 
	~<bôs/£tjmp.h
>

30 
	~<bôs/w‹dsize.h
>

36 
	mPTHREAD_CREATE_JOINABLE
,

37 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

38 
	mPTHREAD_CREATE_DETACHED


39 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

46 
	mPTHREAD_MUTEX_TIMED_NP
,

47 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

48 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

49 
	mPTHREAD_MUTEX_ADAPTIVE_NP


50 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


52 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

53 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

54 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

55 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


57 #ifde‡
__USE_GNU


59 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


64 #ifde‡
__USE_XOPEN2K


68 
	mPTHREAD_MUTEX_STALLED
,

69 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

70 
	mPTHREAD_MUTEX_ROBUST
,

71 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


76 #ifde‡
__USE_UNIX98


80 
	mPTHREAD_PRIO_NONE
,

81 
	mPTHREAD_PRIO_INHERIT
,

82 
	mPTHREAD_PRIO_PROTECT


88 #i‡
__WORDSIZE
 == 64

89 
	#PTHREAD_MUTEX_INITIALIZER
 \

90 { { 0, 0, 0, 0, 0, 0, { 0, 0 } } }

	)

91 #ifde‡
__USE_GNU


92 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

93 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0, 0 } } }

	)

94 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

95 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0, 0 } } }

	)

96 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

97 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0, 0 } } }

	)

100 
	#PTHREAD_MUTEX_INITIALIZER
 \

101 { { 0, 0, 0, 0, 0, { 0 } } }

	)

102 #ifde‡
__USE_GNU


103 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

104 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0 } } }

	)

105 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0 } } }

	)

107 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

108 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0 } } }

	)

114 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


117 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

118 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

119 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

120 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


124 
	#PTHREAD_RWLOCK_INITIALIZER
 \

125 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

126 #ifde‡
__USE_GNU


127 #i‡
__WORDSIZE
 == 64

128 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

130 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

132 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


133 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

134 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

135 0, 0, 0, 0 } }

	)

137 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

138 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

139 0 } }

	)

149 
	mPTHREAD_INHERIT_SCHED
,

150 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

151 
	mPTHREAD_EXPLICIT_SCHED


152 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

159 
	mPTHREAD_SCOPE_SYSTEM
,

160 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

161 
	mPTHREAD_SCOPE_PROCESS


162 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

169 
	mPTHREAD_PROCESS_PRIVATE
,

170 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

171 
	mPTHREAD_PROCESS_SHARED


172 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

178 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

182 
	s_±hªad_˛ónup_buf„r


184 (*
	m__routöe
) (*);

185 *
	m__¨g
;

186 
	m__ˇn˚…y≥
;

187 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

193 
	mPTHREAD_CANCEL_ENABLE
,

194 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

195 
	mPTHREAD_CANCEL_DISABLE


196 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

200 
	mPTHREAD_CANCEL_DEFERRED
,

201 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

202 
	mPTHREAD_CANCEL_ASYNCHRONOUS


203 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

205 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

209 
	#PTHREAD_ONCE_INIT
 0

	)

212 #ifde‡
__USE_XOPEN2K


216 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

220 
__BEGIN_DECLS


225 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

226 
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

227 *(*
__°¨t_routöe
) (*),

228 *
__ª°ri˘
 
__¨g
Ë
__THROWNL
 
__n⁄nuŒ
 ((1, 3));

234 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

242 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

244 #ifde‡
__USE_GNU


247 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

255 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

256 
__c⁄°
 
time•ec
 *
__ab°ime
);

263 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

267 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

270 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
Ë
__THROW
;

278 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

281 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

282 
__THROW
 
	`__n⁄nuŒ
 ((1));

285 
	$±hªad_©å_gëdëach°©e
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

286 *
__dëach°©e
)

287 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

290 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

291 
__dëach°©e
)

292 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$±hªad_©å_gëgu¨dsize
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

297 
size_t
 *
__gu¨dsize
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

301 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

302 
size_t
 
__gu¨dsize
)

303 
__THROW
 
	`__n⁄nuŒ
 ((1));

307 
	$±hªad_©å_gësched∑øm
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


308 
__©å
,

309 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

310 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

313 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

314 
__c⁄°
 
sched_∑øm
 *
__ª°ri˘


315 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

318 
	$±hªad_©å_gëschedpﬁicy
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


319 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

320 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

323 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

324 
__THROW
 
	`__n⁄nuŒ
 ((1));

327 
	$±hªad_©å_gëöhîôsched
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


328 
__©å
, *
__ª°ri˘
 
__öhîô
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

332 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

333 
__öhîô
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1));

338 
	$±hªad_©å_gësc›e
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

339 *
__ª°ri˘
 
__sc›e
)

340 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

343 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

344 
__THROW
 
	`__n⁄nuŒ
 ((1));

347 
	$±hªad_©å_gë°ackaddr
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


348 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

349 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

355 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

356 *
__°ackaddr
)

357 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

360 
	$±hªad_©å_gë°acksize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


361 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

367 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

368 
size_t
 
__°acksize
)

369 
__THROW
 
	`__n⁄nuŒ
 ((1));

371 #ifde‡
__USE_XOPEN2K


373 
	$±hªad_©å_gë°ack
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

374 **
__ª°ri˘
 
__°ackaddr
,

375 
size_t
 *
__ª°ri˘
 
__°acksize
)

376 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

381 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

382 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

385 #ifde‡
__USE_GNU


388 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

389 
size_t
 
__˝u£tsize
,

390 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

391 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

395 
	$±hªad_©å_gëafföôy_≈
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

396 
size_t
 
__˝u£tsize
,

397 
˝u_£t_t
 *
__˝u£t
)

398 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

404 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

405 
__THROW
 
	`__n⁄nuŒ
 ((2));

413 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

414 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

415 
__THROW
 
	`__n⁄nuŒ
 ((3));

418 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

419 *
__ª°ri˘
 
__pﬁicy
,

420 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

421 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

424 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

425 
__THROW
;

428 #ifde‡
__USE_GNU


430 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

431 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

435 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, 
__c⁄°
 *
__«me
)

436 
__THROW
 
	`__n⁄nuŒ
 ((2));

440 #ifde‡
__USE_UNIX98


442 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

445 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

448 #ifde‡
__USE_GNU


453 
	$±hªad_yõld
 (Ë
__THROW
;

458 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

459 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

460 
__THROW
 
	`__n⁄nuŒ
 ((3));

463 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

464 
˝u_£t_t
 *
__˝u£t
)

465 
__THROW
 
	`__n⁄nuŒ
 ((3));

478 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

479 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

490 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

494 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

497 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

502 
	`±hªad_ã°ˇn˚l
 ();

511 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

512 
__mask_was_ßved
;

513 } 
__ˇn˚l_jmp_buf
[1];

514 *
__∑d
[4];

515 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

518 #i‚de‡
__˛ónup_f˘_©åibuã


519 
	#__˛ónup_f˘_©åibuã


	)

524 
	s__±hªad_˛ónup_‰ame


526 (*
__ˇn˚l_routöe
) (*);

527 *
__ˇn˚l_¨g
;

528 
__do_ô
;

529 
__ˇn˚l_ty≥
;

532 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


533 #ifde‡
__˝lu•lus


535 ˛as†
	c__±hªad_˛ónup_˛ass


537 (*
__ˇn˚l_routöe
) (*);

538 *
__ˇn˚l_¨g
;

539 
__do_ô
;

540 
__ˇn˚l_ty≥
;

542 
public
:

543 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

544 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

545 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

546 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

547 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

548 &
__ˇn˚l_ty≥
); 
	}
}

549 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

559 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

561 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

565 
	#±hªad_˛ónup_p›
(
execuã
) \

566 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

567 } 0)

	)

569 #ifde‡
__USE_GNU


573 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

575 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

576 
__˛‰ame
.
	`__de„r
 ()

	)

581 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

582 
__˛‰ame
.
	`__ª°‹e
 (); \

583 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

584 } 0)

	)

591 
__exã∫_ölöe
 

592 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

594 i‡(
__‰ame
->
__do_ô
)

595 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

596 
	}
}

605 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

607 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

608 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

609 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

610 .
__do_ô
 = 1 };

	)

614 
	#±hªad_˛ónup_p›
(
execuã
) \

615 
__˛‰ame
.
__do_ô
 = (
execuã
); \

616 } 0)

	)

618 #ifde‡
__USE_GNU


622 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

624 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

625 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

626 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

627 .
__do_ô
 = 1 }; \

628 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

629 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

634 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

635 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

636 
__˛‰ame
.
__do_ô
 = (
execuã
); \

637 } 0)

	)

648 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

650 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

651 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

652 *
__ˇn˚l_¨g
 = (
¨g
); \

653 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

654 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

655 i‡(
	`__buûtö_ex≥˘
 (
__nŸ_fú°_ˇŒ
, 0)) \

657 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

658 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

662 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

663 dÿ{

	)

664 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

665 
__˛ónup_f˘_©åibuã
;

669 
	#±hªad_˛ónup_p›
(
execuã
) \

672 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

673 i‡(
execuã
) \

674 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

675 } 0)

	)

676 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

677 
__˛ónup_f˘_©åibuã
;

679 #ifde‡
__USE_GNU


683 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

685 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

686 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

687 *
__ˇn˚l_¨g
 = (
¨g
); \

688 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

689 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

690 i‡(
	`__buûtö_ex≥˘
 (
__nŸ_fú°_ˇŒ
, 0)) \

692 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

693 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

697 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

698 dÿ{

	)

699 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

700 
__˛ónup_f˘_©åibuã
;

705 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

708 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

709 i‡(
execuã
) \

710 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

711 
	}
} 0)

	)

712 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

713 
__˛ónup_f˘_©åibuã
;

717 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

718 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

719 #i‚de‡
SHARED


720 
	`__©åibuã__
 ((
__wók__
))

726 
__jmp_buf_èg
;

727 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROW
;

733 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

734 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx©å
)

735 
__THROW
 
	`__n⁄nuŒ
 ((1));

738 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

739 
__THROW
 
	`__n⁄nuŒ
 ((1));

742 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

743 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

746 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

747 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

749 #ifde‡
__USE_XOPEN2K


751 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

752 
__c⁄°
 
time•ec
 *
__ª°ri˘


753 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

757 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

758 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

762 
	$±hªad_muãx_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx_t
 *

763 
__ª°ri˘
 
__muãx
,

764 *
__ª°ri˘
 
__¥io˚ûög
)

765 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

769 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

770 
__¥io˚ûög
,

771 *
__ª°ri˘
 
__ﬁd_˚ûög
)

772 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

775 #ifde‡
__USE_XOPEN2K8


777 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

778 
__THROW
 
	`__n⁄nuŒ
 ((1));

779 #ifde‡
__USE_GNU


780 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

781 
__THROW
 
	`__n⁄nuŒ
 ((1));

790 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

791 
__THROW
 
	`__n⁄nuŒ
 ((1));

794 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

795 
__THROW
 
	`__n⁄nuŒ
 ((1));

798 
	$±hªad_muãx©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_muãx©å_t
 *

799 
__ª°ri˘
 
__©å
,

800 *
__ª°ri˘
 
__psh¨ed
)

801 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

804 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

805 
__psh¨ed
)

806 
__THROW
 
	`__n⁄nuŒ
 ((1));

808 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


810 
	$±hªad_muãx©å_gëty≥
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


811 
__©å
, *
__ª°ri˘
 
__köd
)

812 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

817 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

818 
__THROW
 
	`__n⁄nuŒ
 ((1));

822 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (
__c⁄°
 
±hªad_muãx©å_t
 *

823 
__ª°ri˘
 
__©å
,

824 *
__ª°ri˘
 
__¥Ÿocﬁ
)

825 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

829 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

830 
__¥Ÿocﬁ
)

831 
__THROW
 
	`__n⁄nuŒ
 ((1));

834 
	$±hªad_muãx©å_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx©å_t
 *

835 
__ª°ri˘
 
__©å
,

836 *
__ª°ri˘
 
__¥io˚ûög
)

837 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

840 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

841 
__¥io˚ûög
)

842 
__THROW
 
	`__n⁄nuŒ
 ((1));

844 #ifde‡
__USE_XOPEN2K


846 
	$±hªad_muãx©å_gërobu°
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

847 *
__robu°√ss
)

848 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

849 #ifde‡
__USE_GNU


850 
	$±hªad_muãx©å_gërobu°_≈
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

851 *
__robu°√ss
)

852 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

856 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

857 
__robu°√ss
)

858 
__THROW
 
	`__n⁄nuŒ
 ((1));

859 #ifde‡
__USE_GNU


860 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

861 
__robu°√ss
)

862 
__THROW
 
	`__n⁄nuŒ
 ((1));

867 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


872 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

873 
__c⁄°
 
±hªad_rwlock©å_t
 *
__ª°ri˘


874 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

877 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

878 
__THROW
 
	`__n⁄nuŒ
 ((1));

881 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

882 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

885 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

886 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

888 #ifde‡
__USE_XOPEN2K


890 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

891 
__c⁄°
 
time•ec
 *
__ª°ri˘


892 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

896 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

897 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

900 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

901 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

903 #ifde‡
__USE_XOPEN2K


905 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

906 
__c⁄°
 
time•ec
 *
__ª°ri˘


907 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

911 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

912 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

918 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

919 
__THROW
 
	`__n⁄nuŒ
 ((1));

922 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

923 
__THROW
 
	`__n⁄nuŒ
 ((1));

926 
	$±hªad_rwlock©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

927 
__ª°ri˘
 
__©å
,

928 *
__ª°ri˘
 
__psh¨ed
)

929 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

932 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

933 
__psh¨ed
)

934 
__THROW
 
	`__n⁄nuŒ
 ((1));

937 
	$±hªad_rwlock©å_gëköd_≈
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

938 
__ª°ri˘
 
__©å
,

939 *
__ª°ri˘
 
__¥ef
)

940 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

943 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

944 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

952 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

953 
__c⁄°
 
±hªad_c⁄d©å_t
 *
__ª°ri˘


954 
__c⁄d_©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

957 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

958 
__THROW
 
	`__n⁄nuŒ
 ((1));

961 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

962 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

965 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

966 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

973 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

974 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

975 
	`__n⁄nuŒ
 ((1, 2));

984 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

985 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

986 
__c⁄°
 
time•ec
 *
__ª°ri˘


987 
__ab°ime
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

992 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

993 
__THROW
 
	`__n⁄nuŒ
 ((1));

996 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

997 
__THROW
 
	`__n⁄nuŒ
 ((1));

1000 
	$±hªad_c⁄d©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1001 
__ª°ri˘
 
__©å
,

1002 *
__ª°ri˘
 
__psh¨ed
)

1003 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1006 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1007 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1009 #ifde‡
__USE_XOPEN2K


1011 
	$±hªad_c⁄d©å_gë˛ock
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1012 
__ª°ri˘
 
__©å
,

1013 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1014 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1017 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1018 
__˛ockid_t
 
__˛ock_id
)

1019 
__THROW
 
	`__n⁄nuŒ
 ((1));

1023 #ifde‡
__USE_XOPEN2K


1028 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1029 
__THROW
 
	`__n⁄nuŒ
 ((1));

1032 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1033 
__THROW
 
	`__n⁄nuŒ
 ((1));

1036 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1037 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1040 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1041 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1044 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1045 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1052 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1053 
__c⁄°
 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1054 
__©å
, 
__cou¡
)

1055 
__THROW
 
	`__n⁄nuŒ
 ((1));

1058 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1059 
__THROW
 
	`__n⁄nuŒ
 ((1));

1062 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1063 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1067 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1068 
__THROW
 
	`__n⁄nuŒ
 ((1));

1071 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1072 
__THROW
 
	`__n⁄nuŒ
 ((1));

1075 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (
__c⁄°
 
±hªad_b¨rõøâr_t
 *

1076 
__ª°ri˘
 
__©å
,

1077 *
__ª°ri˘
 
__psh¨ed
)

1078 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1081 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1082 
__psh¨ed
)

1083 
__THROW
 
	`__n⁄nuŒ
 ((1));

1095 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1096 (*
__de°r_fun˘i⁄
) (*))

1097 
__THROW
 
	`__n⁄nuŒ
 ((1));

1100 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1103 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1106 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1107 
__c⁄°
 *
__poöãr
Ë
__THROW
 ;

1110 #ifde‡
__USE_XOPEN2K


1112 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1113 
__˛ockid_t
 *
__˛ock_id
)

1114 
__THROW
 
	`__n⁄nuŒ
 ((2));

1129 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1130 (*
__∑ª¡
) (),

1131 (*
__chûd
Ë()Ë
__THROW
;

1134 #ifde‡
__USE_EXTERN_INLINES


1136 
__exã∫_ölöe
 

1137 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1139  
__thªad1
 =
__thªad2
;

1140 
	}
}

1143 
	g__END_DECLS


	@/usr/include/semaphore.h

19 #i‚de‡
_SEMAPHORE_H


20 
	#_SEMAPHORE_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<sys/ty≥s.h
>

24 #ifde‡
__USE_XOPEN2K


25 
	#__√ed_time•ec


	)

26 
	~<time.h
>

30 
	~<bôs/£m≠h‹e.h
>

33 
__BEGIN_DECLS


37 
	$£m_öô
 (
£m_t
 *
__£m
, 
__psh¨ed
, 
__vÆue
)

38 
__THROW
;

40 
	$£m_de°roy
 (
£m_t
 *
__£m
Ë
__THROW
;

43 
£m_t
 *
	$£m_›í
 (
__c⁄°
 *
__«me
, 
__oÊag
, ...Ë
__THROW
;

46 
	$£m_˛o£
 (
£m_t
 *
__£m
Ë
__THROW
;

49 
	$£m_u∆ök
 (
__c⁄°
 *
__«me
Ë
__THROW
;

55 
	`£m_waô
 (
£m_t
 *
__£m
);

57 #ifde‡
__USE_XOPEN2K


62 
	`£m_timedwaô
 (
£m_t
 *
__ª°ri˘
 
__£m
,

63 
__c⁄°
 
time•ec
 *
__ª°ri˘
 
__ab°ime
);

67 
	$£m_åywaô
 (
£m_t
 *
__£m
Ë
__THROWNL
;

70 
	$£m_po°
 (
£m_t
 *
__£m
Ë
__THROWNL
;

73 
	$£m_gëvÆue
 (
£m_t
 *
__ª°ri˘
 
__£m
, *__ª°ri˘ 
__svÆ
)

74 
__THROW
;

77 
__END_DECLS


	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


45 
	g_IO_FILE
;

47 
__BEGIN_NAMESPACE_STD


49 
_IO_FILE
 
	tFILE
;

50 
	g__END_NAMESPACE_STD


51 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

52 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

53 || 
deföed
 
__USE_POSIX2


54 
	$__USING_NAMESPACE_STD
(
FILE
)

57 
	#__FILE_deföed
 1

	)

59 #unde‡
__√ed_FILE


62 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


65 
_IO_FILE
 
	t__FILE
;

67 
	#____FILE_deföed
 1

	)

69 #unde‡
__√ed___FILE


72 #ifdef 
_STDIO_H


73 
	#_STDIO_USES_IOSTREAM


	)

75 
	~<libio.h
>

77 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


78 #ifde‡
__GNUC__


79 #i‚de‡
_VA_LIST_DEFINED


80 
_G_va_li°
 
	tva_li°
;

81 
	#_VA_LIST_DEFINED


	)

84 
	~<°d¨g.h
>

88 #ifde‡
__USE_XOPEN2K8


89 #i‚de‡
__off_t_deföed


90 #i‚de‡
__USE_FILE_OFFSET64


91 
__off_t
 
	toff_t
;

93 
__off64_t
 
	toff_t
;

95 
	#__off_t_deföed


	)

97 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


98 
__off64_t
 
	toff64_t
;

99 
	#__off64_t_deföed


	)

102 #i‚de‡
__ssize_t_deföed


103 
__ssize_t
 
	tssize_t
;

104 
	#__ssize_t_deföed


	)

109 
__BEGIN_NAMESPACE_STD


110 #i‚de‡
__USE_FILE_OFFSET64


111 
_G_Âos_t
 
	tÂos_t
;

113 
_G_Âos64_t
 
	tÂos_t
;

115 
__END_NAMESPACE_STD


116 #ifde‡
__USE_LARGEFILE64


117 
_G_Âos64_t
 
	tÂos64_t
;

121 
	#_IOFBF
 0

	)

122 
	#_IOLBF
 1

	)

123 
	#_IONBF
 2

	)

127 #i‚de‡
BUFSIZ


128 
	#BUFSIZ
 
_IO_BUFSIZ


	)

134 #i‚de‡
EOF


135 
	#EOF
 (-1)

	)

141 
	#SEEK_SET
 0

	)

142 
	#SEEK_CUR
 1

	)

143 
	#SEEK_END
 2

	)

144 #ifde‡
__USE_GNU


145 
	#SEEK_DATA
 3

	)

146 
	#SEEK_HOLE
 4

	)

150 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


152 
	#P_tmpdú
 "/tmp"

	)

165 
	~<bôs/°dio_lim.h
>

169 
_IO_FILE
 *
°dö
;

170 
_IO_FILE
 *
°dout
;

171 
_IO_FILE
 *
°dîr
;

173 
	#°dö
 
°dö


	)

174 
	#°dout
 
°dout


	)

175 
	#°dîr
 
°dîr


	)

177 
__BEGIN_NAMESPACE_STD


179 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

181 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

182 
__END_NAMESPACE_STD


184 #ifde‡
__USE_ATFILE


186 
	$ª«mót
 (
__ﬁdfd
, 
__c⁄°
 *
__ﬁd
, 
__√wfd
,

187 
__c⁄°
 *
__√w
Ë
__THROW
;

190 
__BEGIN_NAMESPACE_STD


195 #i‚de‡
__USE_FILE_OFFSET64


196 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

198 #ifde‡
__REDIRECT


199 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

201 
	#tmpfûe
 
tmpfûe64


	)

205 #ifde‡
__USE_LARGEFILE64


206 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

210 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

211 
__END_NAMESPACE_STD


213 #ifde‡
__USE_MISC


216 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

220 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


228 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

229 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

233 
__BEGIN_NAMESPACE_STD


238 
	`f˛o£
 (
FILE
 *
__°ªam
);

243 
	`fÊush
 (
FILE
 *
__°ªam
);

244 
__END_NAMESPACE_STD


246 #ifde‡
__USE_MISC


253 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

256 #ifde‡
__USE_GNU


263 
	`f˛o£Æl
 ();

267 
__BEGIN_NAMESPACE_STD


268 #i‚de‡
__USE_FILE_OFFSET64


273 
FILE
 *
	$f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

274 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

279 
FILE
 *
	$‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

280 
__c⁄°
 *
__ª°ri˘
 
__modes
,

281 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

283 #ifde‡
__REDIRECT


284 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

285 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
)

286 
__wur
;

287 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

288 
__c⁄°
 *
__ª°ri˘
 
__modes
,

289 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

290 
__wur
;

292 
	#f›í
 
f›í64


	)

293 
	#‰e›í
 
‰e›í64


	)

296 
__END_NAMESPACE_STD


297 #ifde‡
__USE_LARGEFILE64


298 
FILE
 *
	$f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

299 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

300 
FILE
 *
	$‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

301 
__c⁄°
 *
__ª°ri˘
 
__modes
,

302 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

305 #ifdef 
__USE_POSIX


307 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
 
__wur
;

310 #ifdef 
__USE_GNU


313 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

314 
__c⁄°
 *
__ª°ri˘
 
__modes
,

315 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

318 #ifde‡
__USE_XOPEN2K8


320 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
)

321 
__THROW
 
__wur
;

326 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

330 
__BEGIN_NAMESPACE_STD


333 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

337 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

338 
__modes
, 
size_t
 
__n
Ë
__THROW
;

339 
__END_NAMESPACE_STD


341 #ifdef 
__USE_BSD


344 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

345 
size_t
 
__size
Ë
__THROW
;

348 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

352 
__BEGIN_NAMESPACE_STD


357 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

358 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

363 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

365 
	$•rötf
 (*
__ª°ri˘
 
__s
,

366 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

372 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

373 
_G_va_li°
 
__¨g
);

378 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

380 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

381 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

382 
__END_NAMESPACE_STD


384 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


385 
__BEGIN_NAMESPACE_C99


387 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

388 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

389 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

391 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

392 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

393 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

394 
__END_NAMESPACE_C99


397 #ifde‡
__USE_GNU


400 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

401 
_G_va_li°
 
__¨g
)

402 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

403 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

404 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

405 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

406 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

407 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

408 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

411 #ifde‡
__USE_XOPEN2K8


418 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

419 
_G_va_li°
 
__¨g
)

420 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

421 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

422 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

426 
__BEGIN_NAMESPACE_STD


431 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

432 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

437 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

439 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

440 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

442 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

443 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

444 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

445 #ifde‡
__REDIRECT


449 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

450 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

451 
__isoc99_fsˇnf
Ë
__wur
;

452 
	`__REDIRECT
 (
sˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

453 
__isoc99_sˇnf
Ë
__wur
;

454 
	`__REDIRECT_NTH
 (
ssˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__s
,

455 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

456 
__isoc99_ssˇnf
);

458 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

459 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

460 
	$__isoc99_sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

461 
	$__isoc99_ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

462 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

463 
	#fsˇnf
 
__isoc99_fsˇnf


	)

464 
	#sˇnf
 
__isoc99_sˇnf


	)

465 
	#ssˇnf
 
__isoc99_ssˇnf


	)

469 
__END_NAMESPACE_STD


471 #ifdef 
__USE_ISOC99


472 
__BEGIN_NAMESPACE_C99


477 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

478 
_G_va_li°
 
__¨g
)

479 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

485 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

486 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

489 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

490 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

491 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

493 #i‡!
deföed
 
__USE_GNU
 \

494 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

495 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

496 #ifde‡
__REDIRECT


500 
	`__REDIRECT
 (
vfsˇnf
,

501 (
FILE
 *
__ª°ri˘
 
__s
,

502 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

503 
__isoc99_vfsˇnf
)

504 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

505 
	`__REDIRECT
 (
vsˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

506 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

507 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

508 
	`__REDIRECT_NTH
 (
vssˇnf
,

509 (
__c⁄°
 *
__ª°ri˘
 
__s
,

510 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

511 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

512 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

514 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

515 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

516 
_G_va_li°
 
__¨g
Ë
__wur
;

517 
	$__isoc99_vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

518 
_G_va_li°
 
__¨g
Ë
__wur
;

519 
	$__isoc99_vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

520 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

521 
_G_va_li°
 
__¨g
Ë
__THROW
;

522 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

523 
	#vsˇnf
 
__isoc99_vsˇnf


	)

524 
	#vssˇnf
 
__isoc99_vssˇnf


	)

528 
__END_NAMESPACE_C99


532 
__BEGIN_NAMESPACE_STD


537 
	`fgëc
 (
FILE
 *
__°ªam
);

538 
	`gëc
 (
FILE
 *
__°ªam
);

544 
	`gëch¨
 ();

545 
__END_NAMESPACE_STD


549 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

551 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


556 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

557 
	`gëch¨_u∆ocked
 ();

560 #ifde‡
__USE_MISC


567 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

571 
__BEGIN_NAMESPACE_STD


579 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

586 
	`putch¨
 (
__c
);

587 
__END_NAMESPACE_STD


591 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

593 #ifde‡
__USE_MISC


600 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


608 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

609 
	`putch¨_u∆ocked
 (
__c
);

613 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

614 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

616 
	`gëw
 (
FILE
 *
__°ªam
);

619 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

623 
__BEGIN_NAMESPACE_STD


628 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

629 
__wur
;

636 *
	$gës
 (*
__s
Ë
__wur
;

637 
__END_NAMESPACE_STD


639 #ifde‡
__USE_GNU


646 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

647 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

651 #ifdef 
__USE_XOPEN2K8


662 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

663 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

664 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

665 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

675 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

676 
size_t
 *
__ª°ri˘
 
__n
,

677 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

681 
__BEGIN_NAMESPACE_STD


686 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

692 
	`puts
 (
__c⁄°
 *
__s
);

699 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

706 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

707 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

712 
size_t
 
	`fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

713 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

714 
__END_NAMESPACE_STD


716 #ifde‡
__USE_GNU


723 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

724 
FILE
 *
__ª°ri˘
 
__°ªam
);

727 #ifde‡
__USE_MISC


734 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

735 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

736 
size_t
 
	`fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

737 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

741 
__BEGIN_NAMESPACE_STD


746 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

751 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

756 
	`ªwöd
 (
FILE
 *
__°ªam
);

757 
__END_NAMESPACE_STD


764 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


765 #i‚de‡
__USE_FILE_OFFSET64


770 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

775 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

777 #ifde‡
__REDIRECT


778 
	`__REDIRECT
 (
f£eko
,

779 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

780 
f£eko64
);

781 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

783 
	#f£eko
 
f£eko64


	)

784 
	#·ñlo
 
·ñlo64


	)

789 
__BEGIN_NAMESPACE_STD


790 #i‚de‡
__USE_FILE_OFFSET64


795 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

800 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

802 #ifde‡
__REDIRECT


803 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

804 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

805 
	`__REDIRECT
 (
f£ços
,

806 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

808 
	#fgëpos
 
fgëpos64


	)

809 
	#f£ços
 
f£ços64


	)

812 
__END_NAMESPACE_STD


814 #ifde‡
__USE_LARGEFILE64


815 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

816 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

817 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

818 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

821 
__BEGIN_NAMESPACE_STD


823 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

825 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

827 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

828 
__END_NAMESPACE_STD


830 #ifde‡
__USE_MISC


832 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

833 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

834 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

838 
__BEGIN_NAMESPACE_STD


843 
	`≥º‹
 (
__c⁄°
 *
__s
);

844 
__END_NAMESPACE_STD


850 
	~<bôs/sys_îæi°.h
>

853 #ifdef 
__USE_POSIX


855 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

858 #ifde‡
__USE_MISC


860 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

864 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

865 
deföed
 
__USE_MISC
)

870 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__wur
;

876 
	`p˛o£
 (
FILE
 *
__°ªam
);

880 #ifdef 
__USE_POSIX


882 *
	$˘îmid
 (*
__s
Ë
__THROW
;

886 #ifde‡
__USE_XOPEN


888 *
	`cu£rid
 (*
__s
);

892 #ifdef 
__USE_GNU


893 
ob°ack
;

896 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

897 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

898 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

899 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

900 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

901 
_G_va_li°
 
__¨gs
)

902 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

906 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


910 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

914 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

917 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

920 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


924 
	#__√ed_gë›t


	)

925 
	~<gë›t.h
>

930 #ifde‡
__USE_EXTERN_INLINES


931 
	~<bôs/°dio.h
>

933 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


934 
	~<bôs/°dio2.h
>

936 #ifde‡
__LDBL_COMPAT


937 
	~<bôs/°dio-ldbl.h
>

940 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

53 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

168 
__END_NAMESPACE_STD


170 #ifdef 
__USE_ISOC99


171 
__BEGIN_NAMESPACE_C99


173 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

176 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

179 
__END_NAMESPACE_C99


182 
__BEGIN_NAMESPACE_STD


184 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

185 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

188 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

191 
__END_NAMESPACE_STD


193 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


195 
__exãnsi⁄__


196 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

197 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

200 
__exãnsi⁄__


201 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

206 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

207 
__BEGIN_NAMESPACE_C99


209 
__exãnsi⁄__


210 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

214 
__exãnsi⁄__


215 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

217 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

218 
__END_NAMESPACE_C99


222 #ifde‡
__USE_GNU


236 
	~<xloˇÀ.h
>

240 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

241 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

242 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

244 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
, 
__loˇÀ_t
 
__loc
)

247 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

249 
__exãnsi⁄__


250 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

252 
__loˇÀ_t
 
__loc
)

253 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

255 
__exãnsi⁄__


256 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__ba£
, 
__loˇÀ_t
 
__loc
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

261 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

263 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

265 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

266 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

269 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

270 **
__ª°ri˘
 
__íd±r
,

271 
__loˇÀ_t
 
__loc
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

276 #ifde‡
__USE_EXTERN_INLINES


277 
__BEGIN_NAMESPACE_STD


278 
__exã∫_ölöe
 

279 
	`__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

281  
	`°πod
 (
__≈å
, (**Ë
NULL
);

282 
	}
}

283 
__exã∫_ölöe
 

284 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

286  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

287 
	}
}

288 
__exã∫_ölöe
 

289 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

291  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

292 
	}
}

293 
	g__END_NAMESPACE_STD


295 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


296 
__BEGIN_NAMESPACE_C99


297 
__exãnsi⁄__
 
__exã∫_ölöe
 

298 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

300  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

301 
	}
}

302 
	g__END_NAMESPACE_C99


307 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


311 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

314 
	$a64l
 (
__c⁄°
 *
__s
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


320 
	~<sys/ty≥s.h
>

327 
	$øndom
 (Ë
__THROW
;

330 
	$§™dom
 (
__£ed
Ë
__THROW
;

336 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

337 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

341 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

344 #ifde‡
__USE_MISC


349 
	søndom_d©a


351 
öt32_t
 *
Âå
;

352 
öt32_t
 *
Ωå
;

353 
öt32_t
 *
°©e
;

354 
ønd_ty≥
;

355 
ønd_deg
;

356 
ønd_£p
;

357 
öt32_t
 *
íd_±r
;

360 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

361 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

363 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2));

366 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

367 
size_t
 
__°©ñí
,

368 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

371 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

372 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

373 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 
__BEGIN_NAMESPACE_STD


380 
	$ønd
 (Ë
__THROW
;

382 
	$§™d
 (
__£ed
Ë
__THROW
;

383 
__END_NAMESPACE_STD


385 #ifde‡
__USE_POSIX


387 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

391 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


395 
	$dønd48
 (Ë
__THROW
;

396 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

399 
	$Ã™d48
 (Ë
__THROW
;

400 
	$ƒ™d48
 (
__xsubi
[3])

401 
__THROW
 
	`__n⁄nuŒ
 ((1));

404 
	$mønd48
 (Ë
__THROW
;

405 
	$jønd48
 (
__xsubi
[3])

406 
__THROW
 
	`__n⁄nuŒ
 ((1));

409 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

410 *
	$£ed48
 (
__£ed16v
[3])

411 
__THROW
 
	`__n⁄nuŒ
 ((1));

412 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

414 #ifde‡
__USE_MISC


418 
	sdønd48_d©a


420 
__x
[3];

421 
__ﬁd_x
[3];

422 
__c
;

423 
__öô
;

424 
__a
;

428 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

429 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$î™d48_r
 (
__xsubi
[3],

431 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

432 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

435 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

436 *
__ª°ri˘
 
__ªsu…
)

437 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$ƒ™d48_r
 (
__xsubi
[3],

439 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

444 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

445 *
__ª°ri˘
 
__ªsu…
)

446 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$jønd48_r
 (
__xsubi
[3],

448 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

449 *
__ª°ri˘
 
__ªsu…
)

450 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

454 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 
	$£ed48_r
 (
__£ed16v
[3],

457 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$lc⁄g48_r
 (
__∑øm
[7],

460 
dønd48_d©a
 *
__buf„r
)

461 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

467 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


468 
	#__mÆloc_™d_ˇŒoc_deföed


	)

469 
__BEGIN_NAMESPACE_STD


471 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

473 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

474 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

475 
__END_NAMESPACE_STD


478 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


479 
__BEGIN_NAMESPACE_STD


485 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

486 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

488 
	$‰ì
 (*
__±r
Ë
__THROW
;

489 
__END_NAMESPACE_STD


491 #ifdef 
__USE_MISC


493 
	$c‰ì
 (*
__±r
Ë
__THROW
;

496 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


497 
	~<Æloˇ.h
>

500 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

501 || 
deföed
 
__USE_BSD


503 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

506 #ifde‡
__USE_XOPEN2K


508 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

509 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

512 
__BEGIN_NAMESPACE_STD


514 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

518 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

520 #ifde‡
__USE_GNU


524 #ifde‡
__˝lu•lus


525 "C++" 
	`©_quick_exô
 ((*
__func
) ())

526 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

528 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

531 
__END_NAMESPACE_STD


533 #ifdef 
__USE_MISC


536 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

537 
__THROW
 
	`__n⁄nuŒ
 ((1));

540 
__BEGIN_NAMESPACE_STD


544 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

546 #ifde‡
__USE_GNU


552 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

554 
__END_NAMESPACE_STD


556 #ifde‡
__USE_ISOC99


557 
__BEGIN_NAMESPACE_C99


560 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

561 
__END_NAMESPACE_C99


565 
__BEGIN_NAMESPACE_STD


567 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

568 
__END_NAMESPACE_STD


572 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
)

573 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

575 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


579 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

582 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


585 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

586 
__THROW
 
	`__n⁄nuŒ
 ((2));

589 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

592 #ifdef 
__USE_MISC


596 
	$˛óªnv
 (Ë
__THROW
;

600 #i‡
deföed
 
__USE_MISC
 \

601 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

609 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

610 || 
deföed
 
__USE_XOPEN2K8


619 #i‚de‡
__USE_FILE_OFFSET64


620 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

622 #ifde‡
__REDIRECT


623 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

624 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
	#mk°emp
 
mk°emp64


	)

629 #ifde‡
__USE_LARGEFILE64


630 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

634 #ifde‡
__USE_MISC


641 #i‚de‡
__USE_FILE_OFFSET64


642 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

644 #ifde‡
__REDIRECT


645 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

646 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

648 
	#mk°emps
 
mk°emps64


	)

651 #ifde‡
__USE_LARGEFILE64


652 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

653 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

657 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


663 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

666 #ifde‡
__USE_GNU


673 #i‚de‡
__USE_FILE_OFFSET64


674 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

676 #ifde‡
__REDIRECT


677 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

678 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

680 
	#mko°emp
 
mko°emp64


	)

683 #ifde‡
__USE_LARGEFILE64


684 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

693 #i‚de‡
__USE_FILE_OFFSET64


694 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 #ifde‡
__REDIRECT


698 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

699 
__Êags
), 
mko°emps64
)

700 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 
	#mko°emps
 
mko°emps64


	)

705 #ifde‡
__USE_LARGEFILE64


706 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

707 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 
__BEGIN_NAMESPACE_STD


717 
	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__wur
;

718 
__END_NAMESPACE_STD


721 #ifdef 
__USE_GNU


724 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

728 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


734 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

735 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

740 #i‚de‡
__COMPAR_FN_T


741 
	#__COMPAR_FN_T


	)

742 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

744 #ifdef 
__USE_GNU


745 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

748 #ifde‡
__USE_GNU


749 (*
	t__com∑r_d_‚_t
Ë(
	t__c⁄°
 *, __const *, *);

752 
__BEGIN_NAMESPACE_STD


755 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

756 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

757 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

761 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

762 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

763 #ifde‡
__USE_GNU


764 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

765 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

766 
	`__n⁄nuŒ
 ((1, 4));

771 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

772 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

773 
__END_NAMESPACE_STD


775 #ifde‡
__USE_ISOC99


776 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

777 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

781 
__BEGIN_NAMESPACE_STD


785 
div_t
 
	$div
 (
__numî
, 
__díom
)

786 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

787 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

788 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

789 
__END_NAMESPACE_STD


791 #ifde‡
__USE_ISOC99


792 
__BEGIN_NAMESPACE_C99


793 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

794 
__díom
)

795 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

796 
__END_NAMESPACE_C99


800 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

801 || 
deföed
 
__USE_SVID


808 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

809 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

814 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

815 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

820 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

821 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

824 #ifde‡
__USE_MISC


826 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

827 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

828 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

829 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

830 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

831 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

832 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

833 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

838 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

839 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

840 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

841 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

842 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

843 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

845 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

846 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

847 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

848 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

849 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

850 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

851 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

852 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

857 
__BEGIN_NAMESPACE_STD


860 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

863 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

864 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

867 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

871 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

872 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

874 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

875 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

876 
__THROW
;

877 
__END_NAMESPACE_STD


880 #ifde‡
__USE_SVID


885 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

889 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


896 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

897 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

898 **
__ª°ri˘
 
__vÆuï
)

899 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

903 #ifde‡
__USE_XOPEN


905 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

911 #ifde‡
__USE_XOPEN2KXSI


913 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

916 #ifde‡
__USE_XOPEN


921 
	$gø¡±
 (
__fd
Ë
__THROW
;

925 
	$u∆ock±
 (
__fd
Ë
__THROW
;

930 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

933 #ifde‡
__USE_GNU


937 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

938 
__THROW
 
	`__n⁄nuŒ
 ((2));

941 
	`gë±
 ();

944 #ifde‡
__USE_BSD


948 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

949 
__THROW
 
	`__n⁄nuŒ
 ((1));

954 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


955 
	~<bôs/°dlib.h
>

957 #ifde‡
__LDBL_COMPAT


958 
	~<bôs/°dlib-ldbl.h
>

962 #unde‡
__√ed_mÆloc_™d_ˇŒoc


964 
__END_DECLS


	@/usr/include/string.h

24 #i‚def 
_STRING_H


25 
	#_STRING_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

38 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

42 
__BEGIN_NAMESPACE_STD


44 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

45 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

46 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

49 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

50 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

51 
__END_NAMESPACE_STD


56 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


57 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

58 
__c
, 
size_t
 
__n
)

59 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

63 
__BEGIN_NAMESPACE_STD


65 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

68 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

69 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

72 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


75 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

76 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 
__c⁄°
 *
	`memchr
 (__c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

78 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

80 #ifde‡
__OPTIMIZE__


81 
__exã∫_Æways_ölöe
 *

82 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


84  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

87 
__exã∫_Æways_ölöe
 
__c⁄°
 *

88 
	`memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


90  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

93 
	}
}

95 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

96 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

98 
__END_NAMESPACE_STD


100 #ifde‡
__USE_GNU


103 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


104 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

105 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 "C++" 
__c⁄°
 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

107 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

109 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

110 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


115 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

116 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 "C++" 
__c⁄°
 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

120 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

126 
__BEGIN_NAMESPACE_STD


128 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

129 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

131 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

132 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

133 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

137 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

139 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

140 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

146 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

147 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

153 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

154 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

155 
__THROW
 
	`__n⁄nuŒ
 ((2));

156 
__END_NAMESPACE_STD


158 #ifde‡
__USE_XOPEN2K8


162 
	~<xloˇÀ.h
>

165 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

166 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

168 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

169 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

172 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

173 || 
deföed
 
__USE_XOPEN2K8


175 *
	$°rdup
 (
__c⁄°
 *
__s
)

176 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

182 #i‡
deföed
 
__USE_XOPEN2K8


183 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

184 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

187 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


189 
	#°rdu∑
(
s
) \

190 (
__exãnsi⁄__
 \

192 
__c⁄°
 *
__ﬁd
 = (
s
); \

193 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

194 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

195 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

196 
	}
}))

	)

199 
	#°∫du∑
(
s
, 
n
) \

200 (
__exãnsi⁄__
 \

202 
__c⁄°
 *
__ﬁd
 = (
s
); \

203 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

204 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

205 
__√w
[
__Àn
] = '\0'; \

206 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

207 }))

	)

210 
	g__BEGIN_NAMESPACE_STD


212 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


215 *
°rchr
 (*
__s
, 
__c
)

216 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

217 
__c⁄°
 *
°rchr
 (__c⁄° *
__s
, 
__c
)

218 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

220 #ifde‡
__OPTIMIZE__


221 
__exã∫_Æways_ölöe
 *

222 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


224  
__buûtö_°rchr
 (
__s
, 
__c
);

227 
__exã∫_Æways_ölöe
 
__c⁄°
 *

228 
°rchr
 (
__c⁄°
 *
__s
, 
__c
Ë
	g__THROW


230  
__buûtö_°rchr
 (
__s
, 
__c
);

235 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

236 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

239 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


242 *
	`°ºchr
 (*
__s
, 
__c
)

243 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 
__c⁄°
 *
	`°ºchr
 (__c⁄° *
__s
, 
__c
)

245 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

247 #ifde‡
__OPTIMIZE__


248 
__exã∫_Æways_ölöe
 *

249 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


251  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

254 
__exã∫_Æways_ölöe
 
__c⁄°
 *

255 
	`°ºchr
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


257  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

260 
	}
}

262 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

263 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

265 
__END_NAMESPACE_STD


267 #ifde‡
__USE_GNU


270 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


271 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

272 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

273 "C++" 
__c⁄°
 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

274 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

276 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

277 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

281 
__BEGIN_NAMESPACE_STD


284 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

288 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

289 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

291 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


294 *
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
)

295 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

296 
__c⁄°
 *
	`°Ωbrk
 (__c⁄° *
__s
, __c⁄° *
__ac˚±
)

297 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

299 #ifde‡
__OPTIMIZE__


300 
__exã∫_Æways_ölöe
 *

301 
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
Ë
__THROW


303  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

306 
__exã∫_Æways_ölöe
 
__c⁄°
 *

307 
	`°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
Ë
__THROW


309  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

312 
	}
}

314 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

318 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


321 *
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

322 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

323 
__c⁄°
 *
	`°r°r
 (__c⁄° *
__hay°ack
,

324 
__c⁄°
 *
__√edÀ
)

325 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__OPTIMIZE__


328 
__exã∫_Æways_ölöe
 *

329 
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
Ë
__THROW


331  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

334 
__exã∫_Æways_ölöe
 
__c⁄°
 *

335 
	`°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
Ë
__THROW


337  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

340 
	}
}

342 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

349 
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
__END_NAMESPACE_STD


354 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

355 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

358 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


359 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

360 **
__ª°ri˘
 
__ßve_±r
)

361 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

364 #ifde‡
__USE_GNU


366 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


367 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

368 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 "C++" 
__c⁄°
 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
,

370 
__c⁄°
 *
__√edÀ
)

371 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

374 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

378 #ifde‡
__USE_GNU


382 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

383 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

384 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

388 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

389 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

392 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

397 
__BEGIN_NAMESPACE_STD


399 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

400 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

401 
__END_NAMESPACE_STD


403 #ifdef 
__USE_XOPEN2K8


406 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

407 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

411 
__BEGIN_NAMESPACE_STD


413 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

414 
__END_NAMESPACE_STD


415 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


423 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


426 #ifde‡
__REDIRECT_NTH


427 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

428 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

429 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

431 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

433 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

438 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2));

443 #ifde‡
__USE_XOPEN2K8


445 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

451 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

453 #ifde‡
__USE_BSD


455 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

463 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

466 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


469 *
	`ödex
 (*
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

471 
__c⁄°
 *
	`ödex
 (__c⁄° *
__s
, 
__c
)

472 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

474 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


475 
__exã∫_Æways_ölöe
 *

476 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


478  
	`__buûtö_ödex
 (
__s
, 
__c
);

481 
__exã∫_Æways_ölöe
 
__c⁄°
 *

482 
	`ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


484  
	`__buûtö_ödex
 (
__s
, 
__c
);

487 
	}
}

489 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

490 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


497 *
	`rödex
 (*
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

499 
__c⁄°
 *
	`rödex
 (__c⁄° *
__s
, 
__c
)

500 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

502 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


503 
__exã∫_Æways_ölöe
 *

504 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


506  
	`__buûtö_rödex
 (
__s
, 
__c
);

509 
__exã∫_Æways_ölöe
 
__c⁄°
 *

510 
	`rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


512  
	`__buûtö_rödex
 (
__s
, 
__c
);

515 
	}
}

517 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

518 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

523 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifdef 
__USE_GNU


528 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 #ifde‡
__GNUC__


530 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

531 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

536 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

537 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

540 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

541 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

544 #ifdef 
__USE_GNU


547 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

548 
__loˇÀ_t
 
__loc
)

549 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

551 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

552 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

556 #ifdef 
__USE_BSD


559 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

560 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

561 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

564 #ifdef 
__USE_XOPEN2K8


566 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

569 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

571 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

572 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

576 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

577 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

578 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

579 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

580 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

581 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 #ifdef 
__USE_GNU


586 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

587 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

590 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

595 #i‚de‡
ba£«me


600 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


601 "C++" *
	$ba£«me
 (*
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

603 "C++" 
__c⁄°
 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
)

604 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

606 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

612 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

613 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

614 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


634 
	~<bôs/°rög.h
>

637 
	~<bôs/°rög2.h
>

640 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


642 
	~<bôs/°rög3.h
>

646 
__END_DECLS


	@/usr/include/time.h

23 #i‚def 
_TIME_H


25 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

26 ! 
deföed
 
	g__√ed_time•ec
)

27 
	#_TIME_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 #ifdef 
_TIME_H


36 
	#__√ed_size_t


	)

37 
	#__√ed_NULL


	)

38 
	~<°ddef.h
>

42 
	~<bôs/time.h
>

45 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


46 #i‚de‡
CLK_TCK


47 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

53 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

54 
	#__˛ock_t_deföed
 1

	)

56 
	~<bôs/ty≥s.h
>

58 
__BEGIN_NAMESPACE_STD


60 
__˛ock_t
 
	t˛ock_t
;

61 
	g__END_NAMESPACE_STD


62 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


63 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

67 #unde‡
__√ed_˛ock_t


69 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

70 
	#__time_t_deföed
 1

	)

72 
	~<bôs/ty≥s.h
>

74 
__BEGIN_NAMESPACE_STD


76 
__time_t
 
	ttime_t
;

77 
__END_NAMESPACE_STD


78 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


79 
	$__USING_NAMESPACE_STD
(
time_t
)

83 #unde‡
__√ed_time_t


85 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

86 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

87 
	#__˛ockid_t_deföed
 1

	)

89 
	~<bôs/ty≥s.h
>

92 
__˛ockid_t
 
	t˛ockid_t
;

95 #unde‡
__˛ockid_time_t


97 #i‡!
deföed
 
__timî_t_deföed
 && \

98 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

99 
	#__timî_t_deföed
 1

	)

101 
	~<bôs/ty≥s.h
>

104 
__timî_t
 
	ttimî_t
;

107 #unde‡
__√ed_timî_t


110 #i‡!
deföed
 
__time•ec_deföed
 && \

111 ((
deföed
 
_TIME_H
 && \

112 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

113 
deföed
 
__√ed_time•ec
)

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 
__c⁄°
 *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 
__c⁄°
 *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 
__BEGIN_NAMESPACE_STD


183 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

186 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

189 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

190 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

193 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

199 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

200 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

201 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

202 
__END_NAMESPACE_STD


204 #ifde‡
__USE_XOPEN


207 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

208 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

209 
__THROW
;

212 #ifde‡
__USE_XOPEN2K8


215 
	~<xloˇÀ.h
>

217 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

218 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

219 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

220 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 #ifde‡
__USE_GNU


224 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

225 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

230 
__BEGIN_NAMESPACE_STD


233 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

238 
__END_NAMESPACE_STD


240 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


243 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

244 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

248 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

249 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

252 
__BEGIN_NAMESPACE_STD


255 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

258 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

259 
__END_NAMESPACE_STD


261 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


266 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

267 *
__ª°ri˘
 
__buf
Ë
__THROW
;

270 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

271 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
__tz«me
[2];

277 
__daylight
;

278 
__timez⁄e
;

281 #ifdef 
__USE_POSIX


283 *
tz«me
[2];

287 
	$tz£t
 (Ë
__THROW
;

290 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


291 
daylight
;

292 
timez⁄e
;

295 #ifde‡
__USE_SVID


298 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

304 
	#__i¶óp
(
yór
) \

305 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

308 #ifde‡
__USE_MISC


313 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

316 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

319 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

323 #ifde‡
__USE_POSIX199309


328 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

329 
time•ec
 *
__ªmaöög
);

333 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

336 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

339 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

340 
__THROW
;

342 #ifde‡
__USE_XOPEN2K


347 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

348 
__c⁄°
 
time•ec
 *
__ªq
,

349 
time•ec
 *
__ªm
);

352 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

357 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

358 
sigevít
 *
__ª°ri˘
 
__evp
,

359 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

362 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

365 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

366 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

367 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

370 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

371 
__THROW
;

374 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

378 #ifde‡
__USE_XOPEN_EXTENDED


390 
gëd©e_îr
;

399 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

402 #ifde‡
__USE_GNU


413 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

414 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

417 
__END_DECLS


	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

59 #ifde‡
__USE_BSD


61 
	~<bôs/byãsw≠.h
>

63 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


64 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

65 
	#htﬁe16
(
x
Ë(x)

	)

66 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

67 
	#À16toh
(
x
Ë(x)

	)

69 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

70 
	#htﬁe32
(
x
Ë(x)

	)

71 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

72 
	#À32toh
(
x
Ë(x)

	)

74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

20 #i‚def 
_FEATURES_H


21 
	#_FEATURES_H
 1

	)

98 #unde‡
__USE_ISOC99


99 #unde‡
__USE_ISOC95


100 #unde‡
__USE_POSIX


101 #unde‡
__USE_POSIX2


102 #unde‡
__USE_POSIX199309


103 #unde‡
__USE_POSIX199506


104 #unde‡
__USE_XOPEN


105 #unde‡
__USE_XOPEN_EXTENDED


106 #unde‡
__USE_UNIX98


107 #unde‡
__USE_XOPEN2K


108 #unde‡
__USE_XOPEN2KXSI


109 #unde‡
__USE_XOPEN2K8


110 #unde‡
__USE_XOPEN2K8XSI


111 #unde‡
__USE_LARGEFILE


112 #unde‡
__USE_LARGEFILE64


113 #unde‡
__USE_FILE_OFFSET64


114 #unde‡
__USE_BSD


115 #unde‡
__USE_SVID


116 #unde‡
__USE_MISC


117 #unde‡
__USE_ATFILE


118 #unde‡
__USE_GNU


119 #unde‡
__USE_REENTRANT


120 #unde‡
__USE_FORTIFY_LEVEL


121 #unde‡
__FAVOR_BSD


122 #unde‡
__KERNEL_STRICT_NAMES


126 #i‚de‡
_LOOSE_KERNEL_NAMES


127 
	#__KERNEL_STRICT_NAMES


	)

131 
	#__USE_ANSI
 1

	)

140 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


141 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

142 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

144 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

149 #i‡
deföed
 
_BSD_SOURCE
 && \

150 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

151 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

152 
	#__FAVOR_BSD
 1

	)

156 #ifde‡
_GNU_SOURCE


157 #unde‡
_ISOC95_SOURCE


158 
	#_ISOC95_SOURCE
 1

	)

159 #unde‡
_ISOC99_SOURCE


160 
	#_ISOC99_SOURCE
 1

	)

161 #unde‡
_POSIX_SOURCE


162 
	#_POSIX_SOURCE
 1

	)

163 #unde‡
_POSIX_C_SOURCE


164 
	#_POSIX_C_SOURCE
 200809L

	)

165 #unde‡
_XOPEN_SOURCE


166 
	#_XOPEN_SOURCE
 700

	)

167 #unde‡
_XOPEN_SOURCE_EXTENDED


168 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

169 #unde‡
_LARGEFILE64_SOURCE


170 
	#_LARGEFILE64_SOURCE
 1

	)

171 #unde‡
_BSD_SOURCE


172 
	#_BSD_SOURCE
 1

	)

173 #unde‡
_SVID_SOURCE


174 
	#_SVID_SOURCE
 1

	)

175 #unde‡
_ATFILE_SOURCE


176 
	#_ATFILE_SOURCE
 1

	)

181 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

182 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

183 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

184 
	#_BSD_SOURCE
 1

	)

185 
	#_SVID_SOURCE
 1

	)

192 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

193 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

194 
	#__USE_ISOC99
 1

	)

198 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

199 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

200 
	#__USE_ISOC95
 1

	)

205 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

206 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

207 
	#_POSIX_SOURCE
 1

	)

208 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

209 
	#_POSIX_C_SOURCE
 2

	)

210 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

211 
	#_POSIX_C_SOURCE
 199506L

	)

212 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

213 
	#_POSIX_C_SOURCE
 200112L

	)

215 
	#_POSIX_C_SOURCE
 200809L

	)

217 
	#__USE_POSIX_IMPLICITLY
 1

	)

220 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


221 
	#__USE_POSIX
 1

	)

224 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


225 
	#__USE_POSIX2
 1

	)

228 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

229 
	#__USE_POSIX199309
 1

	)

232 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

233 
	#__USE_POSIX199506
 1

	)

236 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

237 
	#__USE_XOPEN2K
 1

	)

238 #unde‡
__USE_ISOC95


239 
	#__USE_ISOC95
 1

	)

240 #unde‡
__USE_ISOC99


241 
	#__USE_ISOC99
 1

	)

244 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

245 
	#__USE_XOPEN2K8
 1

	)

246 #unde‡
_ATFILE_SOURCE


247 
	#_ATFILE_SOURCE
 1

	)

250 #ifdef 
_XOPEN_SOURCE


251 
	#__USE_XOPEN
 1

	)

252 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

253 
	#__USE_XOPEN_EXTENDED
 1

	)

254 
	#__USE_UNIX98
 1

	)

255 #unde‡
_LARGEFILE_SOURCE


256 
	#_LARGEFILE_SOURCE
 1

	)

257 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

258 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

259 
	#__USE_XOPEN2K8
 1

	)

260 
	#__USE_XOPEN2K8XSI
 1

	)

262 
	#__USE_XOPEN2K
 1

	)

263 
	#__USE_XOPEN2KXSI
 1

	)

264 #unde‡
__USE_ISOC95


265 
	#__USE_ISOC95
 1

	)

266 #unde‡
__USE_ISOC99


267 
	#__USE_ISOC99
 1

	)

270 #ifde‡
_XOPEN_SOURCE_EXTENDED


271 
	#__USE_XOPEN_EXTENDED
 1

	)

276 #ifde‡
_LARGEFILE_SOURCE


277 
	#__USE_LARGEFILE
 1

	)

280 #ifde‡
_LARGEFILE64_SOURCE


281 
	#__USE_LARGEFILE64
 1

	)

284 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

285 
	#__USE_FILE_OFFSET64
 1

	)

288 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


289 
	#__USE_MISC
 1

	)

292 #ifdef 
_BSD_SOURCE


293 
	#__USE_BSD
 1

	)

296 #ifdef 
_SVID_SOURCE


297 
	#__USE_SVID
 1

	)

300 #ifdef 
_ATFILE_SOURCE


301 
	#__USE_ATFILE
 1

	)

304 #ifdef 
_GNU_SOURCE


305 
	#__USE_GNU
 1

	)

308 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


309 
	#__USE_REENTRANT
 1

	)

312 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

313 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

314 #i‡
_FORTIFY_SOURCE
 > 1

315 
	#__USE_FORTIFY_LEVEL
 2

	)

317 
	#__USE_FORTIFY_LEVEL
 1

	)

320 
	#__USE_FORTIFY_LEVEL
 0

	)

324 
	~<bôs/¥edefs.h
>

327 
	#__STDC_ISO_10646__
 200009L

	)

335 #unde‡
__GNU_LIBRARY__


336 
	#__GNU_LIBRARY__
 6

	)

340 
	#__GLIBC__
 2

	)

341 
	#__GLIBC_MINOR__
 15

	)

343 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

344 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

347 #i‡
deföed
 
__GNUC__
 \

348 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

349 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

350 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

351 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

355 #i‚de‡
__ASSEMBLER__


356 #i‚de‡
_SYS_CDEFS_H


357 
	~<sys/cdefs.h
>

362 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


363 
	#__USE_LARGEFILE
 1

	)

364 
	#__USE_LARGEFILE64
 1

	)

370 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

371 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

372 && 
deföed
 
	g__exã∫_ölöe


373 
	#__USE_EXTERN_INLINES
 1

	)

378 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

379 && (
deföed
 
	g_LIBC
 || !deföed 
	g__OPTIMIZE_SIZE__
Ë&& !deföed 
	g__NO_INLINE__
 \

380 && 
deföed
 
	g__exã∫_ölöe


381 
	#__USE_EXTERN_INLINES_IN_LIBC
 1

	)

389 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

156 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


160 #ifde‡
__REDIRECT


161 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

162 c⁄° *
__sh‹t›ts
),

163 
__posix_gë›t
);

165 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

166 c⁄° *
__sh‹t›ts
Ë
__THROW
;

167 
	#gë›t
 
__posix_gë›t


	)

171 
gë›t
 ();

174 #i‚de‡
__√ed_gë›t


175 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

176 c⁄° *
__sh‹t›ts
,

177 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

178 
__THROW
;

179 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

180 c⁄° *
__sh‹t›ts
,

181 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

182 
__THROW
;

186 #ifdef 
__˝lu•lus


191 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

145 
	#_IO_FLAGS2_USER_WBUF
 8

	)

146 #ifde‡
_LIBC


147 
	#_IO_FLAGS2_SCANF_STD
 16

	)

148 
	#_IO_FLAGS2_NOCLOSE
 32

	)

149 
	#_IO_FLAGS2_CLOEXEC
 64

	)

153 
	#_IO_SKIPWS
 01

	)

154 
	#_IO_LEFT
 02

	)

155 
	#_IO_RIGHT
 04

	)

156 
	#_IO_INTERNAL
 010

	)

157 
	#_IO_DEC
 020

	)

158 
	#_IO_OCT
 040

	)

159 
	#_IO_HEX
 0100

	)

160 
	#_IO_SHOWBASE
 0200

	)

161 
	#_IO_SHOWPOINT
 0400

	)

162 
	#_IO_UPPERCASE
 01000

	)

163 
	#_IO_SHOWPOS
 02000

	)

164 
	#_IO_SCIENTIFIC
 04000

	)

165 
	#_IO_FIXED
 010000

	)

166 
	#_IO_UNITBUF
 020000

	)

167 
	#_IO_STDIO
 040000

	)

168 
	#_IO_DONT_CLOSE
 0100000

	)

169 
	#_IO_BOOLALPHA
 0200000

	)

172 
_IO_jump_t
; 
	g_IO_FILE
;

175 #ifde‡
_IO_MTSAFE_IO


176 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

177 
	~<bôs/°dio-lock.h
>

182 
	t_IO_lock_t
;

188 
	s_IO_m¨kî
 {

189 
_IO_m¨kî
 *
	m_√xt
;

190 
_IO_FILE
 *
	m_sbuf
;

194 
	m_pos
;

196 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

197 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

198 
	mpublic
:

199 
°ªamm¨kî
(
°ªambuf
 *
sb
);

200 ~
°ªamm¨kî
();

201 
ßvög
(Ë{  
	m_•os
 == -2; }

202 
dñè
(
°ªamm¨kî
&);

203 
dñè
();

208 
	e__codecvt_ªsu…


210 
	m__codecvt_ok
,

211 
	m__codecvt_∑πül
,

212 
	m__codecvt_îr‹
,

213 
	m__codecvt_noc⁄v


216 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


219 
	s_IO_codecvt


221 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

222 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

223 
	m__mb°©e_t
 *,

224 c⁄° 
	mwch¨_t
 *,

225 c⁄° 
	mwch¨_t
 *,

226 c⁄° 
	mwch¨_t
 **, *,

228 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

229 
	m__mb°©e_t
 *, *,

231 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

232 
	m__mb°©e_t
 *,

234 c⁄° **, 
	mwch¨_t
 *,

235 
	mwch¨_t
 *, wchar_t **);

236 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

237 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

238 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

239 c⁄° *, c⁄° *, 
	m_IO_size_t
);

240 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

242 
_IO_ic⁄v_t
 
	m__cd_ö
;

243 
_IO_ic⁄v_t
 
	m__cd_out
;

247 
	s_IO_wide_d©a


249 
wch¨_t
 *
	m_IO_ªad_±r
;

250 
wch¨_t
 *
	m_IO_ªad_íd
;

251 
wch¨_t
 *
	m_IO_ªad_ba£
;

252 
wch¨_t
 *
	m_IO_wrôe_ba£
;

253 
wch¨_t
 *
	m_IO_wrôe_±r
;

254 
wch¨_t
 *
	m_IO_wrôe_íd
;

255 
wch¨_t
 *
	m_IO_buf_ba£
;

256 
wch¨_t
 *
	m_IO_buf_íd
;

258 
wch¨_t
 *
	m_IO_ßve_ba£
;

259 
wch¨_t
 *
	m_IO_backup_ba£
;

261 
wch¨_t
 *
	m_IO_ßve_íd
;

263 
__mb°©e_t
 
	m_IO_°©e
;

264 
__mb°©e_t
 
	m_IO_œ°_°©e
;

265 
_IO_codecvt
 
	m_codecvt
;

267 
wch¨_t
 
	m_sh‹tbuf
[1];

269 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

273 
	s_IO_FILE
 {

274 
	m_Êags
;

275 
	#_IO_fûe_Êags
 
_Êags


	)

279 * 
	m_IO_ªad_±r
;

280 * 
	m_IO_ªad_íd
;

281 * 
	m_IO_ªad_ba£
;

282 * 
	m_IO_wrôe_ba£
;

283 * 
	m_IO_wrôe_±r
;

284 * 
	m_IO_wrôe_íd
;

285 * 
	m_IO_buf_ba£
;

286 * 
	m_IO_buf_íd
;

288 *
	m_IO_ßve_ba£
;

289 *
	m_IO_backup_ba£
;

290 *
	m_IO_ßve_íd
;

292 
_IO_m¨kî
 *
	m_m¨kîs
;

294 
_IO_FILE
 *
	m_chaö
;

296 
	m_fûío
;

298 
	m_blksize
;

300 
	m_Êags2
;

302 
_IO_off_t
 
	m_ﬁd_off£t
;

304 
	#__HAVE_COLUMN


	)

306 
	m_cur_cﬁumn
;

307 sig√d 
	m_vèbÀ_off£t
;

308 
	m_sh‹tbuf
[1];

312 
_IO_lock_t
 *
	m_lock
;

313 #ifde‡
_IO_USE_OLD_IO_FILE


316 
	s_IO_FILE_com∂ëe


318 
_IO_FILE
 
	m_fûe
;

320 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

321 
_IO_off64_t
 
	m_off£t
;

322 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


324 
_IO_codecvt
 *
	m_codecvt
;

325 
_IO_wide_d©a
 *
	m_wide_d©a
;

326 
_IO_FILE
 *
	m_‰ìªs_li°
;

327 *
	m_‰ìªs_buf
;

328 
size_t
 
	m_‰ìªs_size
;

330 *
	m__∑d1
;

331 *
	m__∑d2
;

332 *
	m__∑d3
;

333 *
	m__∑d4
;

334 
size_t
 
	m__∑d5
;

336 
	m_mode
;

338 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

342 #i‚de‡
__˝lu•lus


343 
_IO_FILE
 
	t_IO_FILE
;

346 
	g_IO_FILE_∂us
;

348 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

349 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

350 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

351 #i‚de‡
_LIBC


352 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

353 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

354 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

356 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

357 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

358 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

366 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

374 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

375 
	tsize_t
 
	t__n
);

383 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

386 
	t__io_˛o£_‚
 (*
	t__cookõ
);

389 #ifde‡
_GNU_SOURCE


391 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

392 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

393 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

394 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

399 
__io_ªad_‚
 *
	mªad
;

400 
__io_wrôe_‚
 *
	mwrôe
;

401 
__io_£ek_‚
 *
	m£ek
;

402 
__io_˛o£_‚
 *
	m˛o£
;

403 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

404 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

406 
	g_IO_cookõ_fûe
;

409 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

410 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

414 #ifde‡
__˝lu•lus


418 
__undîÊow
 (
_IO_FILE
 *);

419 
__uÊow
 (
_IO_FILE
 *);

420 
__ovîÊow
 (
_IO_FILE
 *, );

421 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


422 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

423 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

424 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

427 #i‡ 
__GNUC__
 >= 3

428 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

430 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

433 
	#_IO_gëc_u∆ocked
(
_Â
) \

434 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

435 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

436 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

437 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

438 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

439 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

440 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

441 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

442 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

443 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

445 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


446 
	#_IO_gëwc_u∆ocked
(
_Â
) \

447 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

448 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

449 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

450 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

451 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

452 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

453 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

454 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

455 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

456 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

459 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

460 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

462 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

463 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

464 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

465 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

467 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

470 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

471 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

473 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

474 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

475 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

477 #ifde‡
_IO_MTSAFE_IO


478 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

479 
	#_IO_Êockfûe
(
_Â
) \

480 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

481 
	#_IO_fu∆ockfûe
(
_Â
) \

482 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

484 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

485 
	#_IO_Êockfûe
(
_Â
Ë

	)

486 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

487 
	#_IO_·rylockfûe
(
_Â
Ë

	)

488 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

489 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

492 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

493 
_IO_va_li°
, *
__ª°ri˘
);

494 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

495 
_IO_va_li°
);

496 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

497 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

499 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

500 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

502 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

504 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


505 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

506 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

507 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

508 #i‡
__GNUC__
 >= 2

511 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


512 
	~<shlib-com∑t.h
>

513 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

514 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

515 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

516 c⁄° 
_IO_°dö_u£d
;

517 
wók_exã∫
 (
_IO_°dö_u£d
);

520 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


521 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

525 
	#_IO_fwide
(
__Â
, 
__mode
) \

526 ({ 
__ªsu…
 = (
__mode
); \

527 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

529 i‡((
__Â
)->
_mode
 == 0) \

531 (
__Â
)->
_mode
 = -1; \

532 
__ªsu…
 = (
__Â
)->
_mode
; \

534 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

535 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

537 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

538 
__ªsu…
; })

	)

541 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

542 
_IO_va_li°
, *
__ª°ri˘
);

543 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

544 
_IO_va_li°
);

545 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

546 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

549 #ifde‡
__LDBL_COMPAT


550 
	~<bôs/libio-ldbl.h
>

553 #ifde‡
__˝lu•lus


	@/usr/include/sched.h

21 #i‚def 
_SCHED_H


22 
	#_SCHED_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 
	#__√ed_size_t


	)

30 
	~<°ddef.h
>

32 
	#__√ed_time_t


	)

33 
	#__√ed_time•ec


	)

34 
	~<time.h
>

36 #i‚de‡
__pid_t_deföed


37 
__pid_t
 
	tpid_t
;

38 
	#__pid_t_deföed


	)

43 
	~<bôs/sched.h
>

45 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

48 
__BEGIN_DECLS


51 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

52 
__THROW
;

55 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

58 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

59 
__c⁄°
 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

62 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

65 
	$sched_yõld
 (Ë
__THROW
;

68 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

71 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

74 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

77 #ifde‡
__USE_GNU


79 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

80 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

81 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

82 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

83 
˝u£ç
)

	)

84 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

85 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

87 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

88 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

89 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

90 
˝u£ç
)

	)

91 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

92 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

94 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

95 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

96 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

97 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

99 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

101 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

103 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

104 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

105 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

106 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

107 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

108 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

109 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

110 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

112 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

113 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

114 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

118 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

119 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

122 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

123 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

126 
__END_DECLS


	@/usr/include/stdint.h

23 #i‚de‡
_STDINT_H


24 
	#_STDINT_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/wch¨.h
>

28 
	~<bôs/w‹dsize.h
>

35 #i‚de‡
__öt8_t_deföed


36 
	#__öt8_t_deföed


	)

37 sig√d 
	töt8_t
;

38 
	töt16_t
;

39 
	töt32_t
;

40 #i‡
__WORDSIZE
 == 64

41 
	töt64_t
;

43 
__exãnsi⁄__


44 
	töt64_t
;

49 
	tuöt8_t
;

50 
	tuöt16_t
;

51 #i‚de‡
__uöt32_t_deföed


52 
	tuöt32_t
;

53 
	#__uöt32_t_deföed


	)

55 #i‡
__WORDSIZE
 == 64

56 
	tuöt64_t
;

58 
__exãnsi⁄__


59 
	tuöt64_t
;

66 sig√d 
	töt_Àa°8_t
;

67 
	töt_Àa°16_t
;

68 
	töt_Àa°32_t
;

69 #i‡
__WORDSIZE
 == 64

70 
	töt_Àa°64_t
;

72 
__exãnsi⁄__


73 
	töt_Àa°64_t
;

77 
	tuöt_Àa°8_t
;

78 
	tuöt_Àa°16_t
;

79 
	tuöt_Àa°32_t
;

80 #i‡
__WORDSIZE
 == 64

81 
	tuöt_Àa°64_t
;

83 
__exãnsi⁄__


84 
	tuöt_Àa°64_t
;

91 sig√d 
	töt_Á°8_t
;

92 #i‡
__WORDSIZE
 == 64

93 
	töt_Á°16_t
;

94 
	töt_Á°32_t
;

95 
	töt_Á°64_t
;

97 
	töt_Á°16_t
;

98 
	töt_Á°32_t
;

99 
__exãnsi⁄__


100 
	töt_Á°64_t
;

104 
	tuöt_Á°8_t
;

105 #i‡
__WORDSIZE
 == 64

106 
	tuöt_Á°16_t
;

107 
	tuöt_Á°32_t
;

108 
	tuöt_Á°64_t
;

110 
	tuöt_Á°16_t
;

111 
	tuöt_Á°32_t
;

112 
__exãnsi⁄__


113 
	tuöt_Á°64_t
;

118 #i‡
__WORDSIZE
 == 64

119 #i‚de‡
__öçå_t_deföed


120 
	töçå_t
;

121 
	#__öçå_t_deföed


	)

123 
	tuöçå_t
;

125 #i‚de‡
__öçå_t_deföed


126 
	töçå_t
;

127 
	#__öçå_t_deföed


	)

129 
	tuöçå_t
;

134 #i‡
__WORDSIZE
 == 64

135 
	tötmax_t
;

136 
	tuötmax_t
;

138 
__exãnsi⁄__


139 
	tötmax_t
;

140 
__exãnsi⁄__


141 
	tuötmax_t
;

147 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_LIMIT_MACROS


149 #i‡
__WORDSIZE
 == 64

150 
	#__INT64_C
(
c
Ë¯## 
L


	)

151 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

153 
	#__INT64_C
(
c
Ë¯## 
LL


	)

154 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

160 
	#INT8_MIN
 (-128)

	)

161 
	#INT16_MIN
 (-32767-1)

	)

162 
	#INT32_MIN
 (-2147483647-1)

	)

163 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

165 
	#INT8_MAX
 (127)

	)

166 
	#INT16_MAX
 (32767)

	)

167 
	#INT32_MAX
 (2147483647)

	)

168 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

171 
	#UINT8_MAX
 (255)

	)

172 
	#UINT16_MAX
 (65535)

	)

173 
	#UINT32_MAX
 (4294967295U)

	)

174 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

178 
	#INT_LEAST8_MIN
 (-128)

	)

179 
	#INT_LEAST16_MIN
 (-32767-1)

	)

180 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

181 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

183 
	#INT_LEAST8_MAX
 (127)

	)

184 
	#INT_LEAST16_MAX
 (32767)

	)

185 
	#INT_LEAST32_MAX
 (2147483647)

	)

186 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

189 
	#UINT_LEAST8_MAX
 (255)

	)

190 
	#UINT_LEAST16_MAX
 (65535)

	)

191 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

192 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

196 
	#INT_FAST8_MIN
 (-128)

	)

197 #i‡
__WORDSIZE
 == 64

198 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

199 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

201 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

202 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

204 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

206 
	#INT_FAST8_MAX
 (127)

	)

207 #i‡
__WORDSIZE
 == 64

208 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

209 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

211 
	#INT_FAST16_MAX
 (2147483647)

	)

212 
	#INT_FAST32_MAX
 (2147483647)

	)

214 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

217 
	#UINT_FAST8_MAX
 (255)

	)

218 #i‡
__WORDSIZE
 == 64

219 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

220 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

222 
	#UINT_FAST16_MAX
 (4294967295U)

	)

223 
	#UINT_FAST32_MAX
 (4294967295U)

	)

225 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

229 #i‡
__WORDSIZE
 == 64

230 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

231 
	#INTPTR_MAX
 (9223372036854775807L)

	)

232 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

234 
	#INTPTR_MIN
 (-2147483647-1)

	)

235 
	#INTPTR_MAX
 (2147483647)

	)

236 
	#UINTPTR_MAX
 (4294967295U)

	)

241 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

243 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

246 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

252 #i‡
__WORDSIZE
 == 64

253 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

254 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

256 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

257 
	#PTRDIFF_MAX
 (2147483647)

	)

261 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

262 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

265 #i‡
__WORDSIZE
 == 64

266 
	#SIZE_MAX
 (18446744073709551615UL)

	)

268 
	#SIZE_MAX
 (4294967295U)

	)

272 #i‚de‡
WCHAR_MIN


274 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

275 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

279 
	#WINT_MIN
 (0u)

	)

280 
	#WINT_MAX
 (4294967295u)

	)

287 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_CONSTANT_MACROS


290 
	#INT8_C
(
c
Ë
	)
c

291 
	#INT16_C
(
c
Ë
	)
c

292 
	#INT32_C
(
c
Ë
	)
c

293 #i‡
__WORDSIZE
 == 64

294 
	#INT64_C
(
c
Ë¯## 
L


	)

296 
	#INT64_C
(
c
Ë¯## 
LL


	)

300 
	#UINT8_C
(
c
Ë
	)
c

301 
	#UINT16_C
(
c
Ë
	)
c

302 
	#UINT32_C
(
c
Ë¯## 
U


	)

303 #i‡
__WORDSIZE
 == 64

304 
	#UINT64_C
(
c
Ë¯## 
UL


	)

306 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

310 #i‡
__WORDSIZE
 == 64

311 
	#INTMAX_C
(
c
Ë¯## 
L


	)

312 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

314 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

315 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

43 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

21 
	#_G_size_t
 
size_t


	)

24 
__off_t
 
	m__pos
;

25 
__mb°©e_t
 
	m__°©e
;

26 } 
	t_G_Âos_t
;

29 
__off64_t
 
	m__pos
;

30 
__mb°©e_t
 
	m__°©e
;

31 } 
	t_G_Âos64_t
;

32 
	#_G_ssize_t
 
__ssize_t


	)

33 
	#_G_off_t
 
__off_t


	)

34 
	#_G_off64_t
 
__off64_t


	)

35 
	#_G_pid_t
 
__pid_t


	)

36 
	#_G_uid_t
 
__uid_t


	)

37 
	#_G_wch¨_t
 
wch¨_t


	)

38 
	#_G_wöt_t
 
wöt_t


	)

39 
	#_G_°©64
 
°©64


	)

40 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


41 
	~<gc⁄v.h
>

44 
__gc⁄v_öfo
 
	m__cd
;

47 
__gc⁄v_öfo
 
	m__cd
;

48 
__gc⁄v_°ï_d©a
 
	m__d©a
;

49 } 
	m__comböed
;

50 } 
	t_G_ic⁄v_t
;

53 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

54 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

55 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

58 
	#_G_HAVE_BOOL
 1

	)

62 
	#_G_HAVE_ATEXIT
 1

	)

63 
	#_G_HAVE_SYS_CDEFS
 1

	)

64 
	#_G_HAVE_SYS_WAIT
 1

	)

65 
	#_G_NEED_STDARG_H
 1

	)

66 
	#_G_va_li°
 
__gnuc_va_li°


	)

68 
	#_G_HAVE_PRINTF_FP
 1

	)

69 
	#_G_HAVE_MMAP
 1

	)

70 
	#_G_HAVE_MREMAP
 1

	)

71 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

72 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

73 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

75 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

77 
	#_G_OPEN64
 
__›í64


	)

78 
	#_G_LSEEK64
 
__l£ek64


	)

79 
	#_G_MMAP64
 
__mm≠64


	)

80 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

83 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

85 
	#_G_BUFSIZ
 8192

	)

88 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

89 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

90 
	#_G_USING_THUNKS
 1

	)

91 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

92 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

95 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


96 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

98 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

89 #i‚de‡
__˝lu•lus


90 
	#__is˘y≥
(
c
, 
ty≥
) \

91 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

92 #ñi‡
deföed
 
__USE_EXTERN_INLINES


93 
	#__is˘y≥_f
(
ty≥
) \

94 
__exã∫_ölöe
 \

95 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

97  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

98 
	}

	)
}

101 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

102 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

104 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

106 
__BEGIN_NAMESPACE_STD


112 
__ex˘y≥
 (
iß um
);

113 
__ex˘y≥
 (
ißÕha
);

114 
__ex˘y≥
 (
is˙ål
);

115 
__ex˘y≥
 (
isdigô
);

116 
__ex˘y≥
 (
i¶owî
);

117 
__ex˘y≥
 (
isgøph
);

118 
__ex˘y≥
 (
i•röt
);

119 
__ex˘y≥
 (
i•un˘
);

120 
__ex˘y≥
 (
is•a˚
);

121 
__ex˘y≥
 (
isuµî
);

122 
__ex˘y≥
 (
isxdigô
);

126 
	$tﬁowî
 (
__c
Ë
__THROW
;

129 
	$touµî
 (
__c
Ë
__THROW
;

131 
__END_NAMESPACE_STD


135 #ifdef 
__USE_ISOC99


136 
__BEGIN_NAMESPACE_C99


138 
	`__ex˘y≥
 (
isbœnk
);

140 
__END_NAMESPACE_C99


143 #ifde‡
__USE_GNU


145 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

148 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


152 
	$ißscii
 (
__c
Ë
__THROW
;

156 
	$tﬂscii
 (
__c
Ë
__THROW
;

160 
	`__ex˘y≥
 (
_touµî
);

161 
	`__ex˘y≥
 (
_tﬁowî
);

165 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

166 (
__exãnsi⁄__
 \

167 ({ 
__ªs
; \

168 i‡( (
c
) > 1) \

170 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

172 
__c
 = (
c
); \

173 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

176 
__ªs
 = 
f
 
¨gs
; \

179 
__ªs
 = (
a
)[(Ë(
c
)]; \

180 
__ªs
; 
	}
}))

	)

182 #i‡!
deföed
 
__NO_CTYPE


183 #ifde‡
__is˘y≥_f


184 
	$__is˘y≥_f
 (
Ænum
)

185 
	$__is˘y≥_f
 (
Æpha
)

186 
	$__is˘y≥_f
 (
˙ål
)

187 
	$__is˘y≥_f
 (
digô
)

188 
	$__is˘y≥_f
 (
lowî
)

189 
	$__is˘y≥_f
 (
gøph
)

190 
	$__is˘y≥_f
 (
¥öt
)

191 
	$__is˘y≥_f
 (
pun˘
)

192 
	$__is˘y≥_f
 (
•a˚
)

193 
	$__is˘y≥_f
 (
uµî
)

194 
	$__is˘y≥_f
 (
xdigô
)

195 #ifde‡
__USE_ISOC99


196 
	$__is˘y≥_f
 (
bœnk
)

198 #ñi‡
deföed
 
__is˘y≥


199 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

200 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

201 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

202 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

203 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

204 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

205 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

206 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

207 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

208 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

209 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

210 #ifde‡
__USE_ISOC99


211 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

215 #ifde‡
__USE_EXTERN_INLINES


216 
__exã∫_ölöe
 

217 
	`__NTH
 (
	$tﬁowî
 (
__c
))

219  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

220 
	}
}

222 
__exã∫_ölöe
 

223 
__NTH
 (
	$touµî
 (
__c
))

225  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

226 
	}
}

229 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


230 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

231 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

234 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


235 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

236 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

238 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

239 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

245 #ifde‡
__USE_XOPEN2K8


259 
	~<xloˇÀ.h
>

263 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

264 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

266 
	#__ex˘y≥_l
(
«me
) \

267 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

273 
__ex˘y≥_l
 (
iß um_l
);

274 
__ex˘y≥_l
 (
ißÕha_l
);

275 
__ex˘y≥_l
 (
is˙ål_l
);

276 
__ex˘y≥_l
 (
isdigô_l
);

277 
__ex˘y≥_l
 (
i¶owî_l
);

278 
__ex˘y≥_l
 (
isgøph_l
);

279 
__ex˘y≥_l
 (
i•röt_l
);

280 
__ex˘y≥_l
 (
i•un˘_l
);

281 
__ex˘y≥_l
 (
is•a˚_l
);

282 
__ex˘y≥_l
 (
isuµî_l
);

283 
__ex˘y≥_l
 (
isxdigô_l
);

285 
__ex˘y≥_l
 (
isbœnk_l
);

289 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

290 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

293 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

296 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


297 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

299 
	#__touµî_l
(
c
, 
loˇÀ
) \

300 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

301 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

302 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

306 #i‚de‡
__NO_CTYPE


307 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

308 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

309 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

310 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

311 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

312 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

313 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

314 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

315 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

316 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

317 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

319 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

321 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


322 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

323 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

326 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

327 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

328 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

329 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

330 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

331 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

332 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

333 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

334 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

335 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

336 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

338 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

340 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


341 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

342 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

349 
__END_DECLS


	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	#__√ed_wöt_t


	)

29 
	~<wch¨.h
>

30 
	#__√ed_size_t


	)

31 
	#__√ed_wch¨_t


	)

32 
	~<°ddef.h
>

35 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

40 
	m__GCONV_OK
 = 0,

41 
	m__GCONV_NOCONV
,

42 
	m__GCONV_NODB
,

43 
	m__GCONV_NOMEM
,

45 
	m__GCONV_EMPTY_INPUT
,

46 
	m__GCONV_FULL_OUTPUT
,

47 
	m__GCONV_ILLEGAL_INPUT
,

48 
	m__GCONV_INCOMPLETE_INPUT
,

50 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

51 
	m__GCONV_INTERNAL_ERROR


58 
	m__GCONV_IS_LAST
 = 0x0001,

59 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

60 
	m__GCONV_SWAP
 = 0x0004

65 
	g__gc⁄v_°ï
;

66 
	g__gc⁄v_°ï_d©a
;

67 
	g__gc⁄v_lﬂded_obje˘
;

68 
	g__gc⁄v_å™s_d©a
;

72 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 
	t__c⁄°
 **, __const *,

74 **, 
	tsize_t
 *, , );

77 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

80 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

81 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

85 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

86 
	t__gc⁄v_°ï_d©a
 *, *,

87 
	t__c⁄°
 *,

88 
	t__c⁄°
 **,

89 
	t__c⁄°
 *, **,

90 
	tsize_t
 *);

93 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

94 
	t__c⁄°
 *,

98 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

99 
	tsize_t
 *);

102 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

103 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

105 
	s__gc⁄v_å™s_d©a


108 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

109 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

110 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

111 *
__d©a
;

112 
__gc⁄v_å™s_d©a
 *
__√xt
;

117 
	s__gc⁄v_°ï


119 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

120 
__c⁄°
 *
__mod«me
;

122 
__cou¡î
;

124 *
__‰om_«me
;

125 *
__to_«me
;

127 
__gc⁄v_f˘
 
__f˘
;

128 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

129 
__gc⁄v_öô_f˘
 
__öô_f˘
;

130 
__gc⁄v_íd_f˘
 
__íd_f˘
;

134 
__mö_√eded_‰om
;

135 
__max_√eded_‰om
;

136 
__mö_√eded_to
;

137 
__max_√eded_to
;

140 
__°©eful
;

142 *
__d©a
;

147 
	s__gc⁄v_°ï_d©a


149 *
__outbuf
;

150 *
__outbu„nd
;

154 
__Êags
;

158 
__övoˇti⁄_cou¡î
;

162 
__öã∫Æ_u£
;

164 
__mb°©e_t
 *
__°©ï
;

165 
__mb°©e_t
 
__°©e
;

169 
__gc⁄v_å™s_d©a
 *
__å™s
;

174 
	s__gc⁄v_öfo


176 
size_t
 
__n°ïs
;

177 
__gc⁄v_°ï
 *
__°ïs
;

178 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

179 } *
	t__gc⁄v_t
;

	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

42 
	~<bôs/wch¨.h
>

45 
	#__√ed_size_t


	)

46 
	#__√ed_wch¨_t


	)

47 
	#__√ed_NULL


	)

49 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


50 #unde‡
__√ed_wöt_t


51 
	#__√ed_wöt_t


	)

52 
	~<°ddef.h
>

56 #i‚de‡
_WINT_T


61 
	#_WINT_T


	)

62 
	twöt_t
;

66 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

67 && 
deföed
 
__WINT_TYPE__


68 
__BEGIN_NAMESPACE_STD


69 
__WINT_TYPE__
 
	twöt_t
;

70 
	g__END_NAMESPACE_STD


75 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

76 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

80 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
__mb°©e_t_deföed


81 
	#__mb°©e_t_deföed
 1

	)

85 
	m__cou¡
;

88 #ifde‡
__WINT_TYPE__


89 
__WINT_TYPE__
 
	m__wch
;

91 
wöt_t
 
	m__wch
;

93 
	m__wchb
[4];

94 } 
	m__vÆue
;

95 } 
	t__mb°©e_t
;

97 #unde‡
__√ed_mb°©e_t


102 #ifde‡
_WCHAR_H


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 #ifde‡
__USE_GNU


109 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

112 #i‚de‡
WCHAR_MIN


114 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

115 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

118 #i‚de‡
WEOF


119 
	#WEOF
 (0xffffffffu)

	)

124 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


125 
	~<w˘y≥.h
>

129 
__BEGIN_DECLS


131 
__BEGIN_NAMESPACE_STD


134 
tm
;

135 
__END_NAMESPACE_STD


139 
	$__USING_NAMESPACE_STD
(
tm
)

142 
__BEGIN_NAMESPACE_STD


144 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

147 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

149 
__THROW
;

152 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

155 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

157 
__THROW
;

160 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

161 
__THROW
 
__©åibuã_puª__
;

163 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

164 
__THROW
 
__©åibuã_puª__
;

165 
__END_NAMESPACE_STD


167 #ifde‡
__USE_XOPEN2K8


169 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

172 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

173 
size_t
 
__n
Ë
__THROW
;

177 
	~<xloˇÀ.h
>

179 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

180 
__loˇÀ_t
 
__loc
Ë
__THROW
;

182 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

183 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

186 
__BEGIN_NAMESPACE_STD


189 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

193 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

194 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

195 
__END_NAMESPACE_STD


197 #ifde‡
__USE_XOPEN2K8


203 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

204 
__loˇÀ_t
 
__loc
Ë
__THROW
;

209 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

210 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

213 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

216 
__BEGIN_NAMESPACE_STD


218 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


219 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

220 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

221 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

222 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
__©åibuã_puª__
;

228 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


229 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

230 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

231 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

232 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
__©åibuã_puª__
;

237 
__END_NAMESPACE_STD


239 #ifde‡
__USE_GNU


242 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

243 
__THROW
 
__©åibuã_puª__
;

246 
__BEGIN_NAMESPACE_STD


249 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

250 
__THROW
 
__©åibuã_puª__
;

253 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

254 
__THROW
 
__©åibuã_puª__
;

256 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


257 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, 
__c⁄°
 wch¨_à*
__ac˚±
)

258 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

259 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
,

260 
__c⁄°
 
wch¨_t
 *
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

263 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
__©åibuã_puª__
;

267 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


268 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

269 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

270 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

271 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

274 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
__©åibuã_puª__
;

279 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

280 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

281 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

284 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

285 
__END_NAMESPACE_STD


287 #ifde‡
__USE_XOPEN


289 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


290 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

291 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

292 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

293 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

296 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
__©åibuã_puª__
;

301 #ifde‡
__USE_XOPEN2K8


303 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

304 
__THROW
 
__©åibuã_puª__
;

308 
__BEGIN_NAMESPACE_STD


310 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


311 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

312 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

313 "C++" 
__c⁄°
 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
,

314 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

317 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
__©åibuã_puª__
;

322 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

323 
__THROW
 
__©åibuã_puª__
;

326 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

327 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

331 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

332 
__THROW
;

335 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

336 
__END_NAMESPACE_STD


338 #ifde‡
__USE_GNU


341 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

342 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

343 
__THROW
;

347 
__BEGIN_NAMESPACE_STD


350 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

354 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

358 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

362 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

363 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

364 
mb°©e_t
 *
__p
Ë
__THROW
;

367 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

368 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

371 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

372 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

373 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

374 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

375 
__END_NAMESPACE_STD


377 #ifde‡
__USE_EXTERN_INLINES


383 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

384 
__exã∫_ölöe
 
wöt_t


385 
	`__NTH
 (
	$btowc
 (
__c
))

386 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

387 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

389 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

390 
__exã∫_ölöe
 

391 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

392 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

393 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

395 
__exã∫_ölöe
 
size_t


396 
__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

397 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

398 {  (
__ps
 !
NULL


399 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

402 
__BEGIN_NAMESPACE_STD


405 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

406 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

407 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

411 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

412 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

413 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

414 
__END_NAMESPACE_STD


417 #ifdef 
__USE_XOPEN2K8


420 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

421 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

422 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

426 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

427 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

428 
size_t
 
__nwc
, size_à
__Àn
,

429 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

434 #ifde‡
__USE_XOPEN


436 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

440 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

444 
__BEGIN_NAMESPACE_STD


447 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

448 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

449 
__END_NAMESPACE_STD


451 #ifde‡
__USE_ISOC99


452 
__BEGIN_NAMESPACE_C99


454 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

455 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

456 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

457 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

458 
__END_NAMESPACE_C99


462 
__BEGIN_NAMESPACE_STD


465 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

466 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

470 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

471 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

472 
__THROW
;

473 
__END_NAMESPACE_STD


475 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

476 
__BEGIN_NAMESPACE_C99


479 
__exãnsi⁄__


480 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

481 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

482 
__THROW
;

486 
__exãnsi⁄__


487 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

488 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

489 
__ba£
Ë
__THROW
;

490 
__END_NAMESPACE_C99


493 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


496 
__exãnsi⁄__


497 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

498 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

499 
__THROW
;

503 
__exãnsi⁄__


504 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

505 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

506 
__ba£
Ë
__THROW
;

509 #ifde‡
__USE_GNU


523 
	~<xloˇÀ.h
>

527 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

528 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

529 
__loˇÀ_t
 
__loc
Ë
__THROW
;

531 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

532 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

533 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

535 
__exãnsi⁄__


536 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

537 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

538 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

540 
__exãnsi⁄__


541 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

542 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

543 
__ba£
, 
__loˇÀ_t
 
__loc
)

544 
__THROW
;

546 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

547 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

548 
__THROW
;

550 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

551 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

552 
__THROW
;

554 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

555 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

556 
__loˇÀ_t
 
__loc
Ë
__THROW
;

560 #ifde‡
__USE_XOPEN2K8


563 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

564 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

568 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

569 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

570 
__THROW
;

577 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

580 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


581 
__BEGIN_NAMESPACE_STD


584 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

591 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

592 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

598 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

601 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

602 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

603 
__THROW
 ;

609 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

610 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

611 
__gnuc_va_li°
 
__¨g
)

617 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

618 
__gnuc_va_li°
 
__¨g
)

622 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

623 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

624 
__gnuc_va_li°
 
__¨g
)

625 
__THROW
 ;

632 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

633 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

639 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

642 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

643 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

644 
__THROW
 ;

646 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

647 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

648 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

649 #ifde‡
__REDIRECT


653 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

654 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

655 
__isoc99_fwsˇnf
)

657 
	`__REDIRECT
 (
wsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

658 
__isoc99_wsˇnf
)

660 
	`__REDIRECT_NTH
 (
swsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

661 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

662 ...), 
__isoc99_swsˇnf
)

665 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

666 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

667 
	`__isoc99_wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

668 
	$__isoc99_swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

669 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

670 
__THROW
;

671 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

672 
	#wsˇnf
 
__isoc99_wsˇnf


	)

673 
	#swsˇnf
 
__isoc99_swsˇnf


	)

677 
__END_NAMESPACE_STD


680 #ifde‡
__USE_ISOC99


681 
__BEGIN_NAMESPACE_C99


686 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

687 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

688 
__gnuc_va_li°
 
__¨g
)

694 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

695 
__gnuc_va_li°
 
__¨g
)

698 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

699 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

700 
__gnuc_va_li°
 
__¨g
)

701 
__THROW
 ;

703 #i‡!
deföed
 
__USE_GNU
 \

704 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

705 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

706 #ifde‡
__REDIRECT


707 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

708 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

709 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

711 
	`__REDIRECT
 (
vwsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

712 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

714 
	`__REDIRECT_NTH
 (
vswsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

715 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

716 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

719 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

720 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

721 
__gnuc_va_li°
 
__¨g
);

722 
	`__isoc99_vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

723 
__gnuc_va_li°
 
__¨g
);

724 
	$__isoc99_vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

725 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

726 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

727 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

728 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

729 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

733 
__END_NAMESPACE_C99


737 
__BEGIN_NAMESPACE_STD


742 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

743 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

749 
wöt_t
 
	`gëwch¨
 ();

756 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

757 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

763 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

771 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

772 
__FILE
 *
__ª°ri˘
 
__°ªam
);

778 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

779 
__FILE
 *
__ª°ri˘
 
__°ªam
);

786 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

787 
__END_NAMESPACE_STD


790 #ifde‡
__USE_GNU


798 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

799 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

807 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

815 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

824 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

825 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

834 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

835 
__FILE
 *
__ª°ri˘
 
__°ªam
);

843 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

844 
__FILE
 *
__ª°ri˘
 
__°ªam
);

848 
__BEGIN_NAMESPACE_C99


852 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

853 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

854 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

855 
__END_NAMESPACE_C99


857 #ifde‡
__USE_GNU


858 
	~<xloˇÀ.h
>

862 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

863 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

864 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

865 
__loˇÀ_t
 
__loc
Ë
__THROW
;

874 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


875 
	#__√ed_iswxxx


	)

876 
	~<w˘y≥.h
>

880 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


881 
	~<bôs/wch¨2.h
>

884 #ifde‡
__LDBL_COMPAT


885 
	~<bôs/wch¨-ldbl.h
>

888 
__END_DECLS


896 #unde‡
__√ed_mb°©e_t


897 #unde‡
__√ed_wöt_t


	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

33 
	#__√ed_wöt_t


	)

34 
	~<wch¨.h
>

38 #i‚de‡
WEOF


39 
	#WEOF
 (0xffffffffu)

	)

42 #unde‡
__√ed_iswxxx


47 #i‚de‡
__iswxxx_deföed


48 
	#__iswxxx_deföed
 1

	)

50 
__BEGIN_NAMESPACE_C99


53 
	tw˘y≥_t
;

54 
	g__END_NAMESPACE_C99


56 #i‚de‡
_ISwbô


61 
	~<ídün.h
>

62 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


63 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

65 
	#_ISwbô
(
bô
) \

66 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

67 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

68 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

69 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

74 
	m__ISwuµî
 = 0,

75 
	m__ISwlowî
 = 1,

76 
	m__ISwÆpha
 = 2,

77 
	m__ISwdigô
 = 3,

78 
	m__ISwxdigô
 = 4,

79 
	m__ISw•a˚
 = 5,

80 
	m__ISw¥öt
 = 6,

81 
	m__ISwgøph
 = 7,

82 
	m__ISwbœnk
 = 8,

83 
	m__ISw˙ål
 = 9,

84 
	m__ISwpun˘
 = 10,

85 
	m__ISwÆnum
 = 11,

87 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

88 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

89 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

90 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

91 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

92 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

93 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

94 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

95 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

96 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

97 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

98 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

103 
__BEGIN_DECLS


105 
__BEGIN_NAMESPACE_C99


112 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

118 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

121 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

125 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

129 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

134 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

137 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

142 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

147 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

152 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

157 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

162 #ifde‡
__USE_ISOC99


163 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

172 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

176 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

177 
__END_NAMESPACE_C99


184 
__BEGIN_NAMESPACE_C99


187 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

188 
__END_NAMESPACE_C99


189 #ifde‡
__USE_GNU


190 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

193 
__BEGIN_NAMESPACE_C99


195 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

199 
__END_NAMESPACE_C99


201 
__END_DECLS


208 #ifde‡
_WCTYPE_H


214 
__BEGIN_DECLS


216 
__BEGIN_NAMESPACE_C99


219 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

222 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

223 
__END_NAMESPACE_C99


225 #ifde‡
__USE_XOPEN2K8


227 
	~<xloˇÀ.h
>

231 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

237 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

240 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

244 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

248 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

253 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

256 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

261 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

266 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

271 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

276 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

281 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

285 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

286 
__THROW
;

290 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

291 
__THROW
;

299 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

302 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

306 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

307 
__THROW
;

310 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

311 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

315 
__END_DECLS


	@
1
.
1
/usr/include
31
630
mysql_sum.c
mysql_sum.h
mystdlib.c
mystdlib.h
packetProcessing.c
packetProcessing.h
packetPrototype.h
server.c
/usr/include/arpa/inet.h
/usr/include/errno.h
/usr/include/mysql/mysql.h
/usr/include/netinet/in.h
/usr/include/pthread.h
/usr/include/semaphore.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/time.h
/usr/include/alloca.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/sched.h
/usr/include/stdint.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/ctype.h
/usr/include/gconv.h
/usr/include/wchar.h
/usr/include/wctype.h
